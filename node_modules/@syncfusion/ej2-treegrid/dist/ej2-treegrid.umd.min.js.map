{"version":3,"file":"ej2-treegrid.umd.min.js","sources":["../src/treegrid/utils.js","../src/treegrid/actions/crud-actions.js","../src/treegrid/models/column.js","../src/treegrid/models/filter-settings.js","../src/treegrid/models/textwrap-settings.js","../src/treegrid/actions/logger.js","../src/treegrid/base/constant.js","../src/treegrid/actions/clipboard.js","../src/treegrid/actions/selection.js","../src/treegrid/actions/print.js","../src/treegrid/models/search-settings.js","../src/treegrid/models/selection-settings.js","../src/treegrid/renderer/render.js","../src/treegrid/base/data.js","../src/treegrid/enum.js","../src/treegrid/models/page-settings.js","../src/treegrid/models/summary.js","../src/treegrid/models/edit-settings.js","../src/treegrid/models/sort-settings.js","../src/treegrid/models/infinite-scroll-settings.js","../src/treegrid/base/treegrid.js","../src/treegrid/actions/reorder.js","../src/treegrid/actions/resize.js","../src/treegrid/actions/rowdragdrop.js","../src/treegrid/models/rowdrop-settings.js","../src/treegrid/renderer/virtual-row-model-generator.js","../src/treegrid/actions/filter.js","../src/treegrid/actions/excel-export.js","../src/treegrid/actions/pdf-export.js","../src/treegrid/actions/page.js","../src/treegrid/actions/toolbar.js","../src/treegrid/actions/summary.js","../src/treegrid/actions/sort.js","../src/treegrid/actions/column-menu.js","../src/treegrid/actions/context-menu.js","../src/treegrid/actions/batch-edit.js","../src/treegrid/actions/edit.js","../src/treegrid/actions/command-column.js","../src/treegrid/actions/detail-row.js","../src/treegrid/renderer/virtual-tree-content-render.js","../src/treegrid/actions/virtual-scroll.js","../src/treegrid/actions/freeze-column.js","../src/treegrid/actions/column-chooser.js","../src/treegrid/actions/infinite-scroll.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Specifies whether remote data binding\n */\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\n/**\n * @param {TreeGrid | IGrid} parent - Tree Grid or Grid instance\n * @returns {boolean} - Returns whether custom binding\n */\nexport function isCountRequired(parent) {\n    if (parent.dataSource && 'result' in parent.dataSource) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether checkbox column is enabled\n */\nexport function isCheckboxcolumn(parent) {\n    for (var i = 0; i < parent.columns.length; i++) {\n        if (parent.columns[i].showCheckbox) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether filtering and searching done\n */\nexport function isFilterChildHierarchy(parent) {\n    if ((!isNullOrUndefined(parent.grid.searchSettings.key) && parent.grid.searchSettings.key !== '' &&\n        (parent.searchSettings.hierarchyMode === 'Child' || parent.searchSettings.hierarchyMode === 'None')) ||\n        (parent.allowFiltering && parent.grid.filterSettings.columns.length &&\n            (parent.filterSettings.hierarchyMode === 'Child' || parent.filterSettings.hierarchyMode === 'None'))) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {Object} records - Define records for which parent records has to be found\n * @hidden\n * @returns {Object} - Returns parent records collection\n */\nexport function findParentRecords(records) {\n    var datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns the expand status of record\n * @param {ITreeData} record - Define the record for which expand status has be found\n * @param {ITreeData[]} parents - Parent Data collection\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @param {ITreeData} records - Define the record for which child records has to be found\n * @returns {Object[]} - Returns child records collection\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || (!records.hasChildRecords && !isNullOrUndefined(records.childRecords)\n        && !records.childRecords.length)) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords;\n        for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n            datas.push(childRecords[i]);\n            if (childRecords[i].hasChildRecords || (!isNullOrUndefined(childRecords[i].childRecords) &&\n                childRecords[i].childRecords.length)) {\n                datas = datas.concat(findChildrenRecords(childRecords[i]));\n            }\n        }\n    }\n    return datas;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether local data binding\n */\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\n/**\n * @param {Object[]} array - Defines the array to be cloned\n * @returns {Object[]} - Returns cloned array collection\n */\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; array && i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\n/**\n * @param {ITreeData} value - Defined the dirty data to be cleaned\n * @returns {ITreeData} - Returns cleaned original data\n */\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    delete value.taskData;\n    delete value.uniqueID;\n    return value;\n}\n/**\n * @param {TreeGrid} parent - TreeGrid instance\n * @param {string} value - IdMapping field name\n * @param {boolean} requireFilter - Specified whether treegrid data is filtered\n * @returns {ITreeData} - Returns IdMapping matched record\n */\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[idFilter][value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[id][value];\n    }\n}\n/**\n * @param {HTMLTableRowElement} el - Row element\n * @returns {boolean} - Returns whether hidden\n */\nexport function isHidden(el) {\n    var style = window.getComputedStyle(el);\n    return ((style.display === 'none') || (style.visibility === 'hidden'));\n}\n","import { isNullOrUndefined, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData, getParentData } from '../utils';\n/**\n * Performs CRUD update to Tree Grid data source\n *\n * @param {{value: ITreeData, action: string }} details - Gets modified record value and CRUD action type\n * @param {TreeGrid} details.value - Gets modified record value\n * @param {string} details.action - CRUD action type\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Denotes whether Self Referential data binding\n * @param {number} addRowIndex - New add row index\n * @param {number} selectedIndex - Selected Row index\n * @param {string} columnName - Column field name\n * @param {ITreeData} addRowRecord - Newly added record\n * @returns {void}\n */\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var changedRecords = 'changedRecords';\n    var i;\n    var j;\n    var addedRecords = 'addedRecords';\n    var batchChanges;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    if (control.editSettings.mode === 'Batch') {\n        batchChanges = control.grid.editModule.getBatchChanges();\n    }\n    if (action === 'add' || (action === 'batchsave' && (control.editSettings.mode === 'Batch'\n        && batchChanges[addedRecords].length))) {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            if (typeof (modifiedData[k][key]) === 'object') {\n                modifiedData[k] = modifiedData[k][key];\n            }\n            var keys = modifiedData[k].taskData ? Object.keys(modifiedData[k].taskData) :\n                Object.keys(modifiedData[k]);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[i][key] === modifiedData[k][key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[i];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[control.idMapping] === currentData_1[control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[p][control.idMapping] === currentData_1[control.idMapping]) {\n                                        parentData['childRecords'].splice(p, 1);\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (Object.prototype.hasOwnProperty.call(treeData[i], keys[j]) && ((control.editSettings.mode !== 'Cell'\n                                    || (!isNullOrUndefined(batchChanges) && batchChanges[changedRecords].length === 0))\n                                    || keys[j] === columnName)) {\n                                    var editedData = getParentData(control, modifiedData[k].uniqueID);\n                                    treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                    if (editedData && editedData.taskData) {\n                                        editedData.taskData[keys[j]] = editedData[keys[j]] = treeData[i][keys[j]];\n                                    }\n                                }\n                            }\n                        }\n                        else if (action === 'add' || action === 'batchsave') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData.taskData[control.parentIdMapping] = treeData[i][control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData.taskData);\n                                }\n                                else {\n                                    if (!Object.prototype.hasOwnProperty.call(treeData[i], control.childMapping)) {\n                                        treeData[i][control.childMapping] = [];\n                                    }\n                                    treeData[i][control.childMapping].push(originalData.taskData);\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData.taskData);\n                                if (!isNullOrUndefined(originalData.parentItem)) {\n                                    updateParentRow(key, treeData[i + 1], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData.taskData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData.taskData);\n                                if (!isNullOrUndefined(originalData.parentItem)) {\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[i][control.childMapping])) {\n                    if (removeChildRecords(treeData[i][control.childMapping], modifiedData[k], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[i], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\n/**\n * Performs Add action to Tree Grid data source\n *\n * @param {{value: ITreeData, action: string }} details - Gets modified record value and CRUD action type\n * @param {TreeGrid} details.value - Gets modified record value\n * @param {string} details.action - CRUD action type\n * @param {Object[]} treeData - Tree Grid data source\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Denotes whether Self Referential data binding\n * @param {number} addRowIndex - New add row index\n * @param {number} selectedIndex - Selected Row index\n * @param {ITreeData} addRowRecord - Newly added record\n * @returns {void}\n */\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                value = extend({}, currentViewRecords[addRowIndex + 1]);\n                value = getPlainData(value);\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n                var currentdata = currentViewRecords[addRowIndex];\n                if (!isNullOrUndefined(currentdata) && currentdata[primaryKeys] === details.value[primaryKeys] || selectedIndex !== -1) {\n                    value = extend({}, currentdata);\n                }\n                else {\n                    value = extend({}, details.value);\n                }\n                value = getPlainData(value);\n                var internalProperty = 'internalProperties';\n                control.editModule[internalProperty].taskData = value;\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\n/**\n * @param {ITreeData[]} childRecords - Child Records collection\n * @param {Object} modifiedData - Modified data in crud action\n * @param {string} action - crud action type\n * @param {string} key - Primary key field name\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Specified whether Self Referential data binding\n * @param {ITreeData} originalData - Non updated data from data source, of edited data\n * @param {string} columnName - column field name\n * @returns {boolean} Returns whether child records exists\n */\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[j][key] === modifiedData[key] ||\n            (isSelfReference && childRecords[j][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                var editedData = getParentData(control, modifiedData.uniqueID);\n                for (var i = 0; i < keys.length; i++) {\n                    if (Object.prototype.hasOwnProperty.call(childRecords[j], keys[i]) && (control.editSettings.mode !== 'Cell' || keys[i] === columnName)) {\n                        editedData[keys[i]] = editedData.taskData[keys[i]] = childRecords[j][keys[i]] = modifiedData[keys[i]];\n                        if (control.grid.editSettings.mode === 'Normal' && control.editSettings.mode === 'Cell') {\n                            var editModule = 'editModule';\n                            control.grid.editModule[editModule].editRowIndex = modifiedData.index;\n                            control.grid.editModule[editModule].updateCurrentViewData(modifiedData);\n                        }\n                    }\n                }\n                break;\n            }\n            else if (action === 'add' || action === 'batchsave') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[control.parentIdMapping] = childRecords[j][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                    else {\n                        if (!Object.prototype.hasOwnProperty.call(childRecords[j], control.childMapping)) {\n                            childRecords[j][control.childMapping] = [];\n                        }\n                        childRecords[j][control.childMapping].push(originalData.taskData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData.taskData);\n                    if (!isNullOrUndefined(originalData.parentItem)) {\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData.taskData);\n                    if (!isNullOrUndefined(originalData.parentItem)) {\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n            }\n            else {\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[j][control.childMapping])) {\n            if (removeChildRecords(childRecords[j][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[j], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\n/**\n * @param {string} key - Primary key field name\n * @param {ITreeData} record - Parent Record which has to be updated\n * @param {string} action - CRUD action type\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Specified whether self referential data binding\n * @param {ITreeData} child - Specifies child record\n * @returns {void}\n */\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    if ((control.editSettings.newRowPosition === 'Above' || control.editSettings.newRowPosition === 'Below')\n        && ((action === 'add' || action === 'batchsave')) && !isNullOrUndefined(child.parentItem)) {\n        var parentData = getParentData(control, child.parentItem.uniqueID);\n        parentData.childRecords.push(child);\n    }\n    else {\n        var currentRecords = control.grid.getCurrentViewRecords();\n        var index_1;\n        currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n            index_1 = i;\n            return;\n        } });\n        if (!isNullOrUndefined(index_1)) {\n            record = currentRecords[index_1];\n        }\n        if (control.enableVirtualization && isNullOrUndefined(record) && !isNullOrUndefined(child)) {\n            record = getValue('uniqueIDCollection.' + child.parentUniqueID, control);\n        }\n        if (!isSelfReference && !isNullOrUndefined(record.childRecords) && record.childRecords.length) {\n            record.hasChildRecords = true;\n        }\n        else {\n            record.hasChildRecords = false;\n        }\n        if (action === 'add' || action === 'batchsave') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n                child = currentRecords.filter(function (e) {\n                    if (e.parentUniqueID === record.uniqueID) {\n                        return e;\n                    }\n                    else {\n                        return null;\n                    }\n                });\n            }\n            var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index_1 + 1];\n            if (control.editSettings.newRowPosition !== 'Below') {\n                if (!Object.prototype.hasOwnProperty.call(record, 'childRecords')) {\n                    record.childRecords = [];\n                }\n                else {\n                    if (!isNullOrUndefined(child) && record[key] !== child[key]) {\n                        record.childRecords.push(child);\n                    }\n                }\n                if (record.childRecords.indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                    record.childRecords.unshift(childRecords);\n                }\n                if (isSelfReference) {\n                    if (!Object.prototype.hasOwnProperty.call(record, control.childMapping)) {\n                        record[control.childMapping] = [];\n                    }\n                    if (record[control.childMapping].indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                        record[control.childMapping].unshift(childRecords);\n                    }\n                }\n            }\n        }\n        var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n        var data = control.grid.dataSource instanceof DataManager ?\n            control.grid.dataSource.dataSource.json : control.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            if (data[i][primaryKeys] === record[primaryKeys]) {\n                data[i] = record;\n                break;\n            }\n        }\n        control.grid.setRowData(key, record);\n        var row = control.getRowByIndex(index_1);\n        if (control.editSettings.mode === 'Batch') {\n            row = control.getRows()[control.grid.getRowIndexByPrimaryKey(record[key])];\n        }\n        var movableRow = void 0;\n        if (control.frozenRows || control.getFrozenColumns()) {\n            movableRow = control.getMovableRowByIndex(index_1);\n        }\n        if (!control.enableVirtualization && !isNullOrUndefined(row) || !isNullOrUndefined(movableRow)) {\n            var index_2 = control.treeColumnIndex;\n            if (control.allowRowDragAndDrop && control.enableImmutableMode) {\n                index_2 = index_2 + 1;\n            }\n            control.renderModule.cellRender({\n                data: record, cell: row.cells[index_2] ? row.cells[index_2]\n                    : movableRow.cells[index_2 - control.getFrozenColumns()],\n                column: control.grid.getColumns()[control.treeColumnIndex],\n                requestType: action\n            });\n        }\n    }\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         *\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         *\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `disableHtmlEncode` is set to true, it encodes the HTML of the header and content cells.\n         *\n         * @default true\n         */\n        this.disableHtmlEncode = true;\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         *\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         *\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         *\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         *\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         *\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    /**\n     * Update the State changes reflected for TreeGrid columndirective in react platform.\n     *\n     * @param {Column} column - specifies the column\n     * @returns {void}\n     * @hidden\n     */\n    Column.prototype.setProperties = function (column) {\n        //Angular two way binding\n        var keys = Object.keys(column);\n        for (var i = 0; i < keys.length; i++) {\n            this[keys[i]] = column[keys[i]];\n            //Refresh the react columnTemplates on state change\n            if (this.parent && this.parent['isReact'] && keys[i] === 'template') {\n                var refreshReactColumnTemplateByUid = 'refreshReactColumnTemplateByUid';\n                this.parent.clipboardModule['treeGridParent'][refreshReactColumnTemplateByUid](this.uid);\n            }\n        }\n    };\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Represents the Tree Grid predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the textwrap behavior of the TreeGrid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Logger as GridLogger, Grid, detailLists } from '@syncfusion/ej2-grids';\n/**\n * Logger module for TreeGrid\n *\n * @hidden\n */\nvar DOC_URL = 'https://ej2.syncfusion.com/documentation/treegrid';\nvar BASE_DOC_URL = 'https://ej2.syncfusion.com/documentation';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nvar WARNING = '[EJ2TreeGrid.Warning]';\nvar ERROR = '[EJ2TreeGrid.Error]';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nvar INFO = '[EJ2TreeGrid.Info]';\nvar IsRowDDEnabled = false;\nvar Logger = /** @class */ (function (_super) {\n    __extends(Logger, _super);\n    function Logger(parent) {\n        var _this = this;\n        Grid.Inject(GridLogger);\n        _this = _super.call(this, parent) || this;\n        return _this;\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Logger module name\n     */\n    Logger.prototype.getModuleName = function () {\n        return 'logger';\n    };\n    Logger.prototype.log = function (types, args) {\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        for (var i = 0; i < type.length; i++) {\n            var item = detailLists[type[i]];\n            var cOp = item.check(args, this.parent);\n            if (cOp.success) {\n                var message = item.generateMessage(args, this.parent, cOp.options);\n                message = message.replace('EJ2Grid', 'EJ2TreeGrid').replace('* Hierarchy Grid', '').replace('* Grouping', '');\n                if (IsRowDDEnabled && type[i] === 'primary_column_missing') {\n                    message = message.replace('Editing', 'Row DragAndDrop');\n                    IsRowDDEnabled = false;\n                }\n                var index = message.indexOf('https');\n                var gridurl = message.substring(index);\n                if (type[i] === 'module_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/modules');\n                }\n                else if (type[i] === 'primary_column_missing' || type[i] === 'selection_key_missing') {\n                    message = message.replace(gridurl, BASE_DOC_URL + '/api/treegrid/column/#isprimarykey');\n                }\n                else if (type[i] === 'grid_remote_edit') {\n                    message = message.replace(gridurl, DOC_URL + '/edit');\n                }\n                else if (type[i] === 'virtual_height') {\n                    message = message.replace(gridurl, DOC_URL + '/virtual');\n                }\n                else if (type[i] === 'check_datasource_columns') {\n                    message = message.replace(gridurl, DOC_URL + '/columns');\n                }\n                else if (type[i] === 'locale_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/global-local/#localization');\n                }\n                if (type[i] === 'datasource_syntax_mismatch') {\n                    if (!isNullOrUndefined(this.treeGridObj) && !isNullOrUndefined(this.treeGridObj.dataStateChange)) {\n                        // eslint-disable-next-line no-console\n                        console[item.logType](message);\n                    }\n                }\n                else {\n                    // eslint-disable-next-line no-console\n                    console[item.logType](message);\n                }\n            }\n        }\n    };\n    Logger.prototype.treeLog = function (types, args, treeGrid) {\n        this.treeGridObj = treeGrid;\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        if (treeGrid.allowRowDragAndDrop && !treeGrid.columns.filter(function (column) { return column.isPrimaryKey; }).length) {\n            IsRowDDEnabled = true;\n            this.log('primary_column_missing', args);\n        }\n        for (var i = 0; i < type.length; i++) {\n            var item = treeGridDetails[type[i]];\n            var cOp = item.check(args, treeGrid);\n            if (cOp.success) {\n                var message = item.generateMessage(args, treeGrid, cOp.options);\n                // eslint-disable-next-line no-console\n                console[item.logType](message);\n            }\n        }\n    };\n    return Logger;\n}(GridLogger));\nexport { Logger };\nexport var treeGridDetails = {\n    // eslint-disable-next-line camelcase\n    mapping_fields_missing: {\n        type: 'mapping_fields_missing',\n        logType: 'error',\n        check: function (args, parent) {\n            var opt = { success: false };\n            if ((isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.childMapping)\n                && isNullOrUndefined(parent.parentIdMapping)) ||\n                (!isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.parentIdMapping)) ||\n                (isNullOrUndefined(parent.idMapping) && !isNullOrUndefined(parent.parentIdMapping))) {\n                opt = { success: true };\n            }\n            return opt;\n        },\n        generateMessage: function () {\n            return ERROR + ':' + ' MAPPING FIELDS MISSING \\n' + 'One of the following fields is missing. It is ' +\n                'required for the hierarchical relationship of records in TreeGrid:\\n' +\n                '* childMapping\\n' + '* idMapping\\n' + '* parentIdMapping\\n' +\n                'Refer to the following documentation links for more details.\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#childmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#idmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#$parentidmapping\");\n        }\n    }\n};\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var dataStateChange = 'dataStateChange';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var beforeCopy = 'beforeCopy';\n/** @hidden */\nexport var beforePaste = 'beforePaste';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchDelete = 'beforeBatchDelete';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var destroy = 'destroy';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n/** @hidden */\nexport var rowDrag = 'rowDrag';\n/** @hidden */\nexport var rowDragStartHelper = 'rowDragStartHelper';\n/** @hidden */\nexport var rowDrop = 'rowDrop';\n/** @hidden */\nexport var rowDragStart = 'rowDragStart';\n/** @hidden */\nexport var rowsAdd = 'rows-add';\n/** @hidden */\nexport var rowsRemove = 'rows-remove';\n/** @hidden */\nexport var rowdraging = 'row-draging';\n/** @hidden */\nexport var rowDropped = 'row-dropped';\n/** @hidden */\nexport var autoCol = 'auto-col';\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { Clipboard as GridClipboard } from '@syncfusion/ej2-grids';\n/**\n * The `Clipboard` module is used to handle clipboard copy action.\n *\n * @hidden\n */\nvar TreeClipboard = /** @class */ (function (_super) {\n    __extends(TreeClipboard, _super);\n    function TreeClipboard(parent) {\n        var _this = _super.call(this, parent.grid) || this;\n        _this.treeCopyContent = '';\n        _this.copiedUniqueIdCollection = [];\n        _this.treeGridParent = parent;\n        return _this;\n    }\n    TreeClipboard.prototype.setCopyData = function (withHeader) {\n        var copyContent = 'copyContent';\n        var getCopyData = 'getCopyData';\n        var isSelect = 'isSelect';\n        var uniqueID = 'uniqueID';\n        var currentRecords = this.treeGridParent.getCurrentViewRecords();\n        if (window.getSelection().toString() === '') {\n            this.clipBoardTextArea.value = this[copyContent] = '';\n            var rows = this.treeGridParent.grid.getRows();\n            if (this.treeGridParent.selectionSettings.mode !== 'Cell') {\n                var selectedIndexes = this.treeGridParent.getSelectedRowIndexes().sort(function (a, b) {\n                    return a - b;\n                });\n                for (var i = 0; i < selectedIndexes.length; i++) {\n                    if (i > 0) {\n                        this.treeCopyContent += '\\n';\n                    }\n                    if (!rows[selectedIndexes[i]].classList.contains('e-summaryrow')) {\n                        var cells = [].slice.call(rows[selectedIndexes[i]].querySelectorAll('.e-rowcell'));\n                        var uniqueid = this.treeGridParent.getSelectedRecords()[i][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            if (this.treeGridParent.copyHierarchyMode === 'Parent' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.parentContentData(currentRecords, selectedIndexes[i], rows, withHeader, i);\n                            }\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            this.treeCopyContent += this[copyContent];\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            if (this.treeGridParent.copyHierarchyMode === 'Child' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.childContentData(currentRecords, selectedIndexes[i], rows, withHeader);\n                            }\n                        }\n                    }\n                }\n                if (withHeader) {\n                    var headerTextArray = [];\n                    for (var i = 0; i < this.treeGridParent.getVisibleColumns().length; i++) {\n                        headerTextArray[i] = this.treeGridParent.getVisibleColumns()[i].headerText;\n                    }\n                    this[getCopyData](headerTextArray, false, '\\t', withHeader);\n                    this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                }\n                var args = {\n                    data: this.treeCopyContent,\n                    cancel: false\n                };\n                this.treeGridParent.trigger(events.beforeCopy, args);\n                if (args.cancel) {\n                    return;\n                }\n                this.clipBoardTextArea.value = this[copyContent] = args.data;\n                if (!Browser.userAgent.match(/ipad|ipod|iphone/i)) {\n                    this.clipBoardTextArea.select();\n                }\n                else {\n                    this.clipBoardTextArea.setSelectionRange(0, this.clipBoardTextArea.value.length);\n                }\n                this[isSelect] = true;\n                this.copiedUniqueIdCollection = [];\n                this.treeCopyContent = '';\n            }\n            else {\n                _super.prototype.setCopyData.call(this, withHeader);\n            }\n        }\n    };\n    TreeClipboard.prototype.parentContentData = function (currentRecords, selectedIndex, rows, withHeader, index) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var parentItem = 'parentItem';\n        var uniqueID = 'uniqueID';\n        var level = 'level';\n        if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem])) {\n            var treeLevel = currentRecords[selectedIndex][parentItem][level];\n            for (var i = 0; i < treeLevel + 1; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem]) &&\n                        currentRecords[j][uniqueID] === currentRecords[selectedIndex][parentItem][uniqueID]) {\n                        selectedIndex = j;\n                        var cells = [].slice.call(rows[selectedIndex].querySelectorAll('.e-rowcell'));\n                        var uniqueid = currentRecords[j][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            if (index > 0) {\n                                this.treeCopyContent = this.treeCopyContent + this[copyContent] + '\\n';\n                            }\n                            else {\n                                this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                            }\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    TreeClipboard.prototype.copy = function (withHeader) {\n        _super.prototype.copy.call(this, withHeader);\n    };\n    TreeClipboard.prototype.paste = function (data, rowIndex, colIndex) {\n        _super.prototype.paste.call(this, data, rowIndex, colIndex);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns clipboard module name\n     */\n    TreeClipboard.prototype.getModuleName = function () {\n        return 'clipboard';\n    };\n    /**\n     * To destroy the clipboard\n     *\n     * @returns {void}\n     * @hidden\n     */\n    TreeClipboard.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n    };\n    TreeClipboard.prototype.childContentData = function (currentRecords, selectedIndex, rows, withHeader) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var childRecords = 'childRecords';\n        var hasChildRecords = 'hasChildRecords';\n        var uniqueID = 'uniqueID';\n        if (currentRecords[selectedIndex][hasChildRecords]) {\n            var childData = currentRecords[selectedIndex][childRecords];\n            for (var i = 0; i < childData.length; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(childData[i][uniqueID]) && currentRecords[j][uniqueID] === childData[i][uniqueID]) {\n                        if ((!isNullOrUndefined(rows[j])) && !rows[j].classList.contains('e-summaryrow')) {\n                            var cells = [].slice.call(rows[j].querySelectorAll('.e-rowcell'));\n                            var uniqueid = currentRecords[j][uniqueID];\n                            if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                                this[getCopyData](cells, false, '\\t', withHeader);\n                                this.treeCopyContent += ('\\n' + this[copyContent]);\n                                this[copyContent] = '';\n                                this.copiedUniqueIdCollection.push(uniqueid);\n                                this.childContentData(currentRecords, j, rows, withHeader);\n                            }\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    return TreeClipboard;\n}(GridClipboard));\nexport { TreeClipboard };\n","import { isNullOrUndefined, removeClass } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData, isRemoteData, isCheckboxcolumn, findChildrenRecords } from '../utils';\n/**\n * TreeGrid Selection module\n *\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.filteredList = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Selection module name\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.grid.on('colgroup-refresh', this.headerCheckbox, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.grid.off('colgroup-refresh', this.headerCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = [];\n            rowIndex.push(target.closest('tr').rowIndex);\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var columns = (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[col].showCheckbox) {\n                mappingUid = this.parent.columns[col].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[j];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            var checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n        else if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length > 0) {\n            var checkWrap = this.parent.getHeaderContent().querySelectorAll('.e-checkbox-wrapper')[0];\n            var checkBoxvalue = checkWrap.querySelector('.e-frame').classList.contains('e-check');\n            if (this.parent.autoCheckHierarchy && checkBoxvalue) {\n                this.headerSelection(checkBoxvalue);\n            }\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        var checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        if (this.parent.allowTextWrap) {\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n        }\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            if (!container.cell.querySelector('.e-hierarchycheckbox')) {\n                containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n            }\n        }\n        else {\n            var spanEle = this.parent.createElement('span', { className: 'e-treecheckbox' });\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            var divEle = this.parent.createElement('div', { className: 'e-treecheckbox-container' });\n            divEle.appendChild(checkWrap);\n            divEle.appendChild(spanEle);\n            container.cell.appendChild(divEle);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[i]];\n            var flatRecord = getParentData(this.parent, record.uniqueID);\n            record = flatRecord;\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            for (var j = 0; j < keys.length; j++) {\n                if (Object.prototype.hasOwnProperty.call(flatRecord, keys[j])) {\n                    flatRecord[keys[j]] = record[keys[j]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (!childRecords[count].isSummaryRow) {\n                    if (childRecords[count].hasChildRecords) {\n                        this.traverSelection(childRecords[count], checkboxState, true);\n                    }\n                    else {\n                        this.updateSelectedItems(childRecords[count], checkboxState);\n                    }\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            for (var i = 0; i < childRecords.length; i++) {\n                var currentRecord = getParentData(this.parent, childRecords[i].uniqueID);\n                var checkBoxRecord = currentRecord;\n                if (!isNullOrUndefined(checkBoxRecord)) {\n                    if (checkBoxRecord.checkboxState === 'indeterminate') {\n                        indeter++;\n                    }\n                    else if (checkBoxRecord.checkboxState === 'check') {\n                        checkChildRecords++;\n                    }\n                }\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && indeter === 0) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var _this = this;\n        var index = -1;\n        var length = 0;\n        if (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) {\n            var filterResult = this.parent.filterModule.filteredResult;\n            if (this.filteredList.length === 0) {\n                this.filteredList = filterResult;\n            }\n            else {\n                if (this.filteredList !== filterResult) {\n                    this.filteredList = filterResult;\n                }\n            }\n        }\n        if (this.filteredList.length > 0) {\n            if (!this.parent.filterSettings.columns.length && this.filteredList.length) {\n                this.filteredList = [];\n            }\n        }\n        var data = (!isNullOrUndefined(this.parent.filterModule) &&\n            (this.filteredList.length > 0)) ? this.filteredList :\n            this.parent.flatData;\n        data = isRemoteData(this.parent) ? this.parent.getCurrentViewRecords() : data;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[i].checkboxState === 'check') {\n                        continue;\n                    }\n                    data[i].checkboxState = 'check';\n                    this.updateSelectedItems(data[i], data[i].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[i]);\n                    if (index > -1) {\n                        data[i].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[i], data[i].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[i]);\n                        }\n                    }\n                }\n            }\n        }\n        if (checkAll === false && this.parent.enableVirtualization) {\n            this.selectedItems = [];\n            this.selectedIndexes = [];\n            data.filter(function (rec) {\n                rec.checkboxState = 'uncheck';\n                _this.updateSelectedItems(rec, rec.checkboxState);\n            });\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderContent().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length && !checkAll) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState) {\n        var record = this.parent.getCurrentViewRecords().filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var checkedRecord;\n        var recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        var checkboxRecord = getParentData(this.parent, currentRecord.uniqueID);\n        var checkbox;\n        if (recordIndex > -1) {\n            var tr = this.parent.getRows()[recordIndex];\n            var movableTr = void 0;\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                movableTr = this.parent.getMovableDataRows()[recordIndex];\n            }\n            checkbox = tr.querySelectorAll('.e-frame')[0] ? tr.querySelectorAll('.e-frame')[0]\n                : movableTr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        checkedRecord = checkboxRecord;\n        if (isNullOrUndefined(checkedRecord)) {\n            checkedRecord = currentRecord;\n        }\n        checkedRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && this.parent.enableVirtualization && ((!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(checkedRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(checkedRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (isCheckboxcolumn(this.parent)) {\n            if (this.parent.autoCheckHierarchy) {\n                if ((requestType === 'sorting' || requestType === 'paging')) {\n                    var rows = this.parent.grid.getRows();\n                    childData = this.parent.getCurrentViewRecords();\n                    childLength = childData.length;\n                    this.selectedIndexes = [];\n                    for (var i = 0; i < childLength; i++) {\n                        if (!rows[i].classList.contains('e-summaryrow')) {\n                            this.updateSelectedItems(childData[i], childData[i].checkboxState);\n                        }\n                    }\n                }\n                else if (requestType === 'delete' || args.action === 'add') {\n                    var updatedData = [];\n                    if (requestType === 'delete') {\n                        updatedData = args.data;\n                    }\n                    else {\n                        updatedData.push(args.data);\n                    }\n                    for (var i = 0; i < updatedData.length; i++) {\n                        if (requestType === 'delete') {\n                            var index = this.parent.flatData.indexOf(updatedData[i]);\n                            var checkedIndex = this.selectedIndexes.indexOf(index);\n                            this.selectedIndexes.splice(checkedIndex, 1);\n                            this.updateSelectedItems(updatedData[i], 'uncheck');\n                        }\n                        if (!isNullOrUndefined(updatedData[i].parentItem)) {\n                            this.updateParentSelection(updatedData[i].parentItem);\n                        }\n                    }\n                }\n                else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                    args.data.checkboxState = 'uncheck';\n                }\n                else if (requestType === 'filtering' || requestType === 'searching' || requestType === 'refresh'\n                    && !isRemoteData(this.parent)) {\n                    this.selectedItems = [];\n                    this.selectedIndexes = [];\n                    childData = (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) ?\n                        this.parent.getCurrentViewRecords() : this.parent.flatData;\n                    childData.forEach(function (record) {\n                        if (_this.parent.enableVirtualization) {\n                            if (record.hasChildRecords) {\n                                _this.updateParentSelection(record);\n                            }\n                            else {\n                                _this.updateSelectedItems(record, record.checkboxState);\n                            }\n                            var child = findChildrenRecords(record);\n                            child = _this.getFilteredChildRecords(child);\n                            for (var i = 0; i < child.length; i++) {\n                                if (child[i].hasChildRecords) {\n                                    _this.updateParentSelection(child[i]);\n                                }\n                                else if (!(child[i].hasChildRecords) && !isNullOrUndefined(child[i])) {\n                                    _this.updateSelectedItems(child[i], child[i].checkboxState);\n                                }\n                            }\n                        }\n                        else {\n                            if (record.hasChildRecords) {\n                                _this.updateParentSelection(record);\n                            }\n                            else {\n                                _this.updateSelectedItems(record, record.checkboxState);\n                            }\n                        }\n                    });\n                    this.headerSelection();\n                }\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n *\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Print module name\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    __decorate([\n        Property(true)\n    ], SelectionSettings.prototype, \"enableToggle\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { templateCompiler, extend } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * TreeGrid render module\n *\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n        this.parent.grid.on('reactTemplateRender', this.reactTemplateRender, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     *\n     * @param {RowDataBoundEventArgs} args - Row details before its bound to DOM\n     * @returns {void}\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        if (!isNullOrUndefined(data.parentItem) && !isFilterChildHierarchy(this.parent) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        //addClass([args.row], 'e-gridrowindex' + index + 'level' + (<ITreeData>args.data).level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (args.row.querySelector('.e-treegridexpand')) {\n            args.row.setAttribute('aria-expanded', 'true');\n        }\n        else if (args.row.querySelector('.e-treegridcollapse')) {\n            args.row.setAttribute('aria-expanded', 'false');\n        }\n        if (this.parent.enableCollapseAll && this.parent.initialRender) {\n            if (!isNullOrUndefined(data.parentItem)) {\n                args.row.style.display = 'none';\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     *\n     * @param {QueryCellInfoEventArgs} args - Cell detail before its bound to DOM\n     * @returns {void}\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var index;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByUid(args.column.uid);\n        var summaryRow = data.isSummaryRow;\n        var frozenColumns = this.parent.getFrozenColumns();\n        if (!isNullOrUndefined(data.parentItem)) {\n            index = data.parentItem.index;\n        }\n        else {\n            index = data.index;\n        }\n        var columnIndex;\n        var getVirtualColIndexByUid = 'getVirtualColIndexByUid';\n        if (this.parent.enableColumnVirtualization && !this.parent.initialRender) {\n            columnIndex = this.parent[getVirtualColIndexByUid](args.column.uid);\n        }\n        else {\n            columnIndex = grid.getColumnIndexByUid(args.column.uid);\n        }\n        if (columnIndex === this.parent.treeColumnIndex && (args.requestType === 'add' || args.requestType\n            === 'rowDragAndDrop' || args.requestType === 'delete' || isNullOrUndefined(args.cell.querySelector('.e-treecell')))) {\n            var container = createElement('div', { className: 'e-treecolumn-container' });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', { className: 'e-icons' });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                addClass([expandIcon], (expand) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', { className: 'e-treecell' });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            this.updateTreeCell(args, cellElement);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        else if (this.templateResult) {\n            this.templateResult = null;\n        }\n        var freeze = (grid.getFrozenLeftColumnsCount() > 0 || grid.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (!freeze) {\n            if (frozenColumns > this.parent.treeColumnIndex && frozenColumns > 0 &&\n                grid.getColumnIndexByUid(args.column.uid) === frozenColumns) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if (frozenColumns < this.parent.treeColumnIndex && frozenColumns > 0 &&\n                (grid.getColumnIndexByUid(args.column.uid) === frozenColumns\n                    || grid.getColumnIndexByUid(args.column.uid) === frozenColumns - 1)) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if (frozenColumns === this.parent.treeColumnIndex && frozenColumns > 0 &&\n                grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex - 1) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n        }\n        else {\n            var freezerightColumns = grid.getFrozenRightColumns();\n            var freezeLeftColumns = grid.getFrozenLeftColumns();\n            var movableColumns = grid.getMovableColumns();\n            if ((freezerightColumns.length > 0) && freezerightColumns[0].field === args.column.field) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if ((freezeLeftColumns.length > 0) && freezeLeftColumns[0].field === args.column.field) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if ((movableColumns.length > 0) && movableColumns[0].field === args.column.field) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                totalIconsWidth += 10;\n                if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n                    cellElement = args.cell.querySelector('.e-treecell');\n                }\n                else {\n                    cellElement = args.cell.querySelector('.e-treecheckbox');\n                }\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            if (args.cell.querySelector('.e-treecell') != null) {\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData;\n            }\n            else {\n                args.cell.innerHTML = summaryData;\n            }\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement) {\n        var columnModel = getValue('columnModel', this.parent);\n        var treeColumn = columnModel[this.parent.treeColumnIndex];\n        var templateFn = 'templateFn';\n        var colindex = args.column.index;\n        if (isNullOrUndefined(treeColumn.field)) {\n            args.cell.setAttribute('aria-colindex', colindex + '');\n        }\n        if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template)) {\n            args.column.template = treeColumn.template;\n            args.column[templateFn] = templateCompiler(args.column.template);\n            args.cell.classList.add('e-templatecell');\n        }\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            var len = args.cell.children.length;\n            var tempID = this.parent.element.id + args.column.uid;\n            if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template)) {\n                var portals = 'portals';\n                var renderReactTemplates = 'renderReactTemplates';\n                if (this.parent.isReact && typeof (args.column.template) !== 'string') {\n                    args.column[templateFn](args.data, this.parent, 'template', tempID, null, null, cellElement);\n                    if (isNullOrUndefined(this.parent.grid[portals])) {\n                        this.parent.grid[portals] = this.parent[portals];\n                    }\n                    this.parent.notify('renderReactTemplate', this.parent[portals]);\n                    this.parent[renderReactTemplates]();\n                }\n                else {\n                    var str = 'isStringTemplate';\n                    var result = args.column[templateFn](extend({ 'index': '' }, args.data), this.parent, 'template', tempID, this.parent[str]);\n                    appendChildren(cellElement, result);\n                }\n                delete args.column.template;\n                delete args.column[templateFn];\n                args.cell.innerHTML = '';\n            }\n            else {\n                for (var i = 0; i < len; len = args.cell.children.length) {\n                    cellElement.appendChild(args.cell.children[i]);\n                }\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.reactTemplateRender = function (args) {\n        var renderReactTemplates = 'renderReactTemplates';\n        var portals = 'portals';\n        this.parent[portals] = args;\n        this.parent.notify('renderReactTemplate', this.parent[portals]);\n        this.parent[renderReactTemplates]();\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n        this.parent.grid.off('reactTemplateRender', this.reactTemplateRender);\n    };\n    return Render;\n}());\nexport { Render };\n","import { extend, isNullOrUndefined, setValue, getValue, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, isCountRequired, getExpandStatus } from '../utils';\nimport * as events from './constant';\n/**\n * Internal dataoperations for tree grid\n *\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.addedRecords = 'addedRecords';\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {boolean} -Returns whether remote data binding\n     */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     *\n     * @param {Object} data - Provide tree grid datasource to convert to flat data\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 && !(this.parent.dataSource instanceof DataManager) ?\n            this.parent.dataSource : []);\n        this.parent.parentData = [];\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    var filterKey = this.parent.query.params.filter(function (param) { return param.key === 'IdMapping'; });\n                    if (this.parent.initialRender && !filterKey.length) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                if (!this.parent.hasChildMapping) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.convertJSONData(data);\n        }\n    };\n    DataManipulation.prototype.convertJSONData = function (data) {\n        this.hierarchyData = [];\n        this.taskIds = [];\n        if (!this.parent.idMapping) {\n            this.hierarchyData = data;\n        }\n        else {\n            for (var i = 0; i < Object.keys(data).length; i++) {\n                var tempData = data[i];\n                this.hierarchyData.push(extend({}, tempData));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n        }\n        if (this.isSelfReference) {\n            var selfData = [];\n            var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                .group(this.parent.parentIdMapping));\n            for (var i = 0; i < mappingData.length; i++) {\n                var groupData = mappingData[i];\n                var index = this.taskIds.indexOf(groupData.key);\n                if (!isNullOrUndefined(groupData.key)) {\n                    if (index > -1) {\n                        var childData = (groupData.items);\n                        this.hierarchyData[index][this.parent.childMapping] = childData;\n                        continue;\n                    }\n                }\n                selfData.push.apply(selfData, groupData.items);\n            }\n            this.hierarchyData = this.selfReferenceUpdate(selfData);\n        }\n        if (!Object.keys(this.hierarchyData).length) {\n            var isGantt = 'isGantt';\n            var referenceData = !(this.parent.dataSource instanceof DataManager) && this.parent[isGantt];\n            this.parent.flatData = referenceData ? (this.parent.dataSource) : [];\n        }\n        else {\n            this.createRecords(this.hierarchyData);\n        }\n        this.storedIndex = -1;\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     *\n     * @param {BeforeDataBoundArgs} args - contains data before its bounds to tree grid\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        if (!this.parent.hasChildMapping && !this.parentItems.length &&\n            (!this.parent.loadChildOnDemand)) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!this.parent.loadChildOnDemand) {\n                for (var rec = 0; rec < records.length; rec++) {\n                    if (isCountRequired(this.parent) && records[rec].hasChildRecords && this.parent.initialRender) {\n                        records[rec].expanded = false;\n                    }\n                    if (isNullOrUndefined(records[rec].index)) {\n                        records[rec].taskData = extend({}, records[rec]);\n                        records[rec].uniqueID = getUid(this.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + records[rec].uniqueID, records[rec], this.parent);\n                        records[rec].level = 0;\n                        records[rec].index = Math.ceil(Math.random() * 1000);\n                        if ((records[rec][this.parent.hasChildMapping] ||\n                            this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)) {\n                            records[rec].hasChildRecords = true;\n                        }\n                        records[rec].checkboxState = 'uncheck';\n                    }\n                }\n            }\n            else {\n                if (!isNullOrUndefined(records)) {\n                    this.convertToFlatData(records);\n                }\n            }\n        }\n        args.result = this.parent.loadChildOnDemand ? this.parent.flatData : records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     *\n     * @param {{record: ITreeData, rows: HTMLTableRowElement[], parentRow: HTMLTableRowElement}} rowDetails - Row details for which child rows has to be fetched\n     * @param {ITreeData} rowDetails.record - current expanding record\n     * @param {HTMLTableRowElement[]} rowDetails.rows - Expanding Row element\n     * @param {HTMLTableRowElement} rowDetails.parentRow  - Curent expanding row element\n     * @param {boolean} isChild - Specified whether current record is already a child record\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails, isChild) {\n        var gridRows = this.parent.getRows();\n        if (this.parent.rowTemplate) {\n            var rows = this.parent.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var childRecord;\n        if (rowDetails.rows.length > 0) {\n            if (!isChild) {\n                rowDetails.record.expanded = true;\n            }\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                rowDetails.rows[i].style.display = 'table-row';\n                if (this.parent.loadChildOnDemand) {\n                    var targetEle = rowDetails.rows[i].getElementsByClassName('e-treegridcollapse')[0];\n                    childRecord = this.parent.rowTemplate ? this.parent.grid.getCurrentViewRecords()[rowDetails.rows[i].rowIndex] :\n                        this.parent.grid.getRowObjectFromUID(rowDetails.rows[i].getAttribute('data-Uid')).data;\n                    if (!isNullOrUndefined(targetEle) && childRecord.expanded) {\n                        addClass([targetEle], 'e-treegridexpand');\n                        removeClass([targetEle], 'e-treegridcollapse');\n                    }\n                    var childRows = [];\n                    childRows = gridRows.filter(function (r) {\n                        return r.querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1));\n                    });\n                    if (childRows.length && childRecord.expanded) {\n                        this.collectExpandingRecs({ record: childRecord, rows: childRows, parentRow: rowDetails.parentRow }, true);\n                    }\n                }\n                var expandingTd = rowDetails.rows[i].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            }\n        }\n        else {\n            this.fetchRemoteChildData({ record: rowDetails.record, rows: rowDetails.rows, parentRow: rowDetails.parentRow });\n        }\n    };\n    DataManipulation.prototype.fetchRemoteChildData = function (rowDetails) {\n        var _this = this;\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        var dm = this.parent.dataSource;\n        var qry = this.parent.grid.getDataModule().generateQuery();\n        var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n        qry.queries = clonequries;\n        qry.isCountRequired = true;\n        qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n        showSpinner(this.parent.element);\n        dm.executeQuery(qry).then(function (e) {\n            var datas = _this.parent.grid.currentViewData.slice();\n            var inx = datas.indexOf(rowDetails.record);\n            if (inx === -1) {\n                _this.parent.grid.getRowsObject().forEach(function (rows) {\n                    if (rows.data.uniqueID === rowDetails.record.uniqueID) {\n                        inx = rows.index;\n                    }\n                });\n            }\n            var haveChild = getObject('actual.nextLevel', e);\n            var result = e.result;\n            rowDetails.record.childRecords = result;\n            for (var r = 0; r < result.length; r++) {\n                result[r].taskData = extend({}, result[r]);\n                result[r].level = rowDetails.record.level + 1;\n                result[r].index = Math.ceil(Math.random() * 1000);\n                var parentData = extend({}, rowDetails.record);\n                delete parentData.childRecords;\n                result[r].parentItem = parentData;\n                result[r].parentUniqueID = rowDetails.record.uniqueID;\n                result[r].uniqueID = getUid(_this.parent.element.id + '_data_');\n                result[r].checkboxState = 'uncheck';\n                setValue('uniqueIDCollection.' + result[r].uniqueID, result[r], _this.parent);\n                // delete result[r].parentItem.childRecords;\n                if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                    && !(haveChild && !haveChild[r])) {\n                    result[r].hasChildRecords = true;\n                    result[r].expanded = false;\n                }\n                datas.splice(inx + r + 1, 0, result[r]);\n            }\n            setValue('result', datas, e);\n            setValue('action', 'beforecontentrender', e);\n            _this.parent.trigger(events.actionComplete, e);\n            hideSpinner(_this.parent.element);\n            if (_this.parent.grid.aggregates.length > 0 && !_this.parent.enableVirtualization) {\n                var gridQuery = getObject('query', e);\n                var result_1 = 'result';\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', _this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(gridQuery)) {\n                    var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    e[result_1] = _this.parent.summaryModule.calculateSummaryValue(summaryQuery, e[result_1], true);\n                }\n            }\n            e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n            var virtualArgs = {};\n            if (_this.parent.enableVirtualization) {\n                _this.remoteVirtualAction(virtualArgs);\n            }\n            var notifyArgs = { index: inx, childData: result };\n            if (_this.parent.enableInfiniteScrolling) {\n                _this.parent.notify('infinite-remote-expand', notifyArgs);\n            }\n            else {\n                getValue('grid.renderModule', _this.parent).dataManagerSuccess(e, virtualArgs);\n            }\n            _this.parent.trigger(events.expanded, args);\n        });\n    };\n    DataManipulation.prototype.remoteVirtualAction = function (virtualArgs) {\n        virtualArgs.requestType = 'refresh';\n        setValue('isExpandCollapse', true, virtualArgs);\n        var contentModule = getValue('grid.contentModule', this.parent);\n        var currentInfo = getValue('currentInfo', contentModule);\n        var prevInfo = getValue('prevInfo', contentModule);\n        if (currentInfo.loadNext && this.parent.grid.pageSettings.currentPage === currentInfo.nextInfo.page) {\n            this.parent.grid.pageSettings.currentPage = prevInfo.page;\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        var treeGridData = [];\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = extend({}, data[i]);\n            currentData.taskData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'index')) {\n                currentData.index = this.storedIndex;\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping]) ||\n                (currentData[this.parent.hasChildMapping] && isCountRequired(this.parent))) {\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll || !isNullOrUndefined(this.parent.dataStateChange)\n                    && isNullOrUndefined(currentData[this.parent.childMapping])) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'index')) {\n                currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            }\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                if (this.isSelfReference) {\n                    delete parentData.taskData[this.parent.childMapping];\n                }\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'level')) {\n                currentData.level = level;\n            }\n            currentData.checkboxState = 'uncheck';\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                var record = this.createRecords(currentData[this.parent.childMapping], currentData);\n                currentData.childRecords = record;\n            }\n            treeGridData.push(currentData);\n        }\n        return treeGridData;\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     *\n     * @param {BeforeDataBoundArgs} args - data details to be processed before binding to grid\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var isPrinting = getObject('isPrinting', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        var actionAddArgs = actionArgs;\n        var primaryKeyColumnName = this.parent.getPrimaryKeyFieldNames()[0];\n        var dataValue = getObject('data', actionAddArgs);\n        if ((!isNullOrUndefined(actionAddArgs)) && (!isNullOrUndefined(actionAddArgs.action)) && (actionAddArgs.action === 'add')\n            && (!isNullOrUndefined(actionAddArgs.data)) && isNullOrUndefined(actionAddArgs.data[primaryKeyColumnName])) {\n            actionAddArgs.data[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n            dataValue.taskData[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n        }\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType;\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (this.parent.editSettings.mode === 'Batch') {\n                this.batchChanges = this.parent.grid.editModule.getBatchChanges();\n            }\n            if (this.parent.isLocalData) {\n                this.updateAction(actionData, action, requestType);\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = isCountRequired(this.parent) ? getValue('result', this.parent.grid.dataSource)\n                : this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var qry = new Query();\n        var gridQuery = getObject('query', args);\n        var filterQuery;\n        var searchQuery;\n        if (!isNullOrUndefined(gridQuery)) {\n            filterQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            searchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n        }\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0) || (!isNullOrUndefined(gridQuery) &&\n            (filterQuery.length || searchQuery.length) && this.parent.isLocalData)) {\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery_1 = getObject('query', args);\n            if (isNullOrUndefined(gridQuery_1)) {\n                gridQuery_1 = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = this.parent.parentData;\n            var query = getObject('query', args);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var getColumnByField = 'getColumnByField';\n                var col = this.parent.grid.renderModule.data[getColumnByField](this.parent.grid.\n                    sortSettings.columns[srt].field);\n                var compFun = col.sortComparer && isOffline(this.parent) ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[srt].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, isPrinting, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')\n            && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n                : this.dataResults.count;\n        }\n        else if ((this.parent.enableVirtualization || this.parent.enableInfiniteScrolling) && (!isExport || exportType === 'CurrentPage')\n            && getValue('requestType', args) !== 'save') {\n            var actArgs = this.parent.enableInfiniteScrolling ? args : getValue('actionArgs', args);\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: actArgs });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var isPdfExport = 'isPdfExport';\n        var isCollapsedStatePersist = 'isCollapsedStatePersist';\n        if ((isPrinting === true || (args[isPdfExport] && (isNullOrUndefined(args[isCollapsedStatePersist])\n            || args[isCollapsedStatePersist]))) && this.parent.printMode === 'AllPages') {\n            var actualResults = [];\n            for (var i = 0; i < results.length; i++) {\n                var expandStatus = getExpandStatus(this.parent, results[i], this.parent.parentData);\n                if (expandStatus) {\n                    actualResults.push(results[i]);\n                }\n            }\n            results = actualResults;\n            count = results.length;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    DataManipulation.prototype.updateAction = function (actionData, action, requestType) {\n        if ((requestType === 'delete' || requestType === 'save')) {\n            this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n        }\n        if (requestType === 'batchsave' && this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify(events.batchSave, {});\n        }\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n *\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n *\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * Custom format function\n     *\n     * @hidden\n     * @param {string} cultureName - culture name to format\n     * @returns {void}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @param {NumberFormatOptions | DateFormatOptions} format - formatting options for number and date values\n     * @hidden\n     * @returns {Function} - return formatter function\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {Function} - Returns formatter function\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @param {Object} helper - Specified the helper\n     * @hidden\n     * @returns {void}\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @param {CellType} type - specifies the cell type\n     * @returns {Object} returns the object\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @param {Object} prop - updates aggregate properties without change detection\n     * @hidden\n     * @returns {void}\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowNextRowEdit\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the infinite scroll behavior of Tree Grid.\n */\nvar InfiniteScrollSettings = /** @class */ (function (_super) {\n    __extends(InfiniteScrollSettings, _super);\n    function InfiniteScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], InfiniteScrollSettings.prototype, \"enableCache\", void 0);\n    __decorate([\n        Property(3)\n    ], InfiniteScrollSettings.prototype, \"maxBlocks\", void 0);\n    __decorate([\n        Property(3)\n    ], InfiniteScrollSettings.prototype, \"initialBlocks\", void 0);\n    return InfiniteScrollSettings;\n}(ChildProperty));\nexport { InfiniteScrollSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, getValue } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { CellRenderer } from '@syncfusion/ej2-grids';\nimport { RowDropSettings, getUid } from '@syncfusion/ej2-grids';\nimport { FilterSettings } from '../models/filter-settings';\nimport { TextWrapSettings } from '../models/textwrap-settings';\nimport { Logger as TreeLogger } from '../actions/logger';\nimport { TreeClipboard } from '../actions/clipboard';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, Query, JsonAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray, isCountRequired, findChildrenRecords } from '../utils';\nimport { Grid, Logger } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\nimport { isHidden, getExpandStatus } from '../utils';\nimport { editAction } from '../actions/crud-actions';\nimport { InfiniteScrollSettings } from '../models/infinite-scroll-settings';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        _this.changedRecords = 'changedRecords';\n        _this.deletedRecords = 'deletedRecords';\n        _this.addedRecords = 'addedRecords';\n        _this.objectEqualityChecker = function (old, current) {\n            if (old) {\n                var keys = Object.keys(old);\n                var isEqual = true;\n                var excludeKeys = ['Children', 'childRecords', 'taskData', 'uniqueID', 'parentItem', 'parentUniqueID', 'index'];\n                for (var i = 0; i < keys.length; i++) {\n                    if (old[keys[i]] !== current[keys[i]] && excludeKeys.indexOf(keys[i]) === -1) {\n                        var isDate = old[keys[i]] instanceof Date && current[keys[i]] instanceof Date;\n                        if (!isDate || (old[keys[i]].getTime() !== current[keys[i]].getTime())) {\n                            isEqual = false;\n                            break;\n                        }\n                    }\n                }\n                return isEqual;\n            }\n            else {\n                return false;\n            }\n        };\n        TreeGrid_1.Inject(TreeGridSelection);\n        setValue('mergePersistData', _this.mergePersistTreeGridData, _this);\n        var logger = 'Logger';\n        if (!isNullOrUndefined(_this.injectedModules[logger])) {\n            Grid.Inject(Logger);\n        }\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     *\n     * @param  {ExcelExportProperties | TreeGridExcelExportProperties} excelExportProperties - Defines the export properties of the Tree Grid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     */\n    /* eslint-disable */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        /* eslint-enable */\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     *\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     */\n    /* eslint-disable */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        /* eslint-enable */\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     *\n     * @param {PdfExportProperties | TreeGridPdfExportProperties} pdfExportProperties - Defines the export properties of the Tree Grid.\n     * @param {boolean} isMultipleExport - Define to enable multiple export.\n     * @param {Object} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns TreeGrid module name\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            Child: 'Child',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n            RowIndent: 'Indent',\n            RowOutdent: 'Outdent'\n        };\n        this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     *\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @returns {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     *\n     * @param {string} field - Defines the column field name to remove sort.\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./#searchsettings/).\n     *\n     * @param  {string} searchString - Defines the key.\n     * @returns {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     *\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @returns {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     *\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @returns {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        var locale = L10n.locale;\n        var localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./#printmode).\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            var target = void 0;\n            var parentTarget = void 0;\n            var column = void 0;\n            var row = void 0;\n            var summaryElement = void 0;\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    target = e.target;\n                    column = target.closest('.e-rowcell');\n                    row = column.closest('tr');\n                    if (row !== null && row !== undefined) {\n                        this.expandCollapseRequest(row.querySelector('.e-treegridexpand'));\n                    }\n                    break;\n                case 'ctrlShiftDownArrow':\n                    target = e.target;\n                    column = target.closest('.e-rowcell');\n                    row = column.closest('tr');\n                    if (row !== null && row !== undefined) {\n                        this.expandCollapseRequest(row.querySelector('.e-treegridcollapse'));\n                    }\n                    break;\n                case 'downArrow':\n                    if (!this.enableVirtualization) {\n                        parentTarget = e.target.parentElement;\n                        summaryElement = this.findnextRowElement(parentTarget);\n                        if (summaryElement !== null) {\n                            var rowIndex = summaryElement.rowIndex;\n                            this.selectRow(rowIndex);\n                            var cellIndex = e.target.cellIndex;\n                            var row_1 = summaryElement.children[cellIndex];\n                            addClass([row_1], 'e-focused');\n                            addClass([row_1], 'e-focus');\n                        }\n                        else {\n                            this.clearSelection();\n                        }\n                    }\n                    break;\n                case 'upArrow':\n                    if (!this.enableVirtualization) {\n                        parentTarget = e.target.parentElement;\n                        summaryElement = this.findPreviousRowElement(parentTarget);\n                        if (summaryElement !== null) {\n                            var rIndex = summaryElement.rowIndex;\n                            this.selectRow(rIndex);\n                            var cIndex = e.target.cellIndex;\n                            var rows = summaryElement.children[cIndex];\n                            addClass([rows], 'e-focused');\n                            addClass([rows], 'e-focus');\n                        }\n                        else {\n                            this.clearSelection();\n                        }\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary\n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary\n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.grid.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     *\n     * @returns {ModuleDeclaration[]} - Returns TreeGrid modules collection\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        var splitFrozenCount = 'splitFrozenCount';\n        this.grid[splitFrozenCount](this.getGridColumns(this.columns));\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter', args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary', args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize', args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport', args: [this]\n            });\n        }\n        if (this.frozenColumns || this.frozenRows || this.getFrozenColumns() ||\n            this.grid.getFrozenLeftColumnsCount() || this.grid.getFrozenRightColumnsCount()) {\n            modules.push({\n                member: 'freeze', args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow', args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport', args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu', args: [this]\n            });\n        }\n        if (this.showColumnChooser) {\n            modules.push({\n                member: 'ColumnChooser', args: [this]\n            });\n        }\n        this.extendRequiredModules(modules);\n        return modules;\n    };\n    TreeGrid.prototype.extendRequiredModules = function (modules) {\n        if (this.allowRowDragAndDrop) {\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n        if (this.enableInfiniteScrolling) {\n            modules.push({\n                member: 'infiniteScroll',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'logger',\n            args: [this.grid]\n        });\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        if (this.grid && this.grid.element) {\n            EventHandler.remove(this.grid.element, 'click', this.mouseClickHandler);\n        }\n    };\n    /**\n     * Logs tree grid error message on console\n     *\n     * @param {string | string[]} types - Tree Grid error type\n     * @param {object} args - Error details\n     * @hidden\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.log = function (types, args) {\n        if (this.loggerModule) {\n            this.loggerModule.treeLog(types, args, this);\n        }\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.render = function () {\n        var _this = this;\n        if (this.isReact) {\n            this.grid.isReact = true;\n            this.grid.portals = [];\n        }\n        createSpinner({ target: this.element }, this.createElement);\n        this.log(['mapping_fields_missing']);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        if (!isNullOrUndefined(this.dataSource)) {\n            this.convertTreeData(this.dataSource);\n        }\n        this.loadGrid();\n        if (this.element.classList.contains('e-treegrid') && this.rowDropSettings.targetID) {\n            this.grid.rowDropSettings.targetID += '_gridcontrol';\n        }\n        this.addListener();\n        var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n        addClass([this.element], 'e-treegrid');\n        if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n            this.element.style.height = this.height;\n        }\n        if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n            this.element.style.width = this.width;\n        }\n        this.element.appendChild(gridContainer);\n        var gridRequiredModules = this.grid.requiredModules;\n        this.grid.requiredModules = function () {\n            var modules = [];\n            modules = gridRequiredModules.apply(this);\n            for (var i = 0; i < modules.length; i++) {\n                if (modules[i].member === 'virtualscroll') {\n                    modules[i].member = 'treeVirtualScroll';\n                }\n            }\n            return modules;\n        };\n        this.grid.appendTo(gridContainer);\n        this.wireEvents();\n        this.renderComplete();\n        var destroyTemplate = 'destroyTemplate';\n        var destroyTemplateFn = this.grid[destroyTemplate];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.grid[destroyTemplate] = function (args, index) {\n            destroyTemplateFn.apply(_this.grid);\n            var portals = 'portals';\n            if (!(_this.isReact && isNullOrUndefined(_this[portals]))) {\n                _this.clearTemplate(args, index);\n            }\n        };\n    };\n    TreeGrid.prototype.afterGridRender = function () {\n        if (!isNullOrUndefined(this.grid.clipboardModule)) {\n            this.grid.clipboardModule.destroy();\n        }\n        this.clipboardModule = this.grid.clipboardModule = new TreeClipboard(this);\n    };\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (isCountRequired(this)) {\n            data = getValue('result', data);\n        }\n        if (data instanceof Array && data.length > 0 && Object.prototype.hasOwnProperty.call(data[0], 'level')) {\n            this.flatData = data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            if (isCountRequired(this)) {\n                var griddata = getValue('result', this.dataSource);\n                this.dataModule.convertToFlatData(griddata);\n            }\n            else {\n                this.dataModule.convertToFlatData(data);\n            }\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.enableColumnVirtualization = this.enableColumnVirtualization;\n        this.grid.enableInfiniteScrolling = this.enableInfiniteScrolling;\n        this.grid.infiniteScrollSettings = this.infiniteScrollSettings;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.enableAutoFill = this.enableAutoFill;\n        this.grid.enableAdaptiveUI = this.enableAdaptiveUI;\n        this.grid.enableImmutableMode = this.enableImmutableMode;\n        this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n        this.grid.rowDropSettings = getActualProperties(this.rowDropSettings);\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.showColumnChooser = this.showColumnChooser;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        this.grid.frozenRows = this.frozenRows;\n        this.grid.frozenColumns = this.frozenColumns;\n        this.grid.clipMode = getActualProperties(this.clipMode);\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[templateInstance] = this[templateInstance];\n        var isJsComponent = 'isJsComponent';\n        this.grid[isJsComponent] = true;\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        this.grid.rowSelecting = function (args) {\n            if (!isNullOrUndefined(args.target) && (args.target.classList.contains('e-treegridexpand')\n                || args.target.classList.contains('e-treegridcollapse') || args.target.classList.contains('e-summarycell'))) {\n                args.cancel = true;\n                return;\n            }\n            _this.trigger(events.rowSelecting, args);\n        };\n        this.grid.rowSelected = function (args) {\n            if (_this.enableVirtualization && args.isHeaderCheckboxClicked &&\n                _this.grid.currentViewData.length !== _this.grid.selectionModule.selectedRowIndexes.length) {\n                var updateRowSelection = 'updateRowSelection';\n                for (var i = 0; i < _this.getRows().length; i++) {\n                    if (_this.getRows()[i].getElementsByClassName('e-frame e-icons e-uncheck').length) {\n                        _this.grid.selectionModule[updateRowSelection](_this.getRows()[i], _this.getCurrentViewRecords()[i].index);\n                    }\n                }\n            }\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.notify(events.rowSelected, args);\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.beforeCopy = this.triggerEvents.bind(this);\n        this.grid.beforePaste = function (args) {\n            var rows = _this.getRows();\n            var rowIndex = 'rowIndex';\n            while (rows[args[rowIndex]].classList.contains('e-summaryrow')) {\n                args[rowIndex]++;\n            }\n            _this.trigger(events.beforePaste, args);\n        };\n        this.grid.load = function () {\n            _this.grid.on('initial-end', _this.afterGridRender, _this);\n            if (!isNullOrUndefined(_this.loggerModule)) {\n                var loggerModule = 'loggerModule';\n                _this.loggerModule = _this.grid[loggerModule] = new TreeLogger(_this.grid);\n            }\n        };\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.extendedGridDataBoundEvent();\n        this.extendedGridEvents();\n        this.extendedGridActionEvents();\n        this.extendedGridEditEvents();\n        this.bindGridDragEvents();\n        this.bindCallBackEvents();\n    };\n    TreeGrid.prototype.lastRowBorder = function (visiblerow, isAddBorder) {\n        for (var j = 0; j < visiblerow.cells.length; j++) {\n            if (isAddBorder) {\n                addClass([visiblerow.cells[j]], 'e-lastrowcell');\n            }\n            else {\n                removeClass([visiblerow.cells[j]], 'e-lastrowcell');\n            }\n        }\n    };\n    TreeGrid.prototype.isPixelHeight = function () {\n        if (this.height !== 'auto' && this.height.toString().indexOf('%') === -1) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    TreeGrid.prototype.extendedGridDataBoundEvent = function () {\n        var _this = this;\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate();\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            if (_this.isPixelHeight() && _this.initialRender) {\n                var rows = _this.getContentTable().rows;\n                var totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[i])) {\n                        if (totalRows[i].nextElementSibling) {\n                            _this.lastRowBorder(totalRows[i], true);\n                        }\n                        break;\n                    }\n                }\n            }\n            var action = 'action';\n            if (_this.enableVirtualization && _this.selectionSettings.persistSelection && (_this.dataResults[action] === 'expand' || _this.dataResults[action] === 'collapse')) {\n                var refreshPersistSelection = 'refreshPersistSelection';\n                _this.grid.selectionModule[refreshPersistSelection]();\n                if (_this.grid.selectionSettings.type === 'Single') {\n                    var updateRowSelection = 'updateRowSelection';\n                    var index = _this.getCurrentViewRecords().indexOf(_this.grid.selectionModule['data']);\n                    _this.grid.selectionModule[updateRowSelection](_this.getRows()[index], index);\n                }\n            }\n            _this.trigger(events.dataBound, args);\n            _this.initialRender = false;\n        };\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var treeGrid = this;\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (((isRemoteData(treeGrid) && !isOffline(treeGrid)) || isCountRequired(this)) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid) && !isCountRequired(this) && !isNullOrUndefined(treeGrid.dataSource)) {\n                if (this.isPrinting) {\n                    setValue('isPrinting', true, args);\n                }\n                treeGrid.notify('dataProcessor', args);\n                //args = treeGrid.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            if (treeGrid.enableImmutableMode) {\n                args.result = args.result.slice();\n            }\n            if (treeGrid.initialRender) {\n                this.contentModule.objectEqualityChecker = treeGrid.objectEqualityChecker;\n            }\n            // treeGrid.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                var callBackPromise_1 = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, function (beforeDataBoundArgs) {\n                    callBackPromise_1.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise_1;\n            }\n        };\n        this.grid.log = function (type, args) {\n            if (_this.loggerModule) {\n                _this.loggerModule.log(type, args);\n            }\n        };\n    };\n    TreeGrid.prototype.bindCallBackEvents = function () {\n        var _this = this;\n        this.grid.toolbarClick = function (args) {\n            if ((args.item.id === _this.grid.element.id + '_excelexport' && _this.allowExcelExport === false) ||\n                (args.item.id === _this.grid.element.id + '_pdfexport' && _this.allowPdfExport === false) ||\n                (args.item.id === _this.grid.element.id + '_csvexport' && _this.allowExcelExport === false)) {\n                return;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.toolbarClick, args, function (toolbarargs) {\n                if (!toolbarargs.cancel) {\n                    _this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(getObject('name', args), args, function (cellselectingArgs) {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = function (args) {\n            if (!isNullOrUndefined(args.row) && args.row.classList.contains('e-summaryrow')) {\n                args.cancel = true;\n                return;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.beginEdit, args, function (begineditArgs) {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        this.grid.dataStateChange = function (args) {\n            if (_this.isExpandRefresh) {\n                _this.isExpandRefresh = false;\n                _this.grid.dataSource = { result: _this.flatData, count: getValue('count', _this.grid.dataSource) };\n            }\n            else {\n                _this.trigger(events.dataStateChange, args);\n            }\n        };\n        this.grid.cellSave = function (args) {\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.cellSave, args, function (cellsaveArgs) {\n                if (!cellsaveArgs.cancel) {\n                    _this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSaved = function (args) {\n            _this.trigger(events.cellSaved, args);\n            _this.notify(events.cellSaved, args);\n        };\n        this.grid.cellEdit = function (args) {\n            var prom = 'promise';\n            var promise = new Deferred();\n            args[prom] = promise;\n            _this.notify(events.cellEdit, args);\n            return promise;\n        };\n        this.grid.batchAdd = function (args) {\n            _this.trigger(events.batchAdd, args);\n            _this.notify(events.batchAdd, args);\n        };\n        this.grid.beforeBatchSave = function (args) {\n            _this.trigger(events.beforeBatchSave, args);\n            _this.notify(events.beforeBatchSave, args);\n        };\n        this.grid.beforeBatchAdd = function (args) {\n            _this.trigger(events.beforeBatchAdd, args);\n            _this.notify(events.beforeBatchAdd, args);\n        };\n        this.grid.batchDelete = function (args) {\n            _this.trigger(events.batchDelete, args);\n            _this.notify(events.batchDelete, args);\n        };\n        this.grid.beforeBatchDelete = function (args) {\n            _this.trigger(events.beforeBatchDelete, args);\n            _this.notify(events.beforeBatchDelete, args);\n        };\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function () {\n        this.treeColumnRowTemplate();\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        if (this.dataSource && isCountRequired(this)) {\n            var data = this.flatData;\n            var datacount = getValue('count', this.dataSource);\n            this.grid.dataSource = { result: data, count: datacount };\n        }\n        else {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[dataSource].json = extendArray(this.dataSource[dataSource].json);\n            this.grid.dataSource[ready] = this.dataSource.ready;\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            var proxy_1 = this;\n            if (!isNullOrUndefined(this.grid.dataSource[ready])) {\n                this.grid.dataSource[ready].then(function (e) {\n                    var dm = proxy_1.grid.dataSource;\n                    dm[dataSource].offline = true;\n                    dm[isDataAvailable] = true;\n                    dm[dataSource].json = e.result;\n                    dm[adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridActionEvents = function () {\n        var _this = this;\n        this.grid.actionBegin = function (args) {\n            if (args.requestType === 'sorting' && args.target && args.target.parentElement &&\n                args.target.parentElement.classList.contains('e-hierarchycheckbox')) {\n                args.cancel = true;\n            }\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            _this.notify('actionBegin', { editAction: args });\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule) && !isCountRequired(_this)\n                && (_this.grid.filterSettings.columns.length === 0 || _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.setProperties({ dataSource: _this.dataResults.result }, true);\n                if (isNullOrUndefined(_this.grid['changedProperties'].dataSource)) {\n                    _this.grid.renderModule.data.dataManager = _this.grid.dataSource instanceof DataManager ?\n                        _this.grid.dataSource :\n                        (isNullOrUndefined(_this.grid.dataSource) ? new DataManager() : new DataManager(_this.grid.dataSource));\n                    _this.grid.renderModule.data.isQueryInvokedFromData = true;\n                    _this.grid.query = _this.grid.query instanceof Query ? _this.grid.query : new Query();\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.actionBegin, args, function (actionArgs) {\n                if (!actionArgs.cancel) {\n                    _this.notify(events.beginEdit, actionArgs);\n                }\n                callBackPromise.resolve(actionArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.actionComplete = function (args) {\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            _this.notify('actionComplete', { editAction: args });\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            if (args.requestType === 'save' && _this.aggregates.map(function (ag) { return ag.showChildSummary === true; }).length) {\n                _this.grid.refresh();\n            }\n            _this.trigger(events.actionComplete, args);\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    TreeGrid.prototype.bindGridDragEvents = function () {\n        var _this = this;\n        this.grid.rowDragStartHelper = function (args) {\n            _this.trigger(events.rowDragStartHelper, args);\n        };\n        this.grid.rowDragStart = function (args) {\n            _this.trigger(events.rowDragStart, args);\n        };\n        this.grid.rowDrag = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            _this.notify(events.rowdraging, args);\n            _this.trigger(events.rowDrag, args);\n        };\n        this.grid.rowDrop = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            _this.notify(events.rowDropped, args);\n            args.cancel = true;\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[ref], this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            this.columns = [];\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            var record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit.allowNextRowEdit = this.editSettings.allowNextRowEdit;\n        edit[guid] = this.editSettings[guid];\n        edit.dialog = this.editSettings.dialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Batch':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     *\n     * @hidden\n     * @returns {Object[]} - returns context menu items\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: this.l10n.getConstant('AddRow'),\n                            target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: this.l10n.getConstant('Above'), id: 'Above' }, { text: this.l10n.getConstant('Below'), id: 'Below' }, { text: this.l10n.getConstant('Child'), id: 'Child' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     *\n     * @hidden\n     * @returns {Object[]} - Returns toolbar items\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            var items = [];\n            var tooltipText = void 0;\n            for (var i = 0; i < this.toolbar.length; i++) {\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        tooltipText = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltipText,\n                            tooltipText: tooltipText, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    case 'Indent':\n                    case ToolbarItem.RowIndent:\n                        tooltipText = this.l10n.getConstant('RowIndent');\n                        items.push({\n                            text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-indent', id: this.element.id + '_gridcontrol_indent'\n                        });\n                        break;\n                    case 'Outdent':\n                    case ToolbarItem.RowOutdent:\n                        tooltipText = this.l10n.getConstant('RowOutdent');\n                        items.push({\n                            text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-outdent', id: this.element.id + '_gridcontrol_outdent'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    TreeGrid.prototype.getGridColumns = function (columns, isEmptyColumnModel, index) {\n        if (isEmptyColumnModel === void 0) { isEmptyColumnModel = true; }\n        if (index === void 0) { index = 0; }\n        var column = columns;\n        var stackedColumn = 'columns';\n        if (isEmptyColumnModel) {\n            this.columnModel = [];\n        }\n        var treeGridColumn;\n        var gridColumn;\n        index = index === 0 ? -1 : index;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            index = index + 1;\n            var treeColumn = this.grid.getColumnByUid(column[i].uid);\n            gridColumn = treeColumn ? treeColumn : {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    if (index === this.treeColumnIndex && prop === 'template') {\n                        treeGridColumn[prop] = column[i][prop];\n                    }\n                    else if (prop === 'columns' && !isNullOrUndefined(column[i][prop])) {\n                        gridColumn[prop] = this.getGridColumns(column[i][prop], false, index);\n                        treeGridColumn[prop] = column[i][prop];\n                    }\n                    else {\n                        gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                    }\n                }\n            }\n            if (!treeGridColumn[stackedColumn]) {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param {TreeGridModel} newProp - properties details which has to be modified\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.onPropertyChanged = function (newProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    this.grid.columns = this.getGridColumns(this.columns);\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'enableColumnVirtualization':\n                    this.grid.enableColumnVirtualization = this.enableColumnVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    if (!this.initialRender) {\n                        this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    }\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'enableInfiniteScrolling':\n                    this.grid.enableInfiniteScrolling = this.enableInfiniteScrolling;\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        if (isCountRequired(this)) {\n                            var count = getValue('count', this.dataSource);\n                            this.grid.dataSource = { result: this.flatData, count: count };\n                        }\n                        else {\n                            var data = this.dataSource;\n                            this.grid.dataSource = !(data instanceof DataManager) ?\n                                this.flatData : new DataManager(data.dataSource, data.defaultQuery, data.adaptor);\n                        }\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.isDataSourceChanged = true;\n                        }\n                    }\n                    else {\n                        this.bindedDataSource();\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.removeEventListener();\n                            this.grid.contentModule.eventListener('on');\n                            this.grid.contentModule.renderTable();\n                        }\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.grid.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'frozenRows':\n                    this.grid.frozenRows = this.frozenRows;\n                    break;\n                case 'frozenColumns':\n                    this.grid.frozenColumns = this.frozenColumns;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'enableAutoFill':\n                    this.grid.enableAutoFill = this.enableAutoFill;\n                    break;\n                case 'enableAdaptiveUI':\n                    this.grid.enableAdaptiveUI = this.enableAdaptiveUI;\n                    break;\n                case 'enableImmutableMode':\n                    this.grid.enableImmutableMode = this.enableImmutableMode;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.grid.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'showColumnChooser':\n                    this.grid.showColumnChooser = this.showColumnChooser;\n                    break;\n                case 'detailTemplate':\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.grid.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     *\n     * @method destroy\n     * @returns {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        var treeGridElement = this.element;\n        if (!treeGridElement) {\n            return;\n        }\n        var hasTreeGridChild = treeGridElement.querySelector('.' + 'e-gridheader') &&\n            treeGridElement.querySelector('.' + 'e-gridcontent') ? true : false;\n        if (hasTreeGridChild) {\n            this.unwireEvents();\n        }\n        this.removeListener();\n        if (hasTreeGridChild) {\n            _super.prototype.destroy.call(this);\n        }\n        if (this.grid) {\n            this.grid.destroy();\n        }\n        if (this.dataModule) {\n            this.dataModule.destroy();\n        }\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule', 'clipboardModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow', 'rowDragAndDropModule', 'freezeModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     *\n     * @method dataBind\n     * @returns {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        if (isNullOrUndefined(this.grid)) {\n            return;\n        }\n        if (!isNullOrUndefined(this.rowDropSettings.targetID) &&\n            isNullOrUndefined(document.getElementById(this.grid.rowDropSettings.targetID))) {\n            document.getElementById(this.rowDropSettings.targetID).id = this.grid.rowDropSettings.targetID;\n            this.rowDropSettings.targetID = this.grid.rowDropSettings.targetID;\n        }\n        _super.prototype.dataBind.call(this);\n        this.grid.dataBind();\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string} - Returns persist properties details\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex', 'treeColumnIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        for (var i = 0; i < keyEntity.length; i++) {\n            var currentObject = this[keyEntity[i]];\n            for (var k = 0, val = ignoreOnPersist[keyEntity[i]]; (!isNullOrUndefined(val) && k < val.length); k++) {\n                var objVal = val[k];\n                delete currentObject[objVal];\n            }\n        }\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[i].columns) {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n                this.ignoreInArrays(ignoreOnColumn, columns[i].columns);\n            }\n            else {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        for (var i = 0; i < ignoreOnColumn.length; i++) {\n            delete column[ignoreOnColumn[i]];\n            column.filter = {};\n        }\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if ((target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && (!this.isEditCollapse && !this.grid.isEdit)) {\n            this.expandCollapseRequest(target);\n        }\n        this.isEditCollapse = false;\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     *\n     * @returns {HTMLTableRowElement[]} - Returns row elements collection\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     *\n     * @returns {Element} - Returns pager element\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     *\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     * @returns {void}\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        if (this.editModule) {\n            var isAddedRowByMethod = 'isAddedRowByMethod';\n            this.editModule[isAddedRowByMethod] = true;\n            this.editModule.addRecord(data, index, position);\n        }\n    };\n    /**\n     * Cancels edited state.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.closeEdit();\n        }\n    };\n    /**\n     * Saves the cell that is currently edited. It does not save the value to the DataSource.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.saveCell = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.saveCell();\n        }\n    };\n    /**\n     * To update the specified cell by given value without changing into edited state.\n     *\n     * @param {number} rowIndex Defines the row index.\n     * @param {string} field Defines the column field.\n     * @param {string | number | boolean | Date} value - Defines the value to be changed.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateCell = function (rowIndex, field, value) {\n        if (this.grid.editModule) {\n            this.grid.editModule.updateCell(rowIndex, field, value);\n        }\n    };\n    /**\n     * To update the specified row by given values without changing into edited state.\n     *\n     * @param {number} index Defines the row index.\n     * @param {Object} data Defines the data object to be updated.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateRow = function (index, data) {\n        if (this.grid.editModule) {\n            if (!isNullOrUndefined(index)) {\n                var griddata = this.grid.getCurrentViewRecords()[index];\n                extend(griddata, data);\n                this.grid.editModule.updateRow(index, griddata);\n            }\n            else {\n                this.grid.editModule.updateRow(index, data);\n            }\n        }\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     *\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     * @returns {void}\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRecord(fieldName, data);\n        }\n    };\n    /**\n     * To edit any particular row by TR element.\n     *\n     * @param {HTMLTableRowElement} row - Defines the table row to be edited.\n     * @returns {void}\n     */\n    TreeGrid.prototype.startEdit = function (row) {\n        if (this.grid.editModule) {\n            this.grid.editModule.startEdit(row);\n        }\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     *\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     * @returns {void}\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        if (this.editModule) {\n            this.editModule.editCell(rowIndex, field);\n        }\n    };\n    /**\n     * Enables or disables ToolBar items.\n     *\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @returns {void}\n     */\n    TreeGrid.prototype.enableToolbarItems = function (items, isEnable) {\n        if (this.grid.toolbarModule) {\n            this.grid.toolbarModule.enableItems(items, isEnable);\n        }\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.endEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.endEdit();\n        }\n    };\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     *\n     * @param {number} x - Defines the X axis.\n     * @param {number} y - Defines the Y axis.\n     * @returns {void}\n     */\n    TreeGrid.prototype.openColumnChooser = function (x, y) {\n        if (this.columnChooserModule) {\n            this.columnChooserModule.openColumnChooser(x, y);\n        }\n    };\n    /**\n     * Delete any visible row by TR element.\n     *\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     * @returns {void}\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRow(tr);\n        }\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     *\n     * @returns {string[]} - Returns primary key collection\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     * @returns {void}\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n        var rowIndex = this.grid.getRowIndexByPrimaryKey(key);\n        var record = this.getCurrentViewRecords()[rowIndex];\n        if (!isNullOrUndefined(record)) {\n            editAction({ value: record, action: 'edit' }, this, this.isSelfReference, record.index, this.grid.selectedRowIndex, field);\n        }\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     * @returns {void}\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        var currentRecords = this.getCurrentViewRecords();\n        var primaryKey = this.grid.getPrimaryKeyFieldNames()[0];\n        var level = 0;\n        var record = {};\n        currentRecords.some(function (value) {\n            if (value[primaryKey] === key) {\n                record = value;\n                return true;\n            }\n            else {\n                return false;\n            }\n        });\n        level = record.level;\n        rowData.level = level;\n        rowData.index = record.index;\n        rowData.childRecords = record.childRecords;\n        rowData.taskData = record.taskData;\n        rowData.uniqueID = record.uniqueID;\n        rowData.parentItem = record.parentItem;\n        rowData.checkboxState = record.checkboxState;\n        rowData.hasChildRecords = record.hasChildRecords;\n        rowData.parentUniqueID = record.parentUniqueID;\n        rowData.expanded = record.expanded;\n        this.grid.setRowData(key, rowData);\n    };\n    /**\n     * Navigates to the specified target page.\n     *\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @returns {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        if (this.grid.pagerModule) {\n            this.grid.pagerModule.goToPage(pageNo);\n        }\n    };\n    /**\n     * Defines the text of external message.\n     *\n     * @param  {string} message - Defines the message to update.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} - Returns cell element in grid content\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {Column} - Returns tree grid column\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        return iterateArrayOrObject(this.columnModel, function (item) {\n            if (item.field === field) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets a column by UID.\n     *\n     * @param  {string} uid - Specifies the column UID.\n     * @returns {Column} - Returns tree grid column\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        var Columns = this.initialRender ? this.grid.columns : this.columns;\n        return iterateArrayOrObject(Columns, function (item) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets the collection of column fields.\n     *\n     * @returns {string[]} - Returns column field name as collection\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     *\n     * @returns {Element} - Returns footer content div element\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     *\n     * @returns {Element} - Returns footer content table element\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     *\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @returns {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        this.grid.showColumns(keys, showBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Hides a column by column name.\n     *\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @returns {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        this.grid.hideColumns(keys, hideBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Gets a column header by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     *\n     * @param {string} uid - Specifies the column uid.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {number} - Returns column index\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    TreeGrid.prototype.getVirtualColIndexByUid = function (uid) {\n        var columnModel = 'columnModel';\n        var index = iterateArrayOrObject(this.grid[columnModel], function (item, index) {\n            if (item.uid === uid) {\n                return index;\n            }\n            return undefined;\n        })[0];\n        return !isNullOrUndefined(index) ? index : -1;\n    };\n    /**\n     * Gets a column index by UID.\n     *\n     * @param  {string} uid - Specifies the column UID.\n     * @returns {number} - Returns column index\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     *\n     * @param {boolean} isRefresh - Defined whether to update DOM\n     * @returns {Column[]} - Returns treegrid columns collection\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        this.updateColumnModel(this.grid.getColumns(isRefresh));\n        return this.columnModel;\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        var temp;\n        var field;\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        if (this.treeColumnIndex !== -1 && this.columnModel[this.treeColumnIndex] &&\n            !isNullOrUndefined(this.columnModel[this.treeColumnIndex].template)) {\n            temp = this.columnModel[this.treeColumnIndex].template;\n            field = this.columnModel[this.treeColumnIndex].field;\n        }\n        var stackedHeader = false;\n        var gridColumn;\n        if (!this.enableColumnVirtualization || (this.enableColumnVirtualization && this.columnModel.length === gridColumns.length)) {\n            this.columnModel = [];\n            for (var i = 0; i < gridColumns.length; i++) {\n                gridColumn = {};\n                for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    gridColumn[prop] = gridColumns[i][prop];\n                }\n                this.columnModel.push(new Column(gridColumn));\n                if (field === this.columnModel[i].field && this.columnModel[i].type !== 'checkbox' && (!isNullOrUndefined(temp) && temp !== '')) {\n                    this.columnModel[i].template = temp;\n                }\n            }\n        }\n        var merge = 'deepMerge';\n        this[merge] = ['columns']; // Workaround for blazor updateModel\n        if (this.grid.columns.length !== this.columnModel.length) {\n            stackedHeader = true;\n        }\n        if (!stackedHeader) {\n            this.setProperties({ columns: this.columnModel }, true);\n        }\n        this[merge] = undefined; // Workaround for blazor updateModel\n        return this.columnModel;\n    };\n    /**\n     * @param {string} columnUid - Defines column uid\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.refreshReactColumnTemplateByUid = function (columnUid) {\n        var _this = this;\n        if (this.isReact) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.clearTemplate(['columnTemplate'], undefined, function () {\n                var cells = 'cells';\n                var rowIdx = 'index';\n                var rowsObj = _this.grid.getRowsObject();\n                var indent = _this.grid.getIndentCount();\n                var cellIndex = _this.grid.getNormalizedColumnIndex(columnUid);\n                for (var j = 0; j < rowsObj.length; j++) {\n                    if (rowsObj[j].isDataRow && !isNullOrUndefined(rowsObj[j].index)) {\n                        var cell = rowsObj[j][cells][cellIndex];\n                        var cellRenderer = new CellRenderer(_this.grid, _this.grid.serviceLocator);\n                        var td = _this.getCellFromIndex(rowsObj[j].index, cellIndex - indent);\n                        cellRenderer.refreshTD(td, cell, rowsObj[j].data, { index: rowsObj[j][rowIdx] });\n                    }\n                }\n            });\n        }\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     *\n     * @returns {Element} - Return tree grid content element\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.mergePersistTreeGridData = function () {\n        var persist1 = 'mergePersistGridData';\n        this.grid[persist1].apply(this);\n    };\n    TreeGrid.prototype.mergeColumns = function (storedColumn, columns) {\n        var persist2 = 'mergeColumns';\n        this.grid[persist2].apply(this, [storedColumn, columns]);\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n        this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n        this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n        this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     *\n     * @returns {Element} - Returns content table element\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     *\n     * @returns {Element[]} - Returns row elements\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     *\n     * @returns {Object[]} - Returns current view records\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     *\n     * @returns {Object} - Returns batch changes\n     */\n    TreeGrid.prototype.getBatchChanges = function () {\n        return this.grid.editModule.getBatchChanges();\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     *\n     * @returns {Element} - Returns Header content element\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     *\n     * @returns {Element} - Return header table element\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} - Returns row element\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     *\n     * @param {Element | EventTarget} target - Target row element\n     * @returns {RowInfo} - Returns row information in a JSON object\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {string} - Returns unique id based on column field name given\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     *\n     * @returns {Column[]} - Returns visible columns collection\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.uniqueIDCollection = {};\n        this.convertTreeData(this.dataSource);\n        if (!isCountRequired(this)) {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ? this.flatData :\n                new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     *\n     * @returns {Object[]} - Returns records that has been checked\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the visible records corresponding to rows visually displayed.\n     *\n     * @returns {Object[]} - Returns visible records based on collapse state of rows\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getVisibleRecords = function () {\n        var visibleRecords = [];\n        var currentViewRecords = this.getCurrentViewRecords();\n        if (!this.allowPaging) {\n            for (var i = 0; i < currentViewRecords.length; i++) {\n                visibleRecords.push(currentViewRecords[i]);\n                if (!currentViewRecords[i].expanded) {\n                    i += findChildrenRecords(currentViewRecords[i]).length;\n                }\n            }\n        }\n        else {\n            visibleRecords = currentViewRecords;\n        }\n        return visibleRecords;\n    };\n    /**\n     * Get the indexes of checked rows.\n     *\n     * @returns {number[]} - Returns checked row indexes\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     *\n     * @param {number[]} indexes - row indexes\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     *\n     * @param {boolean} refreshUI - Defined whether to refresh the DOM\n     * @returns {void}\n     */\n    TreeGrid.prototype.refreshColumns = function (refreshUI) {\n        if (isNullOrUndefined(refreshUI) || refreshUI) {\n            this.grid.columns = this.getGridColumns(this.columns);\n            this.grid.refreshColumns();\n        }\n        else {\n            this.grid.setProperties({ columns: this.getGridColumns(this.columns) }, true);\n        }\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     *\n     * @param {HTMLElement} target - Expand collapse icon cell as target element\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.editSettings.mode === 'Batch') {\n            var obj = 'dialogObj';\n            var showDialog = 'showDialog';\n            if (this.getBatchChanges()[this.changedRecords].length ||\n                this.getBatchChanges()[this.deletedRecords].length || this.getBatchChanges()[this.addedRecords].length) {\n                var dialogObj = this.grid.editModule[obj];\n                this.grid.editModule[showDialog]('CancelEdit', dialogObj);\n                this.targetElement = target;\n                return;\n            }\n        }\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo = this.grid.getRowInfo(target);\n            var record = rowInfo.rowData;\n            if (this.enableImmutableMode) {\n                record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            }\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo.row, record);\n            }\n            else {\n                this.expandRow(rowInfo.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     *\n     * @param {HTMLTableRowElement} row - Expands the given row\n     * @param {Object} record - Expands the given record\n     * @param {Object} key - Primary key value\n     * @param {number} level - Specifies the hierarchical level of the record\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record, key, level) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        if (!isNullOrUndefined(row) && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args, function (expandingArgs) {\n            if (!expandingArgs.cancel) {\n                _this.expandCollapse('expand', row, record);\n                if (expandingArgs.expandAll) {\n                    _this.expandCollapseAllChildren(record, 'expand', key, level);\n                }\n                var children = 'Children';\n                if (!(isRemoteData(_this) && !isOffline(_this)) && (!isCountRequired(_this) || !isNullOrUndefined(record[children]))) {\n                    var collapseArgs = { data: record, row: row };\n                    _this.setHeightForFrozenContent();\n                    _this.trigger(events.expanded, collapseArgs);\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.expandCollapseAllChildren = function (record, action, key, level) {\n        if ((!isNullOrUndefined(key) && record[this.getPrimaryKeyFieldNames()[0]] !== key) ||\n            (!isNullOrUndefined(level) && level !== record.level)) {\n            return;\n        }\n        var records = findChildrenRecords(record).filter(function (e) {\n            return e.hasChildRecords;\n        });\n        records.unshift(record);\n        for (var i = 0; i < records.length; i++) {\n            this.expandCollapse(action, null, records[i]);\n        }\n    };\n    TreeGrid.prototype.setHeightForFrozenContent = function () {\n        var freeze = (this.grid.getFrozenLeftColumnsCount() > 0 || this.grid.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (this.grid.getFrozenColumns() > 0 || freeze) {\n            this.grid.contentModule.refreshScrollOffset();\n        }\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record) &&\n            !isRemoteData(this)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[row.rowIndex];\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     *\n     * @param {HTMLTableRowElement} row - Collapse the given row\n     * @param {Object} record - Collapse the given record\n     * @param {Object} key - Primary key value\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record, key) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args, function (collapsingArgs) {\n            if (!collapsingArgs.cancel) {\n                if (collapsingArgs.collapseAll) {\n                    _this.expandCollapseAllChildren(record, 'collapse', key);\n                }\n                _this.expandCollapse('collapse', row, record);\n                var collapseArgs = { data: record, row: row };\n                if (!isRemoteData(_this)) {\n                    _this.setHeightForFrozenContent();\n                    _this.trigger(events.collapsed, collapseArgs);\n                    if (_this.enableInfiniteScrolling) {\n                        var scrollHeight = _this.grid.getContent().firstElementChild.scrollHeight;\n                        var scrollTop = _this.grid.getContent().firstElementChild.scrollTop;\n                        if ((scrollHeight - scrollTop) < _this.grid.getRowHeight() + +_this.height) {\n                            _this.grid.getContent().firstElementChild.scrollBy(0, _this.grid.getRowHeight());\n                        }\n                    }\n                }\n            }\n        });\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     *\n     * @param {number} level - Expands the parent rows at given level\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandAction(rec, null, level, true);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var record = getObject('records', rec);\n            this.expandAction(record, null, level);\n        }\n    };\n    /**\n     * Expands the records by given primary key value\n     *\n     * @param {Object} key - Expands the parent rows with given primary key value\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandByKey = function (key) {\n        this.expandCollapseActionByKey(key, 'Expand');\n    };\n    TreeGrid.prototype.expandAction = function (record, key, level, isPaging) {\n        if (isPaging === void 0) { isPaging = false; }\n        var _loop_1 = function (i) {\n            if (!isNullOrUndefined(record[i].parentItem)) {\n                var puniqueID_1 = record[i].parentItem.uniqueID;\n                var parentItem = this_1.flatData.filter(function (e) {\n                    return e.uniqueID === puniqueID_1;\n                });\n                if (isRemoteData(this_1)) {\n                    parentItem = this_1.getCurrentViewRecords().filter(function (e) {\n                        return e.uniqueID === puniqueID_1;\n                    });\n                }\n                if (parentItem[0].expanded === false) {\n                    record.push(parentItem[0]);\n                    parentItem[0].expanded = true;\n                }\n                else {\n                    if (!getExpandStatus(this_1, parentItem[0], this_1.parentData)) {\n                        if (parentItem[0].expanded && parentItem[0].parentItem !== undefined) {\n                            record.push(parentItem[0]);\n                        }\n                    }\n                }\n            }\n            if (!isPaging) {\n                this_1.expandRow(null, record[i], key, level);\n            }\n        };\n        var this_1 = this;\n        for (var i = 0; i < record.length; i++) {\n            _loop_1(i);\n        }\n        if (isPaging) {\n            this.expandRow(null, record, key, level);\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) {\n            return e.level === level && e.hasChildRecords;\n        });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     *\n     * @param {number} level - Define the parent row level which needs to be collapsed\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseAction(record, null, true);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var records = getObject('records', rec);\n            this.collapseAction(records);\n        }\n    };\n    /**\n     * Collapses the records by given primary key value\n     *\n     * @param {Object} key - Collapses the parent rows with given primary key value\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseByKey = function (key) {\n        this.expandCollapseActionByKey(key, 'Collapse');\n    };\n    TreeGrid.prototype.expandCollapseActionByKey = function (key, action) {\n        var primaryKeyField = this.getPrimaryKeyFieldNames()[0];\n        var dataSource = isRemoteData(this) ? this.getCurrentViewRecords() : this.grid.dataSource;\n        if (!isNullOrUndefined(primaryKeyField)) {\n            var rec = dataSource.filter(function (e) {\n                return e[primaryKeyField].toString() === key.toString();\n            });\n            if (action === 'Expand') {\n                this.expandAction(rec, key, null);\n            }\n            else {\n                this.collapseAction(rec, key);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseAction = function (record, key, isPaging) {\n        if (isPaging === void 0) { isPaging = false; }\n        if (isPaging) {\n            this.collapseRow(null, record);\n        }\n        else {\n            for (var i = 0; i < record.length; i++) {\n                this.collapseRow(null, record[i], key);\n            }\n        }\n        if (!this.grid.contentModule.isDataSourceChanged && this.enableVirtualization && this.getRows()\n            && this.parentData.length === this.getRows().length) {\n            var endIndex = 'endIndex';\n            this.grid.contentModule.startIndex = -1;\n            this.grid.contentModule[endIndex] = -1;\n        }\n    };\n    /**\n     * Expands All the rows\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        if (!rows.length && this.getRows().length) {\n            rows.push(this.getRows()[0]);\n        }\n        this.isExpandAll = true;\n        this.isCollapseAll = true;\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            if (rows.length) {\n                if (action === 'collapse') {\n                    this.collapseRow(rows[0]);\n                }\n                else {\n                    this.expandRow(rows[0]);\n                }\n            }\n            else if (this.allowPaging) {\n                var isExpandCollapseall = this.enableCollapseAll;\n                this.setProperties({ enableCollapseAll: true }, true);\n                this.grid.pagerModule.goToPage(1);\n                this.setProperties({ enableCollapseAll: isExpandCollapseall }, true);\n            }\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                if (action === 'collapse') {\n                    this.collapseRow(rows[i]);\n                }\n                else {\n                    this.expandRow(rows[i]);\n                }\n            }\n        }\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var expandingArgs = { row: row, data: record, childData: [], requestType: action };\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        var targetEle;\n        if (!isRemoteData(this) && action === 'expand' && this.isSelfReference && isCountRequired(this) && !childRecords.length) {\n            this.updateChildOnDemand(expandingArgs);\n        }\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.getCurrentViewRecords().indexOf(record);\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)\n            && !isCountRequired(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                if (!isNullOrUndefined(row)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridexpand')) {\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild || isCountRequired(this)) {\n                    record.expanded = false;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                if (!isNullOrUndefined(row)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    !record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridcollapse')) {\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var detailrows = gridRows.filter(function (r) {\n                return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n            });\n            if (isRemoteData(this) && !isOffline(this)) {\n                this.remoteExpand(action, row, record);\n            }\n            else {\n                if ((!isCountRequired(this) || childRecords.length) || action === 'collapse') {\n                    this.localExpand(action, row, record);\n                }\n            }\n            if (this.isPixelHeight() && !row.cells[0].classList.contains('e-lastrowcell')) {\n                var totalRows = this.getRows();\n                var rows = this.getContentTable().rows;\n                totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[i])) {\n                        var table = this.getContentTable();\n                        var sHeight = table.scrollHeight;\n                        var clientHeight = this.getContent().clientHeight;\n                        this.lastRowBorder(totalRows[i], sHeight <= clientHeight);\n                        break;\n                    }\n                }\n            }\n            this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction, record: record, row: row });\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateChildOnDemand = function (expandingArgs) {\n        var _this = this;\n        var deff = new Deferred();\n        var childDataBind = 'childDataBind';\n        expandingArgs[childDataBind] = deff.resolve;\n        var record = expandingArgs.data;\n        this.trigger(events.dataStateChange, expandingArgs);\n        deff.promise.then(function () {\n            if (expandingArgs.childData.length) {\n                var currentData = (_this.flatData);\n                var index = 0;\n                for (var i = 0; i < currentData.length; i++) {\n                    if (currentData[i].taskData === record.taskData) {\n                        index = i;\n                        break;\n                    }\n                }\n                var data_1 = getValue('result', _this.dataSource);\n                var childData = extendArray(expandingArgs.childData);\n                var length_1 = record[_this.childMapping] ? record[_this.childMapping].length > childData.length ?\n                    record[_this.childMapping].length : childData.length : childData.length;\n                for (var i = 0; i < length_1; i++) {\n                    if (record[_this.childMapping]) {\n                        data_1.filter(function (e, i) {\n                            if (e[_this.parentIdMapping] === record[_this.idMapping]) {\n                                data_1.splice(i, 1);\n                            }\n                        });\n                    }\n                    if (childData[i]) {\n                        childData[i].level = record.level + 1;\n                        childData[i].index = Math.ceil(Math.random() * 1000);\n                        childData[i].parentItem = extend({}, record);\n                        childData[i].taskData = extend({}, childData[i]);\n                        delete childData[i].parentItem.childRecords;\n                        delete childData[i].taskData.parentItem;\n                        childData[i].parentUniqueID = record.uniqueID;\n                        childData[i].uniqueID = getUid(_this.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + childData[i].uniqueID, childData[i], _this);\n                        if (!isNullOrUndefined(childData[i][_this.childMapping]) ||\n                            (childData[i][_this.hasChildMapping] && isCountRequired(_this))) {\n                            childData[i].hasChildRecords = true;\n                        }\n                        currentData.splice(index + 1 + i, record[_this.childMapping] && record[_this.childMapping][i] ? 1 : 0, childData[i]);\n                    }\n                    else {\n                        currentData.splice(index + 1 + i, 1);\n                    }\n                }\n                currentData[index][_this.childMapping] = childData;\n                currentData[index].childRecords = childData;\n                currentData[index].expanded = true;\n                setValue('uniqueIDCollection.' + currentData[index].uniqueID, currentData[index], _this);\n                for (var j = 0; j < expandingArgs.childData.length; j++) {\n                    data_1.push(expandingArgs.childData[j]);\n                }\n            }\n            _this.isExpandRefresh = true;\n            _this.grid.refresh();\n            _this.setHeightForFrozenContent();\n            _this.trigger(events.expanded, expandingArgs);\n        });\n    };\n    TreeGrid.prototype.remoteExpand = function (action, row, record) {\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_1 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_1);\n        }\n        var args = { data: record, row: row };\n        var rows = [];\n        rows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (action === 'expand') {\n            this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n            var args_1 = { row: row, data: record };\n            if (rows.length > 0) {\n                this.setHeightForFrozenContent();\n                this.trigger(events.expanded, args_1);\n            }\n        }\n        else {\n            this.collapseRemoteChild({ record: record, rows: rows });\n            this.setHeightForFrozenContent();\n            this.trigger(events.collapsed, args);\n        }\n    };\n    TreeGrid.prototype.localExpand = function (action, row, record) {\n        var rows;\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        if (this.isPixelHeight() && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var movableRows;\n        var freezeRightRows;\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_2 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_2);\n        }\n        var displayAction = (action === 'expand') ? 'table-row' : 'none';\n        var primaryKeyField = this.getPrimaryKeyFieldNames()[0];\n        if (this.enableImmutableMode && !this.allowPaging) {\n            rows = [];\n            for (var i = 0; i < childRecords.length; i++) {\n                var rowIndex = this.grid.getRowIndexByPrimaryKey(childRecords[i][primaryKeyField]);\n                rows.push(this.getRows()[rowIndex]);\n            }\n        }\n        else {\n            rows = gridRows.filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        var freeze = (this.grid.getFrozenLeftColumnsCount() > 0 || this.grid.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (this.frozenRows || this.frozenColumns || this.getFrozenColumns() || freeze) {\n            movableRows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        if (freeze) {\n            freezeRightRows = this.getFrozenRightRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            if (!isNullOrUndefined(rows[i])) {\n                rows[i].style.display = displayAction;\n            }\n            if (!isNullOrUndefined(movableRows)) {\n                movableRows[i].style.display = displayAction;\n            }\n            if (!isNullOrUndefined(freezeRightRows)) {\n                freezeRightRows[i].style.display = displayAction;\n            }\n            this.notify('childRowExpand', { row: rows[i] });\n            if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                this.expandCollapse(action, rows[i], childRecords[i], true);\n                if (this.frozenColumns <= this.treeColumnIndex && !isNullOrUndefined(movableRows)) {\n                    this.expandCollapse(action, movableRows[i], childRecords[i], true);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[i];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function () {\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            rows = [].slice.call(rows);\n            for (var i = 0; i < rows.length; i++) {\n                var rcell = this.grid.getContentTable().rows[i].cells[this.treeColumnIndex];\n                var row = rows[i];\n                var rowData = this.grid.getRowsObject()[i].data;\n                var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n                this.renderModule.cellRender(arg);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rowDetails, isChild) {\n        if (!isChild) {\n            rowDetails.record.expanded = false;\n        }\n        var rows = rowDetails.rows;\n        var row;\n        var childRecord;\n        var movablerows = [];\n        var rightrows = [];\n        var freeze = (this.getFrozenLeftColumnsCount() > 0 || this.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            movablerows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + rowDetails.record.index + 'level' + (rowDetails.record.level + 1));\n            });\n            rightrows = this.getFrozenRightRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + rowDetails.record.index + 'level' + (rowDetails.record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].style.display = 'none';\n            row = rows[i];\n            var collapsingTd = rows[i].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (freeze) {\n                movablerows[i].style.display = 'none';\n                rightrows[i].style.display = 'none';\n                if (!rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                    if (movablerows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                        row = movablerows[i];\n                    }\n                    else if (rightrows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                        row = rightrows[i];\n                    }\n                }\n            }\n            if (row.querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = row.querySelector('.e-treecolumn-container .e-treegridexpand');\n                childRecord = this.rowTemplate ? this.grid.getCurrentViewRecords()[rows[i].rowIndex] :\n                    this.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n                if (!isNullOrUndefined(expandElement) && childRecord.expanded) {\n                    removeClass([expandElement], 'e-treegridexpand');\n                    addClass([expandElement], 'e-treegridcollapse');\n                }\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[i_1].querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1))) {\n                        cRow.push(eRows[i_1]);\n                    }\n                }\n                if (cRow.length && childRecord.expanded) {\n                    this.collapseRemoteChild({ record: childRecord, rows: cRow }, true);\n                }\n            }\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n        this.grid.on('initial-end', this.afterGridRender, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n        this.grid.off('initial-end', this.afterGridRender);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     *\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, the TreeGrid filters the records with exact match. if false, it filters\n     * case insensitive records (uppercase and lowercase letters are treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent is set to true,\n     * then filter ignores diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for filter column.\n     * @returns {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     *\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     *\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     *\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     *\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     * @returns {void}\n     */\n    TreeGrid.prototype.copy = function (withHeader) {\n        this.clipboardModule.copy(withHeader);\n    };\n    /**\n     * Paste data from clipboard to selected cells.\n     *\n     * @param {boolean} data - Specifies the date for paste.\n     * @param {boolean} rowIndex - Specifies the row index.\n     * @param {boolean} colIndex - Specifies the column index.\n     * @returns {void}\n     */\n    TreeGrid.prototype.paste = function (data, rowIndex, colIndex) {\n        this.clipboardModule.paste(data, rowIndex, colIndex);\n    };\n    /**\n     * Selects a cell by the given index.\n     *\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     *\n     * @returns {Element[]} - Returns selected row elements collection\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} - Returns movable cell element from the indexes passed\n     */\n    TreeGrid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getMovableCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets all the TreeGrid's movable table data rows.\n     *\n     * @returns {Element[]} - Returns element collection of movable rows\n     */\n    TreeGrid.prototype.getMovableDataRows = function () {\n        return this.grid.getMovableDataRows();\n    };\n    /**\n     * Gets a movable tables row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} - Returns movable row based on index passed\n     */\n    TreeGrid.prototype.getMovableRowByIndex = function (index) {\n        return this.grid.getMovableRowByIndex(index);\n    };\n    /**\n     * Gets the TreeGrid's movable content rows from frozen treegrid.\n     *\n     * @returns {Element[]}: Returns movable row element\n     */\n    TreeGrid.prototype.getMovableRows = function () {\n        return this.grid.getMovableRows();\n    };\n    /**\n     * Gets a frozen right tables row element by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} returns the element\n     */\n    TreeGrid.prototype.getFrozenRightRowByIndex = function (index) {\n        return this.grid.getFrozenRightRowByIndex(index);\n    };\n    /**\n     * Gets the Tree Grid's frozen right content rows from frozen Tree Grid.\n     *\n     * @returns {Element[]} returns the element\n     */\n    TreeGrid.prototype.getFrozenRightRows = function () {\n        return this.grid.getFrozenRightRows();\n    };\n    /**\n     * Gets all the Tree Grid's frozen right table data rows.\n     *\n     * @returns {Element[]} Returns the Element\n     */\n    TreeGrid.prototype.getFrozenRightDataRows = function () {\n        return this.grid.getFrozenRightDataRows();\n    };\n    /**\n     * Gets a frozen right table cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    TreeGrid.prototype.getFrozenRightCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getFrozenRightCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a frozen left column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    TreeGrid.prototype.getFrozenLeftColumnHeaderByIndex = function (index) {\n        return this.grid.getFrozenLeftColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a frozen right column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    TreeGrid.prototype.getFrozenRightColumnHeaderByIndex = function (index) {\n        return this.grid.getFrozenRightColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a movable column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    TreeGrid.prototype.getMovableColumnHeaderByIndex = function (index) {\n        return this.grid.getMovableColumnHeaderByIndex(index);\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the movable column count\n     */\n    TreeGrid.prototype.getMovableColumnsCount = function () {\n        return this.grid.getMovableColumnsCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the Frozen Left column\n     */\n    TreeGrid.prototype.getFrozenLeftColumnsCount = function () {\n        return this.grid.getFrozenLeftColumnsCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the Frozen Right column count\n     */\n    TreeGrid.prototype.getFrozenRightColumnsCount = function () {\n        return this.grid.getFrozenRightColumnsCount();\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    TreeGrid.prototype.getFrozenLeftColumns = function () {\n        this.updateColumnModel(this.grid.getFrozenLeftColumns());\n        return this.columnModel;\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    TreeGrid.prototype.getFrozenRightColumns = function () {\n        this.updateColumnModel(this.grid.getFrozenRightColumns());\n        return this.columnModel;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible movable count\n     */\n    TreeGrid.prototype.getVisibleMovableCount = function () {\n        return this.grid.getVisibleMovableCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible Frozen Right count\n     */\n    TreeGrid.prototype.getVisibleFrozenRightCount = function () {\n        return this.grid.getVisibleFrozenRightCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible Frozen left count\n     */\n    TreeGrid.prototype.getVisibleFrozenLeftCount = function () {\n        return this.grid.getVisibleFrozenLeftCount();\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    TreeGrid.prototype.getMovableColumns = function () {\n        this.updateColumnModel(this.grid.getMovableColumns());\n        return this.columnModel;\n    };\n    /**\n     * Gets the number of frozen column in tree grid\n     *\n     * @hidden\n     * @returns {number} - Returns frozen column count\n     */\n    TreeGrid.prototype.getFrozenColumns = function () {\n        return this.getFrozenCount(this.columns, 0) + this.frozenColumns;\n    };\n    TreeGrid.prototype.getFrozenCount = function (cols, cnt) {\n        for (var j = 0, len = cols.length; j < len; j++) {\n            if (cols[j].columns) {\n                cnt = this.getFrozenCount(cols[j].columns, cnt);\n            }\n            else {\n                if (cols[j].isFrozen) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     *\n     * @returns {number[]} - Returns selected rows index collection\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     *\n     * @returns {ISelectedCell[]} - Returns selected cell's index details\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     *\n     * @isGenericType true\n     * @returns {Object[]} - Returns selected records collection\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     *\n     * @returns {{baseModule: Data, treeModule: DataManipulation}}: Returns grid and treegrid data module\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     *\n     * @param {number[]} fromIndexes - Source indexes of rows\n     * @param {number} toIndex - Destination index of row\n     * @param {string} position - Defines drop position as above or below or child\n     * @returns {void}\n     */\n    TreeGrid.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property('Ellipsis')\n    ], TreeGrid.prototype, \"clipMode\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"loadChildOnDemand\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], TreeGrid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnChooser\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property('Parent')\n    ], TreeGrid.prototype, \"copyHierarchyMode\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAutoFill\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAdaptiveUI\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableImmutableMode\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableColumnVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableInfiniteScrolling\", void 0);\n    __decorate([\n        Complex({}, InfiniteScrollSettings)\n    ], TreeGrid.prototype, \"infiniteScrollSettings\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSaved\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchCancel\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePaste\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n *\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Reorder(parent) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Reorder module name\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var columnModel = 'columnModel';\n        var treeColumn = this.parent[columnModel][this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n *\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     *\n     * @param  {string|string[]} fName - Defines the field name.\n     * @returns {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Resize module name\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend, getValue, removeClass, addClass } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords, isRemoteData, isOffline, isCountRequired } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n *\n * @hidden\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function RowDD(parent) {\n        /** @hidden */\n        this.canDrop = true;\n        /** @hidden */\n        this.isDraggedWithChild = false;\n        /** @hidden */\n        this.isaddtoBottom = false;\n        Grid.Inject(GridDragDrop);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    RowDD.prototype.getChildrecordsByParentID = function (id) {\n        var treeGridDataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            treeGridDataSource = this.parent.grid.dataSource.dataSource.json;\n        }\n        else {\n            treeGridDataSource = this.parent.grid.dataSource;\n        }\n        var record = treeGridDataSource.filter(function (e) {\n            return e.uniqueID === id;\n        });\n        return record;\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    RowDD.prototype.addEventListener = function () {\n        this.parent.on(events.rowdraging, this.Rowdraging, this);\n        this.parent.on(events.rowDropped, this.rowDropped, this);\n        this.parent.on(events.rowsAdd, this.rowsAdded, this);\n        this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     *\n     * @returns {void}\n     * @param {number[]} fromIndexes - source indexes of rows to be re-ordered\n     * @param {number} toIndex - Destination row index\n     * @param {string} position - Drop position as above or below or child\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        var tObj = this.parent;\n        if (fromIndexes[0] !== toIndex && ['above', 'below', 'child'].indexOf(position) !== -1) {\n            if (position === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (position === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (position === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            var data = [];\n            for (var i = 0; i < fromIndexes.length; i++) {\n                data[i] = this.parent.getCurrentViewRecords()[fromIndexes[i]];\n            }\n            var isByMethod = true;\n            var args = {\n                data: data,\n                dropIndex: toIndex\n            };\n            if (!isCountRequired(this.parent)) {\n                this.dropRows(args, isByMethod);\n            }\n            //this.refreshGridDataSource();\n            if (tObj.isLocalData) {\n                tObj.flatData = this.orderToIndex(tObj.flatData);\n            }\n            this.parent.grid.refresh();\n            if (this.parent.enableImmutableMode && this.dropPosition === 'middleSegment') {\n                var index = this.parent.treeColumnIndex + 1;\n                var row = this.parent.getRows()[fromIndexes[0]];\n                var dropData = args.data[0];\n                var totalRecord = [];\n                var rows = [];\n                totalRecord.push(dropData);\n                rows.push(row);\n                var parentUniqueID = 'parentUniqueID';\n                var parentData = getParentData(this.parent, args.data[0][parentUniqueID]);\n                var parentrow = this.parent.getRows()[toIndex];\n                totalRecord.push(parentData);\n                rows.push(parentrow);\n                for (var i = 0; i < totalRecord.length; i++) {\n                    this.parent.renderModule.cellRender({\n                        data: totalRecord[i], cell: rows[i].cells[index],\n                        column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                        requestType: 'rowDragAndDrop'\n                    });\n                }\n            }\n        }\n        else {\n            return;\n        }\n    };\n    RowDD.prototype.orderToIndex = function (currentData) {\n        var _loop_1 = function (i) {\n            currentData[i].index = i;\n            if (!isNullOrUndefined(currentData[i].parentItem)) {\n                var updatedParent = currentData.filter(function (data) {\n                    return data.uniqueID === currentData[i].parentUniqueID;\n                })[0];\n                currentData[i].parentItem.index = updatedParent.index;\n            }\n        };\n        for (var i = 0; i < currentData.length; i++) {\n            _loop_1(i);\n        }\n        return currentData;\n    };\n    RowDD.prototype.rowsAdded = function (e) {\n        var draggedRecord;\n        var dragRecords = e.records;\n        for (var i = e.records.length - 1; i > -1; i--) {\n            draggedRecord = dragRecords[i];\n            if (draggedRecord.parentUniqueID) {\n                var record = dragRecords.filter(function (data) {\n                    return data.uniqueID === draggedRecord.parentUniqueID;\n                });\n                if (record.length) {\n                    var index = record[0].childRecords.indexOf(draggedRecord);\n                    var parentRecord = record[0];\n                    if (index !== -1) {\n                        if (isNullOrUndefined(this.parent.idMapping)) {\n                            parentRecord.childRecords.splice(index, 1);\n                            if (!parentRecord.childRecords.length) {\n                                parentRecord.hasChildRecords = false;\n                                parentRecord.hasFilteredChildRecords = false;\n                            }\n                        }\n                        this.isDraggedWithChild = true;\n                    }\n                }\n            }\n        }\n        if (isNullOrUndefined(this.parent.dataSource) || !this.parent.dataSource.length) {\n            var tObj = this.parent;\n            var draggedRecord_1;\n            var dragRecords_1 = e.records;\n            var dragLength = e.records.length;\n            for (var i = dragLength - 1; i > -1; i--) {\n                draggedRecord_1 = dragRecords_1[i];\n                if (!i && draggedRecord_1.hasChildRecords) {\n                    draggedRecord_1.taskData[this.parent.parentIdMapping] = null;\n                }\n                var recordIndex1 = 0;\n                if (!isNullOrUndefined(tObj.parentIdMapping)) {\n                    tObj.childMapping = null;\n                }\n                if (!isNullOrUndefined(draggedRecord_1.taskData) && !isNullOrUndefined(tObj.childMapping) &&\n                    !Object.prototype.hasOwnProperty.call(draggedRecord_1.taskData, tObj.childMapping)) {\n                    draggedRecord_1.taskData[tObj.childMapping] = [];\n                }\n                if (Object.prototype.hasOwnProperty.call(draggedRecord_1, tObj.childMapping) &&\n                    (draggedRecord_1[tObj.childMapping]).length && !this.isDraggedWithChild &&\n                    !isNullOrUndefined(tObj.parentIdMapping)) {\n                    var childData = (draggedRecord_1[tObj.childMapping]);\n                    for (var j = 0; j < childData.length; j++) {\n                        if (dragRecords_1.indexOf(childData[j]) === -1) {\n                            dragRecords_1.splice(j, 0, childData[j]);\n                            childData[j].taskData = extend({}, childData[j]);\n                            i += 1;\n                        }\n                    }\n                }\n                if (Object.prototype.hasOwnProperty.call(draggedRecord_1, tObj.parentIdMapping) && draggedRecord_1[tObj.parentIdMapping] != null\n                    && !this.isDraggedWithChild) {\n                    draggedRecord_1.taskData[tObj.parentIdMapping] = null;\n                    delete draggedRecord_1.parentItem;\n                    delete draggedRecord_1.parentUniqueID;\n                }\n                if (isNullOrUndefined(tObj.dataSource)) {\n                    tObj.dataSource = [];\n                }\n                tObj.dataSource.splice(recordIndex1, 0, draggedRecord_1.taskData);\n            }\n            tObj.setProperties({ dataSource: tObj.dataSource }, false);\n        }\n        else {\n            for (var i = 0; i < dragRecords.length; i++) {\n                setValue('uniqueIDCollection.' + dragRecords[i].uniqueID, dragRecords[i], this.parent);\n            }\n            var args = { data: e.records, dropIndex: e.toIndex };\n            if (this.parent.dataSource instanceof DataManager) {\n                this.treeGridData = this.parent.dataSource.dataSource.json;\n                this.treeData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                this.treeGridData = this.parent.grid.dataSource;\n                this.treeData = this.parent.dataSource;\n            }\n            if (isNullOrUndefined(this.dropPosition)) {\n                this.dropPosition = 'bottomSegment';\n                args.dropIndex = this.parent.getCurrentViewRecords().length > 1 ? this.parent.getCurrentViewRecords().length - 1 :\n                    args.dropIndex;\n                args.data = args.data.map(function (i) {\n                    if (i.hasChildRecords && isNullOrUndefined(i.parentItem)) {\n                        i.level = 0;\n                        return i;\n                    }\n                    else {\n                        delete i.parentItem;\n                        delete i.parentUniqueID;\n                        i.level = 0;\n                        return i;\n                    }\n                });\n            }\n            this.dropRows(args);\n        }\n    };\n    RowDD.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            this.draggedRecord = e.records[i];\n            if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem &&\n                this.parent.grid.dataSource.\n                    indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 ||\n                this.draggedRecord.level === 0) {\n                this.deleteDragRow();\n            }\n        }\n    };\n    RowDD.prototype.refreshGridDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            tempDataSource = proxy.dataSource.dataSource.json;\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        // eslint-disable-next-line max-len\n        if (tempDataSource && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem) && !isNullOrUndefined(droppedRecord.taskData)) {\n            for (var i = 0; i < Object.keys(tempDataSource).length; i++) {\n                if (tempDataSource[i][this.parent.childMapping] === droppedRecord.taskData[this.parent.childMapping]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.parentIdMapping && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n                var childRecords = record.childRecords;\n                for (var i = 0; i < childRecords.length; i++) {\n                    droppedRecord.parentItem.taskData[this.parent.childMapping][i] = childRecords[i].taskData;\n                }\n            }\n        }\n        if (this.parent.parentIdMapping) {\n            if (draggedRecord.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                }\n                else {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                }\n            }\n            else {\n                draggedRecord.taskData[this.parent.parentIdMapping] = null;\n                draggedRecord[this.parent.parentIdMapping] = null;\n            }\n        }\n    };\n    RowDD.prototype.removeFirstrowBorder = function (element) {\n        var canremove = this.dropPosition === 'bottomSegment';\n        if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element &&\n            (element.rowIndex !== 0 || canremove)) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.removeLastrowBorder = function (element) {\n        var isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader')\n            || element.classList.contains('e-detailrow'));\n        var islastRowIndex = element && !isEmptyRow &&\n            this.parent.getRowByIndex(this.parent.getCurrentViewRecords().length - 1).getAttribute('data-uid') !==\n                element.getAttribute('data-uid');\n        var canremove = islastRowIndex || this.dropPosition === 'topSegment';\n        if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.updateIcon = function (row, index, args) {\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        this.dropPosition = undefined;\n        var rowPositionHeight = 0;\n        this.removeFirstrowBorder(rowEle);\n        this.removeLastrowBorder(rowEle);\n        for (var i = 0; i < args.rows.length; i++) {\n            if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[i].getAttribute('data-uid')\n                || !parentsUntil(args.target, 'e-gridcontent')) {\n                this.dropPosition = 'Invalid';\n                this.addErrorElem();\n            }\n        }\n        // To get the corresponding drop position related to mouse position\n        var tObj = this.parent;\n        var rowTop = 0;\n        var roundOff = 0;\n        var toolHeight = tObj.toolbar && tObj.toolbar.length ?\n            document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n        // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n        var positionOffSet = this.getOffset(tObj.element);\n        // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n        var contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n        var scrollTop = tObj.getContent().firstElementChild.scrollTop;\n        if (!isNullOrUndefined(rowEle)) {\n            rowPositionHeight = rowEle.offsetTop - scrollTop;\n        }\n        // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n        rowTop = rowPositionHeight + contentHeight + roundOff;\n        var rowBottom = rowTop + row[0].offsetHeight;\n        var difference = rowBottom - rowTop;\n        var divide = difference / 3;\n        var topRowSegment = rowTop + divide;\n        var middleRowSegment = topRowSegment + divide;\n        var bottomRowSegment = middleRowSegment + divide;\n        var mouseEvent = getObject('originalEvent.event', args);\n        var touchEvent = getObject('originalEvent.event', args);\n        var posy = (mouseEvent.type === 'mousemove') ? mouseEvent.pageY : ((!isNullOrUndefined(touchEvent) &&\n            !isNullOrUndefined(touchEvent.changedTouches)) ? touchEvent.changedTouches[0].pageY : null);\n        var isTopSegment = posy <= topRowSegment;\n        var isMiddleRowSegment = (posy > topRowSegment && posy <= middleRowSegment);\n        var isBottomRowSegment = (posy > middleRowSegment && posy <= bottomRowSegment);\n        if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n            if (isTopSegment && this.dropPosition !== 'Invalid') {\n                this.removeChildBorder();\n                this.dropPosition = 'topSegment';\n                this.removetopOrBottomBorder();\n                this.addFirstrowBorder(rowEle);\n                this.removeErrorElem();\n                this.removeLastrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n            if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n                this.removetopOrBottomBorder();\n                var rowElement = [];\n                var element = closest(args.target, 'tr');\n                rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n                if (rowElement.length > 0) {\n                    this.addRemoveClasses(rowElement, true, 'e-childborder');\n                }\n                this.addLastRowborder(rowEle);\n                this.addFirstrowBorder(rowEle);\n                this.dropPosition = 'middleSegment';\n            }\n            if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n                this.removeErrorElem();\n                this.removetopOrBottomBorder();\n                this.removeChildBorder();\n                this.dropPosition = 'bottomSegment';\n                this.addLastRowborder(rowEle);\n                this.removeFirstrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n        }\n        return this.dropPosition;\n    };\n    RowDD.prototype.removeChildBorder = function () {\n        var borderElem = [];\n        borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n        if (borderElem.length > 0) {\n            this.addRemoveClasses(borderElem, false, 'e-childborder');\n        }\n    };\n    RowDD.prototype.addFirstrowBorder = function (targetRow) {\n        var node = this.parent.element;\n        var tObj = this.parent;\n        if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n            var div = this.parent.createElement('div', { className: 'e-firstrow-border' });\n            var gridheaderEle = this.parent.getHeaderContent();\n            var toolbarHeight = 0;\n            if (tObj.toolbar) {\n                toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n            }\n            var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n            if (multiplegrid) {\n                div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight\n                    + toolbarHeight + 'px';\n            }\n            div.style.width = multiplegrid ? node.offsetWidth + 'px' :\n                node.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n                gridheaderEle.appendChild(div);\n            }\n        }\n    };\n    RowDD.prototype.addLastRowborder = function (trElement) {\n        var isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') ||\n            trElement.classList.contains('e-columnheader') || trElement.classList.contains('e-detailrow'));\n        if (trElement && !isEmptyRow && this.parent.getRowByIndex(this.parent.getCurrentViewRecords().length - 1).getAttribute('data-uid') ===\n            trElement.getAttribute('data-uid')) {\n            var bottomborder = this.parent.createElement('div', { className: 'e-lastrow-border' });\n            var gridcontentEle = this.parent.getContent();\n            bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n                gridcontentEle.classList.add('e-treegrid-relative');\n                gridcontentEle.appendChild(bottomborder);\n                bottomborder.style.bottom = this.getScrollWidth() + 'px';\n            }\n        }\n    };\n    RowDD.prototype.getScrollWidth = function () {\n        var scrollElem = this.parent.getContent().firstElementChild;\n        return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        if (!errorelem && !this.parent.rowDropSettings.targetID) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = errorVal.innerHTML;\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = content;\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        if (errorelem) {\n            errorelem.remove();\n        }\n    };\n    RowDD.prototype.topOrBottomBorder = function (target) {\n        var rowElement = [];\n        var element = closest(target, 'tr');\n        rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n        if (rowElement.length) {\n            if (this.dropPosition === 'topSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-droptop');\n                if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n                    this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n                }\n            }\n            if (this.dropPosition === 'bottomSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n            }\n        }\n    };\n    RowDD.prototype.removetopOrBottomBorder = function () {\n        var border = [];\n        border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n        if (border.length) {\n            this.addRemoveClasses(border, false, 'e-dropbottom');\n            this.addRemoveClasses(border, false, 'e-droptop');\n        }\n    };\n    RowDD.prototype.addRemoveClasses = function (cells, add, className) {\n        for (var i = 0, len = cells.length; i < len; i++) {\n            if (add) {\n                cells[i].classList.add(className);\n            }\n            else {\n                cells[i].classList.remove(className);\n            }\n        }\n    };\n    RowDD.prototype.getOffset = function (element) {\n        var box = element.getBoundingClientRect();\n        var body = document.body;\n        var docElem = document.documentElement;\n        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n        var clientTop = docElem.clientTop || body.clientTop || 0;\n        var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n    RowDD.prototype.Rowdraging = function (args) {\n        var tObj = this.parent;\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.cursor = '';\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        var rowIdx = rowEle ? rowEle.rowIndex : -1;\n        var dragRecords = [];\n        var droppedRecord = tObj.getCurrentViewRecords()[rowIdx];\n        this.removeErrorElem();\n        this.canDrop = true;\n        if (!args.data[0]) {\n            dragRecords.push(args.data);\n        }\n        else {\n            dragRecords = args.data;\n        }\n        if (rowIdx !== -1) {\n            this.ensuredropPosition(dragRecords, droppedRecord);\n        }\n        else {\n            this.canDrop = false;\n            this.addErrorElem();\n        }\n        if (!tObj.rowDropSettings.targetID && this.canDrop) {\n            tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n        }\n        if (tObj.rowDropSettings.targetID) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n                var srcControl = dropElement.ej2_instances[0];\n                srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n            }\n        }\n        if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (!dropElement) {\n                cloneElement.style.cursor = 'default';\n            }\n        }\n    };\n    RowDD.prototype.rowDropped = function (args) {\n        var tObj = this.parent;\n        var parentItem = 'parentItem';\n        if (!tObj.rowDropSettings.targetID) {\n            if (parentsUntil(args.target, 'e-content')) {\n                if (this.parent.element.querySelector('.e-errorelem')) {\n                    this.dropPosition = 'Invalid';\n                }\n                setValue('dropPosition', this.dropPosition, args);\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel) {\n                    if (!isCountRequired(this.parent)) {\n                        this.dropRows(args);\n                    }\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                    tObj.grid.refresh();\n                    if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                        tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                    }\n                }\n            }\n        }\n        else {\n            if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') &&\n                parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID || args.target && document.getElementById(tObj.rowDropSettings.targetID)) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel && tObj.rowDropSettings.targetID) {\n                    this.dragDropGrid(args);\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                }\n            }\n        }\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n        else if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-lastrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n        if (this.parent.enableImmutableMode && !this.parent.allowPaging && !isNullOrUndefined(args.data[0][parentItem])) {\n            var index = this.parent.treeColumnIndex;\n            index = index + 1;\n            var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n            var rowIndex = this.parent.grid.getRowIndexByPrimaryKey(args.data[0][primaryKeyField]);\n            var row = this.parent.getRows()[rowIndex];\n            var data = args.data[0];\n            if (this.dropPosition === 'middleSegment') {\n                var record = [];\n                var rows = [];\n                record.push(data);\n                rows.push(row);\n                var parentUniqueID = 'parentUniqueID';\n                data = getParentData(this.parent, args.data[0][parentUniqueID]);\n                rowIndex = this.parent.grid.getRowIndexByPrimaryKey(data[primaryKeyField]);\n                var parentrow = this.parent.getRows()[rowIndex];\n                record.push(data);\n                rows.push(parentrow);\n                for (var i = 0; i < record.length; i++) {\n                    this.parent.renderModule.cellRender({\n                        data: record[i], cell: rows[i].cells[index],\n                        column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                        requestType: 'rowDragAndDrop'\n                    });\n                }\n                var targetEle = parentrow.getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n            else {\n                this.parent.renderModule.cellRender({\n                    data: data, cell: row.cells[index],\n                    column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                    requestType: 'rowDragAndDrop'\n                });\n            }\n        }\n    };\n    RowDD.prototype.dragDropGrid = function (args) {\n        var tObj = this.parent;\n        var targetRow = closest(args.target, 'tr');\n        var targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n        var dropElement = parentsUntil(args.target, 'e-treegrid');\n        var srcControl;\n        if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID && !isRemoteData(this.parent)\n            && !isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            var records = tObj.getSelectedRecords();\n            var indexes = [];\n            for (var i = 0; i < records.length; i++) {\n                indexes[i] = records[i].index;\n            }\n            var data = srcControl.dataSource;\n            if (this.parent.idMapping != null && (isNullOrUndefined(this.dropPosition) || this.dropPosition === 'bottomSegment' || this.dropPosition === 'Invalid') && !(data.length)) {\n                var actualData = [];\n                for (var i = 0; i < records.length; i++) {\n                    if (records[i].hasChildRecords) {\n                        actualData.push(records[i]);\n                        var child = findChildrenRecords(records[i]);\n                        for (var i_1 = 0; i_1 < child.length; i_1++) {\n                            actualData.push(child[i_1]); // push child records to drop the parent record along with its child records\n                        }\n                    }\n                }\n                if (actualData.length) {\n                    records = actualData;\n                }\n            }\n            tObj.notify(events.rowsRemove, { indexes: indexes, records: records });\n            srcControl.notify(events.rowsAdd, { toIndex: targetIndex, records: records });\n            var srcControlFlatData = srcControl.rowDragAndDropModule.treeGridData;\n            if (!isNullOrUndefined(srcControlFlatData)) {\n                for (var i = 0; i < srcControlFlatData.length; i++) {\n                    srcControlFlatData[i].index = i;\n                    if (!isNullOrUndefined(srcControlFlatData[i].parentItem)) {\n                        var actualIndex = getValue('uniqueIDCollection.' + srcControlFlatData[i].parentUniqueID + '.index', srcControl);\n                        srcControlFlatData[i].parentItem.index = actualIndex;\n                    }\n                }\n            }\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n            if (srcControl.grid.dataSource.length > 1) {\n                srcControl.grid.refresh();\n                if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                    srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                }\n                if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n                    srcControl.getContent().querySelector('.e-lastrow-border').remove();\n                }\n            }\n        }\n        if (isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n        }\n    };\n    RowDD.prototype.getTargetIdx = function (targetRow) {\n        return targetRow ? parseInt(targetRow.getAttribute('aria-rowindex'), 10) : 0;\n    };\n    RowDD.prototype.getParentData = function (record) {\n        var parentItem = record.parentItem;\n        if (this.dropPosition === 'bottomSegment') {\n            var selectedRecord = this.parent.getSelectedRecords()[0];\n            this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var level = this.parent.getSelectedRecords()[0].level;\n            if (level === parentItem.level) {\n                this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n            }\n            else {\n                this.getParentData(parentItem);\n            }\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (this.dropPosition !== 'Invalid' && !isRemoteData(this.parent)) {\n            var tObj = this.parent;\n            var draggedRecord_2;\n            var droppedRecord = void 0;\n            if (isNullOrUndefined(args.dropIndex)) {\n                var rowIndex = tObj.getSelectedRowIndexes()[0] - 1;\n                var record = tObj.getCurrentViewRecords()[rowIndex];\n                this.getParentData(record);\n            }\n            else {\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n            }\n            var dragRecords = [];\n            droppedRecord = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            var count = 0;\n            var multiplegrid = this.parent.rowDropSettings.targetID;\n            this.isMultipleGrid = multiplegrid;\n            if (!multiplegrid) {\n                this.ensuredropPosition(dragRecords, droppedRecord);\n            }\n            else {\n                this.isaddtoBottom = multiplegrid && this.isDraggedWithChild;\n            }\n            var dragLength = dragRecords.length;\n            if (!isNullOrUndefined(this.parent.idMapping)) {\n                dragRecords.reverse();\n            }\n            var _loop_2 = function (i) {\n                draggedRecord_2 = dragRecords[i];\n                this_1.draggedRecord = draggedRecord_2;\n                if (this_1.dropPosition !== 'Invalid') {\n                    if (!tObj.rowDropSettings.targetID || isByMethod) {\n                        this_1.deleteDragRow();\n                    }\n                    if (this_1.draggedRecord === this_1.droppedRecord) {\n                        var correctIndex = this_1.getTargetIdx(args.target.offsetParent.parentElement);\n                        if (isNaN(correctIndex)) {\n                            correctIndex = this_1.getTargetIdx(args.target.parentElement);\n                        }\n                        args.dropIndex = correctIndex;\n                        droppedRecord = this_1.droppedRecord = this_1.parent.getCurrentViewRecords()[args.dropIndex];\n                    }\n                    if (droppedRecord.parentItem || this_1.dropPosition === 'middleSegment') {\n                        var parentRecords = tObj.parentData;\n                        var newParentIndex = parentRecords.indexOf(this_1.draggedRecord);\n                        if (newParentIndex !== -1) {\n                            parentRecords.splice(newParentIndex, 1);\n                        }\n                    }\n                    var recordIndex1 = this_1.treeGridData.indexOf(droppedRecord);\n                    this_1.dropAtTop(recordIndex1);\n                    if (this_1.dropPosition === 'bottomSegment') {\n                        if (!droppedRecord.hasChildRecords) {\n                            if (this_1.parent.parentIdMapping) {\n                                this_1.treeData.splice(recordIndex1 + 1, 0, this_1.draggedRecord.taskData);\n                            }\n                            this_1.treeGridData.splice(recordIndex1 + 1, 0, this_1.draggedRecord);\n                        }\n                        else {\n                            count = this_1.getChildCount(droppedRecord, 0);\n                            if (this_1.parent.parentIdMapping) {\n                                this_1.treeData.splice(recordIndex1 + count + 1, 0, this_1.draggedRecord.taskData);\n                            }\n                            this_1.treeGridData.splice(recordIndex1 + count + 1, 0, this_1.draggedRecord);\n                        }\n                        if (isNullOrUndefined(droppedRecord.parentItem)) {\n                            delete draggedRecord_2.parentItem;\n                            draggedRecord_2.level = 0;\n                            if (this_1.parent.parentIdMapping) {\n                                draggedRecord_2[this_1.parent.parentIdMapping] = null;\n                            }\n                        }\n                        if (droppedRecord.parentItem) {\n                            var rec = this_1.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n                            var childRecords = rec[0].childRecords;\n                            var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRecord_2);\n                            draggedRecord_2.parentItem = droppedRecord.parentItem;\n                            draggedRecord_2.parentUniqueID = droppedRecord.parentUniqueID;\n                            if (this_1.parent.parentIdMapping) {\n                                draggedRecord_2[this_1.parent.parentIdMapping] = droppedRecord[this_1.parent.parentIdMapping];\n                                draggedRecord_2.parentItem = droppedRecord.parentItem;\n                                draggedRecord_2.level = droppedRecord.level;\n                            }\n                        }\n                        if (draggedRecord_2.hasChildRecords) {\n                            var level = 1;\n                            this_1.updateChildRecordLevel(draggedRecord_2, level);\n                            this_1.updateChildRecord(draggedRecord_2, recordIndex1 + count + 1);\n                        }\n                    }\n                    this_1.dropMiddle(recordIndex1);\n                }\n                if (isNullOrUndefined(draggedRecord_2.parentItem)) {\n                    var parentRecords = tObj.parentData;\n                    var newParentIndex = parentRecords.indexOf(this_1.droppedRecord);\n                    var nonRepeat_1 = 0;\n                    parentRecords.filter(function (e) {\n                        if (draggedRecord_2.uniqueID === e.uniqueID) {\n                            nonRepeat_1++;\n                        }\n                    });\n                    if (this_1.dropPosition === 'bottomSegment' && nonRepeat_1 === 0) {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRecord_2);\n                    }\n                    else if (this_1.dropPosition === 'topSegment' && nonRepeat_1 === 0) {\n                        parentRecords.splice(newParentIndex, 0, draggedRecord_2);\n                    }\n                }\n                tObj.rowDragAndDropModule.refreshGridDataSource();\n            };\n            var this_1 = this;\n            for (var i = 0; i < dragLength; i++) {\n                _loop_2(i);\n            }\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex) {\n        var tObj = this.parent;\n        var childRecords = findChildrenRecords(this.droppedRecord);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords.length === 0) ? recordIndex + 1 :\n            childRecords.length + recordIndex + 1;\n        if (this.dropPosition === 'middleSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            else {\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength);\n            }\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1) {\n        var tObj = this.parent;\n        if (this.dropPosition === 'topSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(recordIndex1, 0, this.draggedRecord.taskData);\n            }\n            this.draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n            this.draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n            this.draggedRecord.level = this.treeGridData[recordIndex1].level;\n            this.treeGridData.splice(recordIndex1, 0, this.draggedRecord);\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n                var childRecords = rec[0].childRecords;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var tObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = tObj.childMapping;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            droppedRecord.hasFilteredChildRecords = true;\n            if (isNullOrUndefined(droppedRecord.childRecords) || droppedRecord.childRecords.length === 0) {\n                droppedRecord.childRecords = [];\n                if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                    droppedRecord.taskData[childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            draggedRecord.parentItem = parentItem;\n            draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            var isSelfReference = 'isSelfReference';\n            if (tObj[isSelfReference]) {\n                droppedRecord[tObj.childMapping] = [];\n                droppedRecord[tObj.childMapping].splice(droppedRecord[tObj.childMapping].length, 0, draggedRecord);\n            }\n            if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            this.treeGridData = this.parent.grid.dataSource.dataSource.json;\n            this.treeData = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            this.treeGridData = this.parent.grid.dataSource;\n            this.treeData = this.parent.dataSource;\n        }\n        var deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n        if (!isNullOrUndefined(deletedRow.childRecords) && deletedRow.childRecords.length) {\n            deletedRow.hasChildRecords = true;\n        }\n        this.removeRecords(deletedRow);\n    };\n    RowDD.prototype.updateChildRecord = function (record, count) {\n        var currentRecord;\n        var tObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = getValue('uniqueIDCollection.' + record.childRecords[i].uniqueID, tObj);\n            count++;\n            tObj.flatData.splice(count, 0, currentRecord);\n            setValue('uniqueIDCollection.' + currentRecord.uniqueID, currentRecord, this.parent);\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = getValue('uniqueIDCollection.' + record.childRecords[i].uniqueID, this.parent);\n            var parentData = void 0;\n            if (record.parentItem) {\n                parentData = getParentData(this.parent, record.parentItem.uniqueID);\n            }\n            if (isNullOrUndefined(parentData) && !isNullOrUndefined(record.parentItem)) {\n                parentData = record.parentItem;\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var tObj = this.parent;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        var deletedRow = record;\n        var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n        var flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.parentIdMapping) {\n                        editAction({ value: deletedRow, action: 'delete' }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n                    }\n                }\n            }\n            if (tObj.parentIdMapping) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var idz = void 0;\n                var treeGridData = dataSource;\n                for (var i = 0; i < treeGridData.length; i++) {\n                    if (treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idx = i;\n                    }\n                }\n                for (var i = 0; i < this.treeGridData.length; i++) {\n                    if (this.treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idz = i;\n                    }\n                }\n                if (idx !== -1 && !isNullOrUndefined(idx)) {\n                    dataSource.splice(idx, 1);\n                }\n                if (idz !== -1 && !isNullOrUndefined(idz)) {\n                    this.treeGridData.splice(idz, 1);\n                }\n            }\n            var recordIndex = this.treeGridData.indexOf(deletedRow);\n            if (!tObj.parentIdMapping) {\n                var parentIndex = this.parent.parentData.indexOf(deletedRow);\n                if (parentIndex !== -1) {\n                    tObj.parentData.splice(parentIndex, 1);\n                    dataSource.splice(parentIndex, 1);\n                }\n            }\n            if (recordIndex === -1 && !tObj.parentIdMapping) {\n                var primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n                for (var j = 0; j < this.treeGridData.length; j++) {\n                    if (this.treeGridData[j][primaryKeyField] === deletedRow[primaryKeyField]) {\n                        recordIndex = j;\n                    }\n                }\n            }\n            if (!tObj.parentIdMapping) {\n                var deletedRecordCount = this.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n                flatParentData.hasFilteredChildRecords = false;\n            }\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var currentRecord;\n        var idx;\n        var idz;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            if (!isNullOrUndefined(currentRecord.childRecords) && currentRecord.childRecords.length) {\n                currentRecord.hasChildRecords = true;\n            }\n            var treeGridData = void 0;\n            if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n                treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                treeGridData = this.parent.dataSource;\n            }\n            for (var i_2 = 0; i_2 < treeGridData.length; i_2++) {\n                if (treeGridData[i_2][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idx = i_2;\n                }\n            }\n            for (var i_3 = 0; i_3 < this.treeGridData.length; i_3++) {\n                if (this.treeGridData[i_3][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idz = i_3;\n                    break;\n                }\n            }\n            if (idx !== -1 && !isNullOrUndefined(idx)) {\n                dataSource.splice(idx, 1);\n            }\n            if (idz !== -1 && !isNullOrUndefined(idz)) {\n                this.treeGridData.splice(idz, 1);\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    RowDD.prototype.getChildCount = function (record, count) {\n        var currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.ensuredropPosition = function (draggedRecords, currentRecord) {\n        var _this = this;\n        draggedRecords.filter(function (e) {\n            if (e.hasChildRecords && !isNullOrUndefined(e.childRecords)) {\n                var valid = e.childRecords.indexOf(currentRecord);\n                if (valid === -1) {\n                    _this.ensuredropPosition(e.childRecords, currentRecord);\n                }\n                else {\n                    _this.dropPosition = 'Invalid';\n                    _this.addErrorElem();\n                    _this.canDrop = false;\n                    return;\n                }\n            }\n        });\n    };\n    RowDD.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    RowDD.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowdraging, this.Rowdraging);\n        this.parent.off(events.rowDropped, this.rowDropped);\n        this.parent.off(events.rowsAdd, this.rowsAdded);\n        this.parent.off(events.rowsRemove, this.rowsRemoved);\n    };\n    /**\n     * hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns RowDragAndDrop module name\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragAndDrop';\n    };\n    return RowDD;\n}());\nexport { RowDD };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the row drop settings of the TreeGrid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(ChildProperty));\nexport { RowDropSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\n/**\n * RowModelGenerator is used to generate grid data rows.\n *\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.getDataInfo = function () {\n        return _super.prototype.getData.call(this);\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        if (!isNullOrUndefined(notifyArgs.virtualInfo) && notifyArgs.virtualInfo.loadNext &&\n            notifyArgs.virtualInfo.nextInfo.page !== this.parent.pageSettings.currentPage) {\n            this.parent.setProperties({ pageSettings: { currentPage: notifyArgs.virtualInfo.nextInfo.page } }, true);\n        }\n        else if (!isNullOrUndefined(notifyArgs.virtualInfo) && !notifyArgs.virtualInfo.loadNext &&\n            notifyArgs.virtualInfo.page !== this.parent.pageSettings.currentPage) {\n            this.parent.setProperties({ pageSettings: { currentPage: notifyArgs.virtualInfo.page } }, true);\n        }\n        var info = this.getDataInfo();\n        if (!isNullOrUndefined(notifyArgs.virtualInfo)) {\n            if (notifyArgs.virtualInfo.direction !== 'right' && notifyArgs.virtualInfo.direction !== 'left') {\n                notifyArgs.virtualInfo.blockIndexes = info.blockIndexes;\n            }\n            else {\n                notifyArgs.virtualInfo.blockIndexes = this.getBlockIndexes(notifyArgs.virtualInfo.page);\n            }\n        }\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            return _super.prototype.generateRows.call(this, data, notifyArgs);\n        }\n        else {\n            if (!isNullOrUndefined(notifyArgs.requestType) && notifyArgs.requestType.toString() === 'collapseAll') {\n                notifyArgs.requestType = 'refresh';\n            }\n            var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n            for (var r = 0; r < rows.length; r++) {\n                rows[r].index = (this.visualData).indexOf(rows[r].data);\n            }\n            return rows;\n        }\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            var model = 'model';\n            var currentPage = this[model].currentPage;\n            if (clear) {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n            else if (action === 'virtualscroll' && this.cache[currentPage] &&\n                this.cache[currentPage].length > (this.parent.contentModule).getBlockSize()) {\n                delete this.cache[currentPage];\n            }\n        }\n        else {\n            if (clear || action === 'virtualscroll') {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n *\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Filter module name\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *\n     * @param {{data: Object} } dataDetails - Filtered data collection\n     * @param {Object} dataDetails.data - Fliltered data collection\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[f];\n            this.addParentRecord(rec);\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n                : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'None') &&\n                (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== ''))) {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n                if (parRecord && parRecord.parentItem) {\n                    this.updateParentFilteredRecord(parRecord);\n                }\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.updateParentFilteredRecord = function (record) {\n        var parRecord = getParentData(this.parent, record.parentItem.uniqueID, true);\n        var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n        if (parRecord && Object.prototype.hasOwnProperty.call(uniqueIDValue, parRecord.uniqueID)) {\n            setValue('hasFilteredChildRecords', true, parRecord);\n        }\n        if (parRecord && parRecord.parentItem) {\n            this.updateParentFilteredRecord(parRecord);\n        }\n    };\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n            : this.parent.searchSettings.hierarchyMode;\n        if (hierarchyMode === 'None' && (this.parent.grid.filterSettings.columns.length !== 0\n            || this.parent.grid.searchSettings.key !== '')) {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                var hierarchyMode_1 = this.parent.grid.searchSettings.key === '' ?\n                    this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n                if (hierarchyMode_1 === 'Child' && (this.parent.grid.filterSettings.columns.length !== 0\n                    || this.parent.grid.searchSettings.key !== '')) {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[count].childRecords;\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ?\n                this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'Both') && (this.parent.grid.filterSettings.columns.length !== 0\n                || this.parent.grid.searchSettings.key !== ''))) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!Object.prototype.hasOwnProperty.call(uniqueIDValue, childRec[count].uniqueID)) {\n                    this.filteredResult.push(childRec[count]);\n                    setValue('uniqueIDFilterCollection.' + childRec[count].uniqueID, childRec[count], this.parent);\n                    isExist = true;\n                }\n            }\n            if ((hierarchyMode === 'None')\n                && (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== '')) {\n                if (this.flatFilteredData.indexOf(childRec[count]) !== -1) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n            if ((hierarchyMode === 'Child' || hierarchyMode === 'Both') && childRec.length) {\n                isExist = true;\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[c].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[c].parentUniqueID, true);\n                record[c].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[c].filterLevel = 0;\n                this.filteredParentRecs.push(record[c]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, getParentData, getExpandStatus } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n *\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function ExcelExport(parent) {\n        this.isCollapsedStatePersist = false;\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ExcelExport module name\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n        this.parent.grid.on('export-RowDataBound', this.exportRowDataBound, this);\n        this.parent.grid.on('finalPageSetup', this.finalPageSetup, this);\n    };\n    /**\n     * To destroy the Excel Export\n     *\n     * @returns {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n        this.parent.grid.off('export-RowDataBound', this.exportRowDataBound);\n        this.parent.grid.off('finalPageSetup', this.finalPageSetup);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* eslint-disable-next-line */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        if (!isNullOrUndefined(excelExportProperties)) {\n            this.isCollapsedStatePersist = excelExportProperties.isCollapsedStatePersist;\n        }\n        return new Promise(function (resolve) {\n            var dm = _this.isLocal() && !(dataSource instanceof DataManager) ? new DataManager(dataSource)\n                : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customData = null;\n                if (!isNullOrUndefined(excelExportProperties) && !isNullOrUndefined(excelExportProperties.dataSource)) {\n                    customData = excelExportProperties.dataSource;\n                }\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then(function (book) {\n                    if (customData != null) {\n                        excelExportProperties.dataSource = customData;\n                    }\n                    else {\n                        delete excelExportProperties.dataSource;\n                    }\n                    resolve(book);\n                });\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal()) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property && property.dataSource && this.isLocal()) {\n            var flatsData = this.parent.flatData;\n            var dataSrc = property.dataSource instanceof DataManager ? property.dataSource.dataSource.json : property.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatsData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     *\n     * @param {ExcelQueryCellInfoEventArgs} args - current cell details\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.exportRowDataBound = function (excelRow) {\n        if (excelRow.type === 'excel') {\n            var excelrowobj = excelRow.rowObj.data;\n            var filtercolumnlength = this.parent.grid.filterSettings.columns.length;\n            var rowlength = excelRow.excelRows.length;\n            var rowlevel = excelrowobj.level;\n            if (excelrowobj.parentItem && getParentData(this.parent, excelrowobj.parentItem.uniqueID, Boolean(filtercolumnlength))) {\n                var expandedStatus = false;\n                var sublevelState = false;\n                var state = getExpandStatus(this.parent, excelrowobj, this.parent.parentData);\n                if (this.isCollapsedStatePersist && (!state || !this.parent.isLocalData)) {\n                    expandedStatus = true;\n                    sublevelState = excelrowobj.expanded ? false : true;\n                }\n                excelRow.excelRows[rowlength - 1].grouping = { outlineLevel: rowlevel, isCollapsed: sublevelState,\n                    isHidden: expandedStatus };\n            }\n            else if (excelrowobj.hasChildRecords && isNullOrUndefined(excelrowobj.parentItem)) {\n                excelRow.excelRows[rowlength - 1].grouping = { outlineLevel: rowlevel };\n            }\n        }\n    };\n    /* eslint-disable-next-line */\n    ExcelExport.prototype.finalPageSetup = function (workbook) {\n        for (var i = 0; i < workbook.worksheets.length; i++) {\n            if (workbook.worksheets[i].rows) {\n                workbook.worksheets[i].pageSetup = { isSummaryRowBelow: false };\n            }\n        }\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n *\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} PdfExport module name\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     *\n     * @returns {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve) {\n            var dm = isLocal && !(dtSrc instanceof DataManager) ? new DataManager(dtSrc)\n                : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customsData = null;\n                if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource)) {\n                    customsData = pdfExportProperties.dataSource;\n                }\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then(function (document) {\n                    if (customsData != null) {\n                        pdfExportProperties.dataSource = customsData;\n                    }\n                    else {\n                        delete pdfExportProperties.dataSource;\n                    }\n                    resolve(document);\n                });\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        setValue('isPdfExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.isCollapsedStatePersist)) {\n            setValue('isCollapsedStatePersist', prop.isCollapsedStatePersist, args);\n        }\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop && prop.dataSource && isLocal) {\n            var flatDatas = this.parent.flatData;\n            var dataSrc = prop.dataSource instanceof DataManager ? prop.dataSource.dataSource.json : prop.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatDatas;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     *\n     * @param {PdfQueryCellInfoEventArgs} args - Current cell details\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n *\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Pager module name\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     *\n     * @returns {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     *\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @returns {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     *\n     * @param  {string} message - Defines the message to update.\n     * @returns {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @param {{action: string, row: HTMLTableRowElement, record: ITreeData, args: RowCollapsedEventArgs}} rowDetails - Expand Collapse details arguments\n     * @param {string} rowDetails.action - Expand Collapse action type\n     * @param {HTMLTableRowElement} rowDetails.row - Row element\n     * @param {ITreeData} rowDetails.record - Row object data\n     * @param {RowCollapsedEventArgs} rowDetails.args - Expand Collapse event arguments\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        if (this.parent.enableImmutableMode) {\n            var primaryKeyField_1 = this.parent.getPrimaryKeyFieldNames()[0];\n            var record = this.parent.flatData.filter(function (e) {\n                return e[primaryKeyField_1] === rowDetails.record[primaryKeyField_1];\n            });\n            if (record.length) {\n                record[0].expanded = rowDetails.record.expanded;\n            }\n        }\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n        if (this.parent.enableImmutableMode) {\n            var row = 'row';\n            var action = 'action';\n            var targetEle = void 0;\n            if (ret[action] === 'collapse') {\n                targetEle = ret[row].getElementsByClassName('e-treegridexpand')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridexpand');\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n            }\n            else if (ret[action] === 'expand') {\n                targetEle = ret[row].getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n        }\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[t]);\n            var res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = void 0;\n            if (isFilterChildHierarchy(this.parent) && ((this.parent.searchSettings.key !== this.parent.grid.searchSettings.key) ||\n                (this.parent.filterSettings.columns.length !== this.parent.grid.filterSettings.columns.length))) {\n                visualData = parents_1;\n            }\n            else {\n                visualData = parents_1.filter(function (e) {\n                    return getExpandStatus(_this.parent, e, parents_1);\n                });\n            }\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Toolbar Module for TreeGrid\n *\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Toolbar module name\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.rowSelected, this.refreshToolbar, this);\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowSelected, this.refreshToolbar);\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.refreshToolbar = function (args) {\n        var tObj = this.parent;\n        if (args.row.rowIndex === 0 || tObj.getSelectedRecords().length > 1) {\n            this.enableItems([tObj.element.id + '_gridcontrol_indent', tObj.element.id + '_gridcontrol_outdent'], false);\n        }\n        else {\n            if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex])) {\n                if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex]) &&\n                    (tObj.getCurrentViewRecords()[args.row.rowIndex].level >\n                        tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level)) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], false);\n                }\n                else {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level ===\n                    tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level === 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], false);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level !== 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n                }\n            }\n        }\n        if (args.row.rowIndex === 0 && !isNullOrUndefined(args.data.parentItem)) {\n            this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n        }\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        var tObj = this.parent;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n        if (args.item.id === tObj.grid.element.id + '_indent' && tObj.getSelectedRecords().length) {\n            var record = tObj.getCurrentViewRecords()[tObj.getSelectedRowIndexes()[0] - 1];\n            var dropIndex = void 0;\n            if (record.level > tObj.getSelectedRecords()[0].level) {\n                for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                    if (tObj.getCurrentViewRecords()[i].taskData === record.parentItem.taskData) {\n                        dropIndex = i;\n                    }\n                }\n            }\n            else {\n                dropIndex = tObj.getSelectedRowIndexes()[0] - 1;\n            }\n            tObj.reorderRows([tObj.getSelectedRowIndexes()[0]], dropIndex, 'child');\n        }\n        if (args.item.id === tObj.grid.element.id + '_outdent' && tObj.getSelectedRecords().length) {\n            var index = tObj.getSelectedRowIndexes()[0];\n            var dropIndex = void 0;\n            var parentItem = tObj.getSelectedRecords()[0].parentItem;\n            for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                if (tObj.getCurrentViewRecords()[i].taskData === parentItem.taskData) {\n                    dropIndex = i;\n                }\n            }\n            tObj.reorderRows([index], dropIndex, 'below');\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     *\n     * @returns {Element} - Returns Toolbar element\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     *\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @returns {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     *\n     * @method destroy\n     * @returns {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n *\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Summary module name\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *\n     * @param {QueryOptions[]} summaryQuery - DataManager query for aggregate operations\n     * @param {Object[]} filteredData - Filtered data collection\n     * @param {boolean} isSort - Specified whether sorting operation performed\n     * @hidden\n     * @returns {Object[]} -  return flat records with summary values\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords = parentData.slice();\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        var columns = this.parent.getColumns();\n        if (this.parent.aggregates.filter(function (x) { return x.showChildSummary; }).length) {\n            for (var i = 0, len = dataLength; i < len; i++) {\n                parentRecord = parentRecords[i];\n                childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n                if (childRecordsLength) {\n                    var _loop_1 = function (summaryRowIndex, len_1) {\n                        var item = void 0;\n                        item = {};\n                        for (var i_1 = 0; i_1 < columns.length; i_1++) {\n                            var field = (isNullOrUndefined(getObject('field', columns[i_1]))) ?\n                                columns[i_1] : getObject('field', (columns[i_1]));\n                            item[field] = null;\n                        }\n                        item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                        if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                            var idx_1;\n                            flatRecords.map(function (e, i) {\n                                if (e.uniqueID === parentRecord.uniqueID) {\n                                    idx_1 = i;\n                                    return;\n                                }\n                            });\n                            var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                            var summaryParent = extend({}, parentRecord);\n                            delete summaryParent.childRecords;\n                            delete summaryParent[this_1.parent.childMapping];\n                            setValue('parentItem', summaryParent, item);\n                            var level = getObject('level', summaryParent);\n                            setValue('level', level + 1, item);\n                            setValue('isSummaryRow', true, item);\n                            setValue('parentUniqueID', summaryParent.uniqueID, item);\n                            if (isSort) {\n                                var childRecords = getObject('childRecords', parentRecord);\n                                if (childRecords.length) {\n                                    childRecords.push(item);\n                                }\n                            }\n                            flatRecords.splice(currentIndex, 0, item);\n                        }\n                        else {\n                            return \"continue\";\n                        }\n                    };\n                    var this_1 = this;\n                    for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                        _loop_1(summaryRowIndex, len_1);\n                    }\n                    this.flatChildRecords = [];\n                }\n            }\n        }\n        else {\n            var items = {};\n            for (var columnIndex = 0, length_1 = columns.length; columnIndex < length_1; columnIndex++) {\n                var fields = isNullOrUndefined(getObject('field', columns[columnIndex])) ?\n                    columns[columnIndex] : getObject('field', columns[columnIndex]);\n                items[fields] = null;\n            }\n            for (var summaryRowIndex = 1, length_2 = summaryLength; summaryRowIndex <= length_2; summaryRowIndex++) {\n                this.createSummaryItem(items, this.parent.aggregates[summaryRowIndex - 1]);\n            }\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    if (this.flatChildRecords.length) {\n                        itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                    }\n                    else if (this.parent.isLocalData) {\n                        var data = this.parent.dataSource instanceof DataManager ? this.parent.dataSource.dataSource.json\n                            : this.parent.flatData;\n                        itemData[key] = this.getSummaryValues(summary.columns[i], data);\n                    }\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var qry = new Query();\n        var single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        for (var i = 0; i < types.length; i++) {\n            summaryKey = types[i];\n            var key = summaryColumn.field + ' - ' + types[i].toLowerCase();\n            var val = types[i] !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(types[i], sumData, summaryColumn, this.parent);\n            var disp = summaryColumn.columnName;\n            var value_1 = types[i] !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value_1;\n            single[disp][types[i]] = !isNullOrUndefined(val) ? formatFn(value_1) : ' ';\n        }\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        if (this.parent.isReact) {\n            var renderReactTemplates = 'renderReactTemplates';\n            tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property, '', null, null, cellElement);\n            this.parent[renderReactTemplates]();\n        }\n        else {\n            appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        }\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n *\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Sort module name\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[d].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[d];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[d];\n            }\n            if (data[d].hasChildRecords) {\n                var childSort = (new DataManager(data[d].childRecords).executeLocal(srtQry));\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     *\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @returns {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n *\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ColumnMenu module name\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, select } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n *\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = select('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow', args.element);\n        var editRecord = select('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit', args.element);\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if ((this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch')\n            && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below' || args.item.id === 'Child') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.addRecord();\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ContextMenu module name\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     *\n     * @returns {Element} Return Context Menu root element.\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { isNullOrUndefined, extend, setValue, getValue, merge } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, extendArray } from '../utils';\nimport { getUid } from '@syncfusion/ej2-grids';\nimport { updateParentRow, editAction } from './crud-actions';\n/**\n * `BatchEdit` module is used to handle batch editing actions.\n *\n * @hidden\n */\nvar BatchEdit = /** @class */ (function () {\n    function BatchEdit(parent) {\n        this.batchChildCount = 0;\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.batchAddedRecords = [];\n        this.batchDeletedRecords = [];\n        this.batchAddRowRecord = [];\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.batchRecords = [];\n        this.currentViewRecords = [];\n        this.isAdd = false;\n        this.addEventListener();\n    }\n    BatchEdit.prototype.addEventListener = function () {\n        this.parent.on(events.cellSaved, this.cellSaved, this);\n        this.parent.on(events.batchAdd, this.batchAdd, this);\n        this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.on(events.beforeBatchDelete, this.beforeBatchDelete, this);\n        this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        this.parent.on('batchPageAction', this.batchPageAction, this);\n        this.parent.on('batchCancelAction', this.batchCancelAction, this);\n        this.parent.grid.on('immutable-batch-cancel', this.immutableBatchAction, this);\n        this.parent.grid.on('next-cell-index', this.nextCellIndex, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    BatchEdit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.cellSaved, this.cellSaved);\n        this.parent.off(events.batchAdd, this.batchAdd);\n        this.parent.off(events.batchSave, this.batchSave);\n        this.parent.off(events.beforeBatchAdd, this.beforeBatchAdd);\n        this.parent.off(events.beforeBatchDelete, this.beforeBatchDelete);\n        this.parent.off(events.beforeBatchSave, this.beforeBatchSave);\n        this.parent.off('batchPageAction', this.batchPageAction);\n        this.parent.off('batchCancelAction', this.batchCancelAction);\n        this.parent.grid.off('immutable-batch-cancel', this.immutableBatchAction);\n        this.parent.grid.off('next-cell-index', this.nextCellIndex);\n    };\n    /**\n     * To destroy the editModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    BatchEdit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {Object[]} Returns modified records in batch editing.\n     */\n    BatchEdit.prototype.getBatchRecords = function () {\n        return this.batchRecords;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns index of newly add row\n     */\n    BatchEdit.prototype.getAddRowIndex = function () {\n        return this.addRowIndex;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns selected row index\n     */\n    BatchEdit.prototype.getSelectedIndex = function () {\n        return this.selectedIndex;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns newly added child count\n     */\n    BatchEdit.prototype.getBatchChildCount = function () {\n        return this.batchChildCount;\n    };\n    BatchEdit.prototype.batchPageAction = function () {\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var index;\n        if (!isNullOrUndefined(this.batchAddedRecords) && this.batchAddedRecords.length) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.cellSaved = function (args) {\n        var actualCellIndex = args.cell.cellIndex;\n        var frozenCols = this.parent.frozenColumns || this.parent.getFrozenColumns();\n        if (frozenCols && args.columnObject.index > frozenCols) {\n            actualCellIndex = actualCellIndex + frozenCols;\n        }\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n            this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            var colCount = this.parent.getFrozenLeftColumnsCount() + actualCellIndex;\n            if (colCount === this.parent.treeColumnIndex) {\n                this.parent.renderModule.cellRender({ data: args.rowData, cell: args.cell,\n                    column: this.parent.grid.getColumnByIndex(args.cell.cellIndex)\n                });\n            }\n        }\n        else if (actualCellIndex === this.parent.treeColumnIndex) {\n            this.parent.renderModule.cellRender({ data: args.rowData, cell: args.cell,\n                column: this.parent.grid.getColumnByIndex(args.cell.cellIndex)\n            });\n        }\n        if (this.isAdd && this.parent.editSettings.mode === 'Batch' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var added = void 0;\n            var level = 'level';\n            var primaryKey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var currentDataIndex = void 0;\n            var indexvalue = void 0;\n            var parentItem = 'parentItem';\n            var uniqueID = 'uniqueID';\n            var parentRecord = this.selectedIndex > -1 ? this.batchRecords[this.addRowIndex][parentItem] : null;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentIdMapping = void 0;\n            var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Top' || this.selectedIndex === -1 ? 0 :\n                this.parent.editSettings.newRowPosition === 'Above' ? this.addRowIndex\n                    : this.addRowIndex + 1;\n            rowObjectIndex = this.getActualRowObjectIndex(rowObjectIndex);\n            if (this.newBatchRowAdded) {\n                if (this.batchRecords.length) {\n                    idMapping = this.batchRecords[this.addRowIndex][this.parent.idMapping];\n                    parentIdMapping = this.batchRecords[this.addRowIndex][this.parent.parentIdMapping];\n                    if (this.batchRecords[this.addRowIndex][parentItem]) {\n                        parentUniqueID = this.batchRecords[this.addRowIndex][parentItem][uniqueID];\n                    }\n                }\n                this.batchAddedRecords = extendArray(this.batchAddedRecords);\n                this.batchAddRowRecord = extendArray(this.batchAddRowRecord);\n                this.batchAddRowRecord.push(this.batchRecords[this.addRowIndex]);\n                added = this.parent.grid.getRowsObject()[rowObjectIndex].changes;\n                added.uniqueID = getUid(this.parent.element.id + '_data_');\n                setValue('uniqueIDCollection.' + added.uniqueID, added, this.parent);\n                if (!Object.prototype.hasOwnProperty.call(added, 'level')) {\n                    this.batchIndex = this.selectedIndex === -1 ? 0 : this.batchIndex;\n                    if (this.parent.editSettings.newRowPosition === 'Child') {\n                        added.primaryParent = parentRecord;\n                        if (this.selectedIndex > -1) {\n                            added.parentItem = extend({}, this.batchRecords[this.addRowIndex]);\n                            added.parentUniqueID = added.parentItem.uniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                            added.level = added.parentItem.level + 1;\n                            added.index = this.batchIndex;\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                            if (this.isSelfReference) {\n                                added[this.parent.parentIdMapping] = idMapping;\n                            }\n                            updateParentRow(primaryKey_1, added.parentItem, 'add', this.parent, this.isSelfReference, added);\n                        }\n                    }\n                    else if ((this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below')\n                        && !isNullOrUndefined(this.batchRecords[this.addRowIndex])) {\n                        added.level = this.batchRecords[this.addRowIndex][level];\n                        if (added.level && this.selectedIndex > -1) {\n                            added.parentItem = parentRecord;\n                            added.parentUniqueID = parentUniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                        }\n                        added.index = this.parent.editSettings.newRowPosition === 'Below' ? this.batchIndex : this.batchIndex - 1;\n                        if (this.parent.editSettings.newRowPosition === 'Below' && this.selectedIndex > -1) {\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.parent.editSettings.newRowPosition === 'Above' && this.selectedIndex > -1) {\n                            var record = this.batchRecords[this.addRowIndex];\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.isSelfReference) {\n                            added[this.parent.parentIdMapping] = parentIdMapping;\n                        }\n                    }\n                    added.index = added.index === -1 ? 0 : added.index;\n                    added.hasChildRecords = false;\n                    added.childRecords = [];\n                    this.batchRecords.splice(added.index, 0, added);\n                    this.currentViewRecords.splice(added.index, 0, added);\n                    if (currentDataIndex) {\n                        indexvalue = currentDataIndex;\n                    }\n                    else {\n                        indexvalue = added.index;\n                    }\n                    if (this.parent.editSettings.newRowPosition !== 'Above') {\n                        indexvalue = added.index === 0 ? indexvalue : indexvalue + 1;\n                    }\n                    data.splice(indexvalue, 0, added);\n                    this.batchAddedRecords.push(added);\n                }\n                this.parent.grid.getRowsObject()[rowObjectIndex].data = added;\n                this.newBatchRowAdded = false;\n            }\n            if (this.parent.frozenColumns || this.parent.getFrozenColumns()\n                && this.parent.grid.getRowsObject()[rowObjectIndex].edit === 'add') {\n                merge(this.currentViewRecords[rowObjectIndex], this.parent.grid.getRowsObject()[rowObjectIndex].changes);\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchAdd = function (e) {\n        var isTabLastRow = 'isTabLastRow';\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.editModule[isTabLastRow]) {\n            e.cancel = true;\n            this.parent.editModule[isTabLastRow] = false;\n            return;\n        }\n        this.selectedIndex = this.parent.grid.selectedRowIndex;\n        this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n        this.addRowRecord = this.parent.getSelectedRecords()[0];\n    };\n    BatchEdit.prototype.batchAdd = function (e) {\n        if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n            this.isAdd = true;\n            this.newBatchRowAdded = true;\n            var actualIndex = 0;\n            if (!this.batchRecords.length) {\n                this.batchAddedRecords = [];\n                this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n                this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                var records = this.parent.grid.getCurrentViewRecords();\n                if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                    records = this.batchRecords;\n                }\n                this.updateChildCount(records);\n                this.parent.notify(events.beginAdd, {});\n                this.batchChildCount = 0;\n            }\n            this.updateRowIndex();\n            // update focus module, need to refix this once grid source modified.\n            var focusModule = getValue('focusModule', this.parent.grid);\n            var table = this.parent.getContentTable();\n            if (this.parent.getBatchChanges()[this.deletedRecords].length && this.parent.editSettings.newRowPosition === 'Above') {\n                actualIndex = e.row.rowIndex;\n                focusModule.getContent().matrix.matrix = this.matrix;\n            }\n            else {\n                actualIndex = table.getElementsByClassName('e-batchrow')[0].rowIndex;\n                // if (this.parent.frozenRows || this.parent.frozenColumns) {\n                //   actualIndex = this.batchIndex;\n                // }\n            }\n            focusModule.getContent().matrix.current = [actualIndex, focusModule.getContent().matrix.current[1]];\n        }\n    };\n    BatchEdit.prototype.beforeBatchDelete = function (args) {\n        if (!this.batchRecords.length) {\n            this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        }\n        var focusModule = getValue('focusModule', this.parent.grid);\n        this.matrix = focusModule.getContent().matrix.matrix;\n        var row = [];\n        var records = [];\n        var primarykey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var data;\n        var childs;\n        var uid;\n        if (!isNullOrUndefined(args.row) && this.parent.getSelectedRows().indexOf(args.row) === -1) {\n            data = args.rowData;\n            childs = findChildrenRecords(data);\n            uid = args.row.getAttribute('data-uid');\n        }\n        else {\n            data = this.parent.grid.getSelectedRecords()[this.parent.grid.getSelectedRecords().length - 1];\n            childs = findChildrenRecords(data);\n            uid = this.parent.getSelectedRows()[0].getAttribute('data-uid');\n        }\n        var parentRowIndex = parseInt(this.parent.grid.getRowElementByUID(uid).getAttribute('aria-rowindex'), 10);\n        if (childs.length) {\n            var totalCount = parentRowIndex + childs.length;\n            var firstChildIndex = parentRowIndex + 1;\n            for (var i = firstChildIndex; i <= totalCount; i++) {\n                row.push(this.parent.grid.getDataRows()[i]);\n                if (this.parent.frozenRows || this.parent.frozenColumns || this.parent.getFrozenColumns()) {\n                    row.push(this.parent.grid.getMovableRows()[i]);\n                }\n            }\n        }\n        if (!isNullOrUndefined(data.parentItem)) {\n            var parentItem = getParentData(this.parent, data.parentItem.uniqueID);\n            if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                var childIndex = parentItem.childRecords.indexOf(data);\n                parentItem.childRecords.splice(childIndex, 1);\n            }\n            this.batchDeletedRecords = extendArray(this.batchDeletedRecords);\n            this.batchDeletedRecords.push(data);\n        }\n        childs.push(data);\n        records = childs;\n        for (var i = 0; i < records.length; i++) {\n            var indexvalue = this.batchRecords.map(function (e) { return e[primarykey]; }).indexOf(records[i][primarykey]);\n            if (indexvalue !== -1) {\n                this.batchRecords.splice(indexvalue, 1);\n            }\n        }\n        for (var i = 0; i < row.length; i++) {\n            if (!isNullOrUndefined(row[i])) {\n                this.parent.grid.selectionModule.selectedRecords.push(row[i]);\n            }\n        }\n    };\n    BatchEdit.prototype.updateRowIndex = function () {\n        var rows = this.parent.grid.getDataRows();\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].setAttribute('aria-rowindex', i.toString());\n        }\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n            this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns || freeze) {\n            var mRows = this.parent.grid.getMovableDataRows();\n            var freezeRightRows = this.parent.grid.getFrozenRightDataRows();\n            for (var i = 0; i < mRows.length; i++) {\n                mRows[i].setAttribute('aria-rowindex', i.toString());\n                if (freeze) {\n                    freezeRightRows[i].setAttribute('aria-rowindex', i.toString());\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.updateChildCount = function (records) {\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var addedRecords = 'addedRecords';\n        var parentItem = this.parent.editSettings.newRowPosition === 'Child' ? 'primaryParent' : 'parentItem';\n        for (var i = 0; i < this.parent.getBatchChanges()[addedRecords].length; i++) {\n            if (!isNullOrUndefined(this.parent.getBatchChanges()[addedRecords][i][parentItem])) {\n                if (this.parent.getBatchChanges()[addedRecords][i][parentItem][primaryKey] === records[this.addRowIndex][primaryKey]) {\n                    this.batchChildCount = this.batchChildCount + 1;\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchSave = function (e) {\n        var changeRecords = 'changedRecords';\n        var deleterecords = 'deletedRecords';\n        var changedRecords = e.batchChanges[changeRecords];\n        if (e.batchChanges[changeRecords].length) {\n            var columnName = void 0;\n            for (var i = 0; i < changedRecords.length; i++) {\n                editAction({ value: changedRecords[i], action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName);\n            }\n        }\n        if (e.batchChanges[deleterecords].length) {\n            var deletedRecords = e.batchChanges[deleterecords];\n            var record = deletedRecords;\n            for (var i = 0; i < record.length; i++) {\n                this.deleteUniqueID(record[i].uniqueID);\n                var childs = findChildrenRecords(record[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                e.batchChanges[deleterecords] = e.batchChanges[deleterecords].concat(childs);\n            }\n        }\n        this.isAdd = false;\n    };\n    BatchEdit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    BatchEdit.prototype.batchCancelAction = function () {\n        var targetElement = 'targetElement';\n        var index;\n        var parentItem = 'parentItem';\n        var indexvalue = 'index';\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        var childRecords = 'childRecords';\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        if (!isNullOrUndefined(this.batchAddedRecords)) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n                if (this.parent.editSettings.newRowPosition === 'Child') {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchAddedRecords[i][parentItem] ? this.batchAddedRecords[i][parentItem][primaryKey]\n                        : this.batchAddedRecords[i][primaryKey]);\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        var children = currentViewRecords[index][childRecords];\n                        for (var j = 0; children && j < children.length; j++) {\n                            if (children[j][primaryKey] === this.batchAddedRecords[i][primaryKey]) {\n                                currentViewRecords[index][childRecords].splice(j, 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (!isNullOrUndefined(this.parent[targetElement])) {\n            var row = this.parent[targetElement].closest('tr');\n            this.parent.collapseRow(row);\n            this.parent[targetElement] = null;\n        }\n        if (!isNullOrUndefined(this.batchDeletedRecords)) {\n            for (var i = 0; i < this.batchDeletedRecords.length; i++) {\n                if (!isNullOrUndefined(this.batchDeletedRecords[i][parentItem])) {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchDeletedRecords[i][parentItem][primaryKey]);\n                    var positionIndex = this.batchDeletedRecords[i][indexvalue] === 0 ? this.batchDeletedRecords[i][indexvalue] :\n                        this.batchDeletedRecords[i][indexvalue] - 1;\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        currentViewRecords[index][childRecords].splice(positionIndex, 0, this.batchDeletedRecords[i]);\n                    }\n                }\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.currentViewRecords = [];\n        this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchIndex = 0;\n        this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchDeletedRecords = [];\n        this.parent.grid.renderModule.refresh();\n    };\n    BatchEdit.prototype.batchSave = function (args) {\n        if (this.parent.editSettings.mode === 'Batch') {\n            var i = void 0;\n            var batchChanges = Object.hasOwnProperty.call(args, 'updatedRecords') ? args.updatedRecords : this.parent.getBatchChanges();\n            var deletedRecords = 'deletedRecords';\n            var addedRecords = 'addedRecords';\n            var index = 'index';\n            var uniqueID = 'uniqueID';\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n            var primarykey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var level = 'level';\n            var addRecords = batchChanges[addedRecords];\n            var parentItem = 'parentItem';\n            var selectedIndex = void 0;\n            var addRowIndex = void 0;\n            var columnName = void 0;\n            var addRowRecord = void 0;\n            var childRecords = 'childRecords';\n            if (addRecords.length > 1 && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                addRecords.reverse();\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Bottom' && !Object.hasOwnProperty.call(args, 'updatedRecords')) {\n                data.splice(data.length - addRecords.length, addRecords.length);\n                if (!this.parent.allowPaging && data.length !== currentViewRecords.length) {\n                    if (currentViewRecords.length > addRecords.length) {\n                        currentViewRecords.splice(currentViewRecords.length - addRecords.length, addRecords.length);\n                    }\n                }\n                else {\n                    var totalRecords = extendArray(data);\n                    if (totalRecords.length) {\n                        var startIndex = totalRecords.map(function (e) { return e[primarykey_1]; })\n                            .indexOf(currentViewRecords[0][primarykey_1]);\n                        var endIndex = startIndex + this.parent.grid.pageSettings.pageSize;\n                        currentViewRecords = totalRecords.splice(startIndex, endIndex);\n                    }\n                }\n            }\n            if (this.batchAddRowRecord.length === 0) {\n                this.batchAddRowRecord.push(this.parent.flatData[args.index]);\n            }\n            for (i = 0; i < addRecords.length; i++) {\n                var taskData = extend({}, addRecords[i]);\n                delete taskData.parentItem;\n                delete taskData.uniqueID;\n                delete taskData.index;\n                delete taskData.level;\n                delete taskData.hasChildRecords;\n                delete taskData.childRecords;\n                delete taskData.parentUniqueID;\n                if (!isNullOrUndefined(taskData.primaryParent)) {\n                    delete taskData.primaryParent;\n                }\n                addRecords[i].taskData = taskData;\n                addRowRecord = this.batchAddRowRecord[i];\n                if (isNullOrUndefined(addRowRecord)) {\n                    addRowRecord = this.batchAddRowRecord[i - 1];\n                }\n                if (this.isSelfReference) {\n                    if (!isNullOrUndefined(addRecords[i].parentItem)) {\n                        updateParentRow(primarykey_1, addRecords[i].parentItem, 'add', this.parent, this.isSelfReference, addRecords[i]);\n                    }\n                }\n                if (!isNullOrUndefined(addRowRecord)) {\n                    addRowIndex = addRowRecord.index;\n                }\n                if (this.parent.editSettings.newRowPosition !== 'Top' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    if (isNullOrUndefined(addRecords[i].parentItem) && this.selectedIndex === -1) {\n                        selectedIndex = -1;\n                        addRowRecord = null;\n                    }\n                }\n                editAction({ value: addRecords[i], action: 'add' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                selectedIndex = null;\n                if (this.parent.editSettings.newRowPosition === 'Child' && !isNullOrUndefined(addRecords[i][parentItem])) {\n                    var indexValue = currentViewRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(addRecords[i][parentItem][primarykey_1]);\n                    var children = currentViewRecords[indexValue][childRecords];\n                    for (var j = 0; j < children.length; j++) {\n                        if (children[j][primarykey_1] === addRecords[i][primarykey_1]) {\n                            currentViewRecords[indexValue][childRecords].splice(j, 1);\n                        }\n                    }\n                }\n            }\n            if (batchChanges[deletedRecords].length) {\n                for (i = 0; i < batchChanges[deletedRecords].length; i++) {\n                    editAction({ value: batchChanges[deletedRecords][i], action: 'delete' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                }\n            }\n            this.parent.parentData = [];\n            for (var i_1 = 0; i_1 < data.length; i_1++) {\n                data[i_1][index] = i_1;\n                setValue('uniqueIDCollection.' + data[i_1][uniqueID] + '.index', i_1, this.parent);\n                if (!data[i_1][level]) {\n                    this.parent.parentData.push(data[i_1]);\n                }\n            }\n        }\n        this.batchAddRowRecord = this.batchAddedRecords = this.batchRecords = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.getActualRowObjectIndex = function (index) {\n        var rows = this.parent.grid.getDataRows();\n        if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n            && this.selectedIndex > -1) {\n            if (!isNullOrUndefined(this.batchRecords[this.addRowIndex]) && this.batchRecords[this.addRowIndex].expanded) {\n                if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                    if (this.parent.editSettings.newRowPosition !== 'Child') {\n                        var batchChildCount = this.getBatchChildCount();\n                        index = index + batchChildCount;\n                    }\n                }\n                else {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                }\n            }\n            if (index >= rows.length) {\n                index = rows.length - 1;\n            }\n            this.updateChildCount(this.parent.grid.getCurrentViewRecords());\n            if (this.batchChildCount) {\n                index += this.batchChildCount;\n            }\n            this.batchChildCount = 0;\n        }\n        return index;\n    };\n    BatchEdit.prototype.immutableBatchAction = function (e) {\n        e.args.cancel = true;\n        var changes = this.parent.grid.getBatchChanges();\n        var addedRecords = [];\n        var index = 'index';\n        if (Object.keys(changes).length) {\n            addedRecords = changes.addedRecords;\n        }\n        for (var i = 0; i < addedRecords.length; i++) {\n            e.rows.splice(addedRecords[i][index], 1);\n        }\n    };\n    BatchEdit.prototype.nextCellIndex = function (args) {\n        var index = 'index';\n        var rowIndex = 'rowIndex';\n        args[index] = this.parent.getSelectedRows()[0][rowIndex];\n    };\n    return BatchEdit;\n}());\nexport { BatchEdit };\n","import { Grid, Edit as GridEdit, getUid, getObject, resetRowIndex } from '@syncfusion/ej2-grids';\nimport { parentsUntil } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isCountRequired, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\nimport { BatchEdit } from './batch-edit';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Edit(parent) {\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.prevAriaRowIndex = '-1';\n        this.isAddedRowByMethod = false;\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.batchEditModule = new BatchEdit(this.parent);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Edit module name\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('batchedit-form', this.lastCellTab, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.on('actionBegin', this.editActionEvents, this);\n        this.parent.on('actionComplete', this.editActionEvents, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.grid.on('dblclick', this.gridDblClick, this);\n        this.parent.grid.on('recordAdded', this.customCellSave, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        this.parent.grid.on('reset-edit-props', this.resetIsOnBatch, this);\n        this.parent.grid.on('get-row-position', this.getRowPosition, this);\n    };\n    Edit.prototype.gridDblClick = function (e) {\n        this.doubleClickTarget = e.target;\n    };\n    Edit.prototype.getRowPosition = function (addArgs) {\n        addArgs.newRowPosition = this.parent.editSettings.newRowPosition;\n        addArgs.addRowIndex = this.addRowIndex;\n        addArgs.ariaRowIndex = +this.prevAriaRowIndex;\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.trigger(events.actionComplete, args);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('batchedit-form', this.lastCellTab);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.off('actionBegin', this.editActionEvents);\n        this.parent.off('actionComplete', this.editActionEvents);\n        this.parent.grid.off('recordAdded', this.customCellSave);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        this.parent.grid.off('dblclick', this.gridDblClick);\n        this.parent.grid.off('reset-edit-props', this.resetIsOnBatch);\n        this.parent.grid.off('get-row-position', this.getRowPosition);\n        //this.parent.grid.off('click', this.gridSingleClick);\n    };\n    /**\n     * To destroy the editModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @param {Column[]} cols - Column property Collection\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.editActionEvents = function (args) {\n        var eventArgs = getObject('editAction', args);\n        var eventName = getObject('name', eventArgs);\n        var treeObj = this.parent;\n        var adaptor = treeObj.dataSource.adaptor;\n        if ((isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) &&\n            (eventArgs.requestType === 'save' && eventArgs.action === 'add') &&\n            (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below'\n                || treeObj.editSettings.newRowPosition === 'Above')) {\n            if (eventName === 'actionBegin') {\n                var rowIndex = isNullOrUndefined(eventArgs.row) || !Object.keys(eventArgs.row).length ? this.selectedIndex :\n                    eventArgs.row.rowIndex - 1;\n                var keyData = (!isNullOrUndefined(rowIndex) && rowIndex !== -1) ?\n                    treeObj.getCurrentViewRecords()[rowIndex][treeObj.getPrimaryKeyFieldNames()[0]] : -1;\n                treeObj.grid.query.addParams('relationalKey', keyData);\n            }\n            else if (eventName === 'actionComplete') {\n                var paramsLength = treeObj.grid.query.params.length;\n                for (var i = 0; i < paramsLength; i++) {\n                    if (treeObj.grid.query.params[i].key === 'relationalKey') {\n                        treeObj.grid.query.params.splice(i);\n                    }\n                }\n            }\n        }\n        if (this.parent.enableInfiniteScrolling && eventName === 'actionComplete') {\n            this.infiniteAddAction(eventArgs);\n        }\n        if (this.parent.editSettings.mode === 'Batch' && eventArgs.requestType === 'paging') {\n            this.parent.notify('batchPageAction', {});\n        }\n    };\n    Edit.prototype.infiniteAddAction = function (args) {\n        if ((args.requestType === 'save' && args.action === 'add') || args.requestType === 'delete') {\n            if (this.parent.editSettings.newRowPosition !== 'Top' && this.selectedIndex !== -1\n                && (args.requestType === 'save' && args.action === 'add')) {\n                var rowObjects = this.parent.grid.getRowsObject();\n                var newRowObject = rowObjects.splice(0, 1)[0];\n                var newRowObjectIndex = this.addRowIndex;\n                var currentData = this.parent.getCurrentViewRecords();\n                if (this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                    newRowObjectIndex += findChildrenRecords(currentData[newRowObjectIndex + 1]).length;\n                }\n                newRowObjectIndex = this.parent.editSettings.newRowPosition === 'Below' ? newRowObjectIndex + 1 : newRowObjectIndex;\n                rowObjects.splice(newRowObjectIndex, 0, newRowObject);\n                var newRecord = currentData.splice(0, 1)[0];\n                currentData.splice(newRowObjectIndex, 0, newRecord);\n                this.updateInfiniteCurrentViewData(newRecord, this.addRowIndex);\n            }\n            var movableRows = this.parent.grid.getMovableRows();\n            var movableRowsObject = this.parent.grid.getMovableRowsObject();\n            var isCache = this.parent.infiniteScrollSettings.enableCache;\n            if (!isCache) {\n                resetRowIndex(this.parent.grid, this.parent.grid.getRowsObject(), this.parent.grid.getRows(), 0);\n                this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            }\n            if (!isCache && this.parent.getFrozenColumns() > 0) {\n                resetRowIndex(this.parent.grid, movableRowsObject, movableRows, 0);\n                this.updateIndex(this.parent.grid.dataSource, movableRows, this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    Edit.prototype.updateInfiniteCurrentViewData = function (newRecord, newRowIndex) {\n        var _this = this;\n        var infiniteData = 'infiniteCurrentViewData';\n        var updateCurrentViewData = 'updateCurrentViewData';\n        var size = Math.ceil(newRowIndex / this.parent.grid.pageSettings.pageSize);\n        var page = size > 0 ? size : 1;\n        var dataIndex = newRowIndex - ((page - 1) * this.parent.pageSettings.pageSize);\n        var infiniteCurrentViewData = this.parent.grid.infiniteScrollModule[infiniteData];\n        infiniteCurrentViewData[1].splice(0, 1);\n        var data = infiniteCurrentViewData[page];\n        if (!isNullOrUndefined(this.addRowRecord)) {\n            data.filter(function (e, index) {\n                if (e.uniqueID === _this.addRowRecord.uniqueID) {\n                    dataIndex = index;\n                }\n            });\n            if (this.addRowRecord.hasChildRecords && this.addRowRecord.childRecords.length &&\n                this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                dataIndex += findChildrenRecords(this.addRowRecord).length;\n            }\n        }\n        if (dataIndex >= this.parent.pageSettings.pageSize) {\n            page += 1;\n            data = infiniteCurrentViewData[page];\n            dataIndex = dataIndex - this.parent.pageSettings.pageSize >= 0 ? dataIndex - this.parent.pageSettings.pageSize : 0;\n        }\n        dataIndex = this.parent.editSettings.newRowPosition === 'Below' ? dataIndex + 1 : dataIndex;\n        data.splice(dataIndex, 0, newRecord);\n        this.parent.grid.infiniteScrollModule[updateCurrentViewData]();\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        if (!(this.parent.grid.editSettings.allowEditing) || this.parent.grid.isEdit) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            this.parent.editSettings.allowEditing && column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            if (this.parent.enableVirtualization) {\n                var tr = parentsUntil(args.target, 'e-row');\n                this.prevAriaRowIndex = tr.getAttribute('aria-rowindex');\n                tr.setAttribute('aria-rowindex', tr.rowIndex + '');\n            }\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.resetIsOnBatch = function () {\n        if (this.parent.enableVirtualization && this.parent.editSettings.mode === 'Cell') {\n            this.isOnBatch = false;\n            this.updateGridEditMode('Normal');\n        }\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n        if (args.action === 'escape') {\n            this.parent.closeEdit();\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[promise];\n        delete args[promise];\n        if (this.parent.enableVirtualization && !isNullOrUndefined(this.prevAriaRowIndex)) {\n            args.row.setAttribute('aria-rowindex', this.prevAriaRowIndex);\n            this.prevAriaRowIndex = undefined;\n        }\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                else if (celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.isOnBatch = false;\n                    _this.updateGridEditMode('Normal');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-summarycell'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n                setValue('isEditCollapse', false, this.parent);\n            }\n            if (!args.columnObject.allowEditing) {\n                args.cancel = true;\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function () {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var treeCell = this.parent.getCellFromIndex(cellDetails.rowIndex, this.parent.treeColumnIndex);\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: treeCell,\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        if (this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify('batchCancelAction', {});\n        }\n    };\n    Edit.prototype.customCellSave = function (args) {\n        if (isCountRequired(this.parent) && this.parent.editSettings.mode === 'Cell' && args.action === 'edit') {\n            this.updateCell(args, args.rowIndex);\n            this.afterCellSave(args, args.row, args.rowIndex);\n        }\n    };\n    Edit.prototype.cellSave = function (args) {\n        var _this = this;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            var editModule = 'editModule';\n            setValue('isEdit', false, this.parent.grid);\n            setValue('isEditCollapse', true, this.parent);\n            args.rowData[args.columnName] = args.value;\n            var row_1;\n            if (isNullOrUndefined(args.cell)) {\n                row_1 = this.parent.grid.editModule[editModule].form.parentElement.parentNode;\n            }\n            else {\n                row_1 = args.cell.parentNode;\n            }\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row_1)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n                    this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n                if (freeze) {\n                    if (this.parent.getRows().indexOf(row_1) !== -1) {\n                        rowIndex_1 = this.parent.getRows().indexOf(row_1);\n                    }\n                    else if (this.parent.getFrozenRightRows().indexOf(row_1) !== -1) {\n                        rowIndex_1 = this.parent.getFrozenRightRows().indexOf(row_1);\n                    }\n                    else {\n                        rowIndex_1 = this.parent.getMovableRows().indexOf(row_1);\n                    }\n                }\n                else {\n                    rowIndex_1 = (this.parent.getRows().indexOf(row_1) === -1 && (this.parent.getFrozenColumns() > 0)) ?\n                        this.parent.grid.getMovableRows().indexOf(row_1) : this.parent.getRows().indexOf(row_1);\n                }\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row_1 = this.parent.grid.getRows()[row_1.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                if ((row_1.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'tab') {\n                    this.isTabLastRow = true;\n                }\n                if (!isRemoteData(this.parent) &&\n                    !(this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    if (isCountRequired(this.parent)) {\n                        var eventPromise = 'eventPromise';\n                        var editArgs = { requestType: 'save', data: args.rowData, action: 'edit', row: row_1,\n                            rowIndex: rowIndex_1, rowData: args.rowData, columnName: args.columnName,\n                            filterChoiceCount: null, excelSearchOperator: null };\n                        this.parent.grid.getDataModule()[eventPromise](editArgs, this.parent.grid.query);\n                    }\n                    else {\n                        this.updateCell(args, rowIndex_1);\n                        this.afterCellSave(args, row_1, rowIndex_1);\n                    }\n                }\n                else if (isRemoteData(this.parent) ||\n                    (this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    var query = this.parent.grid.query;\n                    var crud = null;\n                    crud = this.parent.grid.dataSource.update(primaryKeys_1[0], args.rowData, query.fromTable, query, args.previousValue);\n                    crud.then(function (e) {\n                        if (!isNullOrUndefined(e)) {\n                            args.rowData[args.columnName] = e[args.columnName];\n                        }\n                        _this.updateCell(args, rowIndex_1);\n                        _this.afterCellSave(args, row_1, rowIndex_1);\n                    });\n                }\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n    };\n    Edit.prototype.afterCellSave = function (args, row, rowIndex) {\n        var mRow;\n        if (this.parent.grid.aggregateModule) {\n            this.parent.grid.aggregateModule.refresh(args.rowData);\n        }\n        this.parent.grid.editModule.destroyWidgets([this.parent.grid.getColumnByField(args.columnName)]);\n        this.parent.grid.editModule.formObj.destroy();\n        if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        this.enableToolbarItems('save');\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n            this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            if (args.cell.closest('.e-frozen-left-header') || args.cell.closest('.e-frozen-left-content')) {\n                mRow = this.parent.grid.getRows()[rowIndex];\n            }\n            else if (args.cell.closest('.e-movableheader') || args.cell.closest('.e-movablecontent')) {\n                mRow = this.parent.grid.getMovableRows()[rowIndex];\n            }\n            else {\n                mRow = this.parent.grid.getFrozenRightRows()[rowIndex];\n            }\n            removeClass([mRow], ['e-editedrow', 'e-batchrow']);\n            removeClass(mRow.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        }\n        else if (this.parent.getFrozenColumns() > 0) {\n            if (args.cell.closest('.e-frozenheader') || args.cell.closest('.e-frozencontent')) {\n                mRow = this.parent.grid.getRows()[rowIndex];\n            }\n            else {\n                mRow = this.parent.grid.getMovableRows()[rowIndex];\n            }\n            removeClass([mRow], ['e-editedrow', 'e-batchrow']);\n            removeClass(mRow.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        }\n        removeClass([row], ['e-editedrow', 'e-batchrow']);\n        removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        if (this.parent['isCellSaveFocus'] !== false) {\n            this.parent.grid.focusModule.restoreFocus();\n        }\n        editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n        if ((row.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'enter') {\n            this.keyPress = null;\n        }\n        var saveArgs = {\n            type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n            previousData: args.previousValue, row: row, target: args.cell\n        };\n        if (this.parent.aggregates.map(function (ag) { return ag.showChildSummary === true; }).length) {\n            this.parent.grid.refresh();\n        }\n        this.parent.trigger(events.actionComplete, saveArgs);\n    };\n    Edit.prototype.lastCellTab = function () {\n        if (!this.parent.grid.isEdit && this.isOnBatch && this.keyPress === 'tab' && this.parent.editSettings.mode === 'Cell') {\n            if (!this.parent.editSettings.allowNextRowEdit) {\n                this.updateGridEditMode('Normal');\n                this.isOnBatch = false;\n                this.keyPress = null;\n            }\n            else {\n                this.enableToolbarItems('edit');\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateCell(rowIndex, args.columnName, args.rowData[args.columnName]);\n        this.parent.grid.getRowsObject()[rowIndex].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[i].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[key] === data[i][key]) {\n                if (details.action === 'add') {\n                    data[i].level = this.internalProperties.level;\n                    data[i].taskData = this.internalProperties.taskData;\n                    data[i].uniqueID = this.internalProperties.uniqueID;\n                    if (!isNullOrUndefined(this.internalProperties.parentItem)) {\n                        data[i].parentItem = this.internalProperties.parentItem;\n                        data[i].parentUniqueID = this.internalProperties.parentUniqueID;\n                    }\n                    data[i].childRecords = this.internalProperties.childRecords;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[i].uniqueID + '.index', i, this.parent);\n            var adaptor = this.parent.dataSource.adaptor;\n            if ((isRemoteData(this.parent) || adaptor instanceof RemoteSaveAdaptor)) {\n                setValue('uniqueIDCollection.' + data[i].uniqueID, data[i], this.parent);\n            }\n            if (!data[i].level) {\n                this.parent.parentData.push(data[i]);\n            }\n        }\n        if (details.action === 'add' && this.previousNewRowPosition != null) {\n            this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n            this.previousNewRowPosition = null;\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[j];\n            var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n            data1.index = index;\n            if (!isNullOrUndefined(data1.parentItem)) {\n                var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                data1.parentItem.index = parentIndex;\n            }\n        }\n        var count = -1;\n        var treeColIndex = this.parent.treeColumnIndex;\n        if (this.parent.getFrozenColumns() > 0) {\n            var cells = rows[0].querySelectorAll('.e-rowcell');\n            for (var l = 0; l < cells.length; l++) {\n                if (cells[l].classList.contains('e-gridrowindex0level0')) {\n                    treeColIndex = l;\n                    break;\n                }\n            }\n        }\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[k].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[count];\n            var index = data2.index;\n            var level = data2.level;\n            var row = rows[k];\n            if (!isNullOrUndefined(data2.parentItem)) {\n                index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n            }\n            var treecell = row.cells[treeColIndex];\n            if (!isNullOrUndefined(treecell)) {\n                for (var l = 0; l < treecell.classList.length; l++) {\n                    var value = treecell.classList[l];\n                    var remove = /e-gridrowindex/i;\n                    var removed = /e-griddetailrowindex/i;\n                    var result = value.match(remove);\n                    var results = value.match(removed);\n                    if (result != null) {\n                        removeClass([treecell], value);\n                    }\n                    if (results != null) {\n                        removeClass([treecell], value);\n                    }\n                }\n                if (!rows[k].classList.contains('e-detailrow')) {\n                    addClass([treecell], 'e-gridrowindex' + index + 'level' + level);\n                }\n                else {\n                    addClass([treecell], 'e-griddetailrowindex' + index + 'level' + level);\n                }\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function () {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        if (this.parent.editSettings.mode === 'Batch') {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                records = this.batchEditModule.getBatchRecords();\n            }\n        }\n        var rows = this.parent.grid.getDataRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n        var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n        var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                position = 'after';\n                if (!isNullOrUndefined(records[index]) && records[index].expanded) {\n                    if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                        || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                        index += findChildrenRecords(records[index]).length;\n                        if (this.parent.editSettings.newRowPosition !== 'Child') {\n                            var batchChildCount = this.batchEditModule.getBatchChildCount();\n                            index = index + batchChildCount;\n                        }\n                    }\n                    else {\n                        index += findChildrenRecords(records[index]).length;\n                    }\n                }\n            }\n            if ((this.selectedIndex > -1 || isVirtualization) && withinRange\n                && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                    || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length - 1) {\n                    index = rows.length - 2;\n                }\n                var r = 'rows';\n                var newRowObject = this.parent.grid.contentModule[r][0];\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                setValue('batchIndex', index + 1, this.batchEditModule);\n                var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Above' ? index : index + 1;\n                if (this.parent.editSettings.mode === 'Batch') {\n                    this.parent.grid.contentModule[r].splice(0, 1);\n                    this.parent.grid.contentModule[r].splice(rowObjectIndex, 0, newRowObject);\n                }\n                var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n                    this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n                if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns || freeze) {\n                    var movableRows = this.parent.getMovableDataRows();\n                    var frows = 'freezeRows';\n                    var newFreezeRowObject = this.parent.grid.getRowsObject()[0];\n                    movableRows[index + 1][position](movableRows[0]);\n                    if (freeze) {\n                        var rightFrozenRows = this.parent.getFrozenRightDataRows();\n                        rightFrozenRows[index + 1][position](rightFrozenRows[0]);\n                    }\n                    if (this.parent.editSettings.mode === 'Batch') {\n                        this.parent.grid.contentModule[frows].splice(0, 1);\n                        this.parent.grid.contentModule[frows].splice(rowObjectIndex, 0, newFreezeRowObject);\n                    }\n                    setValue('batchIndex', index + 1, this.batchEditModule);\n                }\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                if (isVirtualization) {\n                    this.prevAriaRowIndex = '-1';\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data_1 = args.data;\n            if (isNullOrUndefined(args.data[0].uniqueID)) {\n                var primaryKeys_2 = this.parent.getPrimaryKeyFieldNames();\n                var _loop_1 = function (i) {\n                    this_1.parent.flatData.filter(function (e) {\n                        if (e[primaryKeys_2[0]] === args.data[i][primaryKeys_2[0]]) {\n                            data_1[i] = e;\n                        }\n                    });\n                };\n                var this_1 = this;\n                for (var i = 0; i < data_1.length; i++) {\n                    _loop_1(i);\n                }\n            }\n            for (var i = 0; i < data_1.length; i++) {\n                this.deleteUniqueID(data_1[i].uniqueID);\n                var childs = findChildrenRecords(data_1[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                args.data = args.data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add' || (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling))) {\n            if (!(this.parent.grid.selectedRowIndex === -1 && this.isAddedRowByMethod)\n                && args.index === this.parent.grid.selectedRowIndex || args.index === 0) {\n                this.selectedIndex = this.parent.grid.selectedRowIndex;\n            }\n            if (this.parent.enableVirtualization) {\n                var selector = '.e-row[aria-rowindex=\"' + this.selectedIndex + '\"]';\n                var row = void 0;\n                if (this.selectedIndex > -1 && this.parent.editSettings.newRowPosition !== 'Top' &&\n                    this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    this.prevAriaRowIndex = this.selectedIndex.toString();\n                    row = this.parent.getContent().querySelector(selector);\n                    this.addRowIndex = row ? row.rowIndex : 0;\n                }\n                else {\n                    if (this.prevAriaRowIndex && this.prevAriaRowIndex !== '-1') {\n                        selector = '.e-row[aria-rowindex=\"' + this.prevAriaRowIndex + '\"]';\n                        row = this.parent.getContent().querySelector(selector);\n                        this.addRowIndex = row ? row.rowIndex : 0;\n                    }\n                    else {\n                        this.addRowIndex = 0;\n                    }\n                }\n            }\n            else {\n                if (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)) {\n                    this.addRowIndex = args.index;\n                }\n                else {\n                    this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n                }\n            }\n            if (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)) {\n                this.addRowRecord = this.parent.flatData[args.index];\n            }\n            else {\n                this.addRowRecord = this.parent.getSelectedRecords()[0];\n            }\n        }\n        if (this.isAddedRowByMethod && args.index !== 0) {\n            this.addRowRecord = this.parent.flatData[args.index];\n            this.addRowIndex = args.index;\n        }\n        if (this.parent.editSettings.newRowPosition === 'Child' && isNullOrUndefined(this.addRowRecord)\n            && !isNullOrUndefined(this.parent.getSelectedRecords()[0])) {\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        this.isAddedRowByMethod = false;\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function () {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            if (this.parent.enableVirtualization && args.index !== 0) {\n                this.addRowIndex = this.parent.grid.getCurrentViewRecords().indexOf(this.addRowRecord);\n                this.selectedIndex = parseInt(this.parent.getRows()[this.addRowIndex].getAttribute('aria-rowindex'), 10);\n            }\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n            var rows = this.parent.getRows();\n            var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n            var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n            var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n            if (currentData.length) {\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if ((this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    if (this.selectedIndex >= 0) {\n                        value.level = level + 1;\n                    }\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if ((this.selectedIndex > -1 || isVirtualization) && level && withinRange) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem, uniqueID: value.uniqueID,\n                taskData: value.taskData, parentUniqueID: isNullOrUndefined(value.parentItem) ? undefined : value.parentItem.uniqueID,\n                childRecords: value.childRecords };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[i].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[i].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[i]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        if (this.parent.editSettings.newRowPosition === this.previousNewRowPosition || this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n        if (!this.isSelfReference && !isNullOrUndefined(data) && Object.hasOwnProperty.call(data, this.parent.childMapping)) {\n            var addRecords = [];\n            var previousEditMode = this.parent.editSettings.mode;\n            var previousGridEditMode = this.parent.grid.editSettings.mode;\n            addRecords.push(data);\n            this.parent.setProperties({ editSettings: { mode: 'Batch' } }, true);\n            this.parent.grid.setProperties({ editSettings: { mode: 'Batch' } }, true);\n            if (!isNullOrUndefined(position)) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            var updatedRecords = { addedRecords: addRecords, changedRecords: [], deletedRecords: [] };\n            this.parent.notify(events.batchSave, { updatedRecords: updatedRecords, index: index });\n            this.parent.setProperties({ editSettings: { mode: previousEditMode } }, true);\n            this.parent.grid.setProperties({ editSettings: { mode: previousGridEditMode } }, true);\n            this.parent.refresh();\n        }\n        else {\n            if (data) {\n                if (index > -1) {\n                    this.selectedIndex = index;\n                    this.addRowIndex = index;\n                }\n                else {\n                    this.selectedIndex = this.parent.selectedRowIndex;\n                    this.addRowIndex = this.parent.selectedRowIndex;\n                }\n                if (position) {\n                    this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n                }\n                this.parent.grid.editModule.addRecord(data, index);\n            }\n            else {\n                this.parent.grid.editModule.addRecord(data, index);\n            }\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     *\n     * @returns {boolean} Returns form validation results\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save'\n                || (this.parent.editSettings.mode === 'Batch' && e.args.requestType.toString() === 'batchsave'))) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                if (this.parent.grid.dataSource.length === this.parent.getMovableDataRows().length) {\n                    this.updateIndex(this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n                }\n            }\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch') {\n            if (this.parent.editSettings.mode !== 'Batch') {\n                this.isOnBatch = true;\n                this.updateGridEditMode('Batch');\n            }\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n *\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns CommandColumn module name\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isRemoteData } from '../utils';\n/**\n * TreeGrid Detail Row module\n *\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns DetailRow module name\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.grid.on('detail-indentcell-info', this.setIndentVisibility, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n        this.parent.grid.off('detail-indentcell-info', this.setIndentVisibility);\n    };\n    DetailRow.prototype.setIndentVisibility = function (args) {\n        var visible = 'visible';\n        args[visible] = false;\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[i].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[i].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[i]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        if (isRemoteData(this.parent)) {\n            return;\n        }\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[i].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        var data = args.data;\n        var row = args.detailElement.parentElement.previousSibling;\n        var index = !isNullOrUndefined(data.parentItem) ? data.parentItem.index : data.index;\n        var expandClass = 'e-gridrowindex' + index + 'level' + data.level;\n        var classlist = row.querySelector('.' + expandClass).classList;\n        var gridClas = [].slice.call(classlist).filter(function (gridclass) { return (gridclass === expandClass); });\n        var newNo = gridClas[0].length;\n        var slicedclas = gridClas.toString().slice(6, newNo);\n        var detailClass = 'e-griddetail' + slicedclas;\n        addClass([args.detailElement.parentElement], detailClass);\n    };\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[i].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Cell, CellType } from '@syncfusion/ej2-grids';\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue, Browser, debounce } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        _this.recordAdded = false;\n        /** @hidden */\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.preTranslate = 0;\n        _this.isRemoteExpand = false;\n        /** @hidden */\n        _this.isDataSourceChanged = false;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('aria-rowindex'), 10) === index; })[0];\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this.recordAdded && this.startIndex > -1 && this.endIndex > -1) {\n            if (this.endIndex > args.count - this.parent.pageSettings.pageSize) {\n                var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n                var lastIndex = nextSetResIndex + this.parent.getRows().length;\n                if (lastIndex > args.count) {\n                    lastIndex = nextSetResIndex +\n                        (args.count - nextSetResIndex);\n                }\n                this.startIndex = lastIndex - this.parent.getRows().length;\n                this.endIndex = lastIndex;\n            }\n            else {\n                this.startIndex += 1;\n                this.endIndex += 1;\n            }\n            this.recordAdded = false;\n        }\n        if (this.isDataSourceChanged) {\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        args.startIndex = this.startIndex;\n        args.endIndex = this.endIndex;\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            this.parent[action]('data-ready', this.onDataReady, this);\n            this.parent[action]('refresh-virtual-block', this.refreshContentRows, this);\n            this.fn = function () {\n                _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); }, _this.onEnteredAction());\n                _this.parent.off('content-ready', _this.fn);\n            };\n            this.parent.addEventListener('dataBound', this.dataBoundEvent.bind(this));\n            this.parent.addEventListener('rowSelected', this.rowSelectedEvent.bind(this));\n            this.parent[action]('select-virtual-Row', this.toSelectVirtualRow, this);\n            this.parent.on('content-ready', this.fn, this);\n            this.parent.addEventListener(events.actionComplete, this.onActionComplete.bind(this));\n            this.parent[action]('virtual-scroll-edit-action-begin', this.beginEdit, this);\n            this.parent[action]('virtual-scroll-add-action-begin', this.beginAdd, this);\n            this.parent[action]('virtual-scroll-edit-success', this.virtualEditSuccess, this);\n            this.parent[action]('edit-reset', this.resetIseditValue, this);\n            this.parent[action]('get-virtual-data', this.getData, this);\n            this.parent[action]('virtual-scroll-edit-cancel', this.cancelEdit, this);\n            this.parent[action]('select-row-on-context-open', this.toSelectRowOnContextOpen, this);\n            this.parent[action]('refresh-virtual-editform-cells', this.refreshCell, this);\n            this.parent[action]('virtaul-cell-focus', this.cellFocus, this);\n        }\n        else {\n            _super.prototype.eventListener.call(this, 'on');\n        }\n    };\n    VirtualTreeContentRenderer.prototype.cellFocus = function (e) {\n        var virtualCellFocus = 'virtualCellFocus';\n        _super.prototype[virtualCellFocus].call(this, e);\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            if (!isNullOrUndefined(e.count)) {\n                this.totalRecords = e.count;\n                if (!this.parent.enableColumnVirtualization) {\n                    getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n                }\n            }\n            if ((!isNullOrUndefined(e.requestType) && e.requestType.toString() === 'collapseAll') || this.isDataSourceChanged) {\n                this.contents.scrollTop = 0;\n                this.isDataSourceChanged = false;\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            getValue('observer', this).options.debounceEvent = false;\n            this.observers = new TreeInterSectionObserver(getValue('observer', this).element, getValue('observer', this).options);\n            this.contents = this.getPanel().firstChild;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getTranslateY = function (sTop, cHeight, info, isOnenter) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (this.isRemoteExpand) {\n                this.isRemoteExpand = false;\n                return this.preTranslate;\n            }\n            else {\n                this.preTranslate = _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n                return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n            }\n        }\n        else {\n            return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.dataBoundEvent = function () {\n        var dataBoundEve = 'dataBound';\n        var initialRowTop = 'initialRowTop';\n        if (this.parent.getRows().length && !this[initialRowTop] && !isNullOrUndefined(this.parent.getRowByIndex(0))) {\n            var rowTop = this.parent.getRowByIndex(0).getBoundingClientRect().top;\n            var gridTop = this.parent.element.getBoundingClientRect().top;\n            if (rowTop > 0) {\n                this[initialRowTop] = this.parent.getRowByIndex(0).getBoundingClientRect().top - gridTop;\n            }\n            else {\n                this[initialRowTop] = this.content.getBoundingClientRect().top -\n                    this.parent.getRowByIndex(0).getBoundingClientRect().height;\n            }\n        }\n        _super.prototype[dataBoundEve].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.rowSelectedEvent = function (args) {\n        var rowSelected = 'rowSelected';\n        _super.prototype[rowSelected].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.toSelectVirtualRow = function (args) {\n        if (this.parent.isEdit) {\n            return;\n        }\n        var selectVirtualRow = 'selectVirtualRow';\n        var containerRect = 'containerRect';\n        if (isNullOrUndefined(this.observer[containerRect])) {\n            this.observer[containerRect] = this.observers[containerRect];\n        }\n        if (isNullOrUndefined(this.parent['clipboardModule'].treeGridParent.editModule) || args.selectedIndex !== 0 ||\n            isNullOrUndefined(this.parent['clipboardModule'].treeGridParent.editModule['addRowIndex'])) {\n            _super.prototype[selectVirtualRow].call(this, args);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.refreshCell = function (rowObj) {\n        rowObj.cells = this.generateCells();\n    };\n    VirtualTreeContentRenderer.prototype.generateCells = function () {\n        var cells = [];\n        for (var i = 0; i < this.parent.columns.length; i++) {\n            cells.push(this.generateCell(this.parent.columns[i]));\n        }\n        return cells;\n    };\n    VirtualTreeContentRenderer.prototype.generateCell = function (col, rowId, cellType, colSpan, oIndex, foreignKeyData) {\n        var opt = {\n            'visible': col.visible,\n            'isDataCell': !isNullOrUndefined(col.field || col.template),\n            'isTemplate': !isNullOrUndefined(col.template),\n            'rowID': rowId,\n            'column': col,\n            'cellType': !isNullOrUndefined(cellType) ? cellType : CellType.Data,\n            'colSpan': colSpan,\n            'commands': col.commands,\n            'isForeignKey': col.isForeignColumn && col.isForeignColumn(),\n            'foreignKeyData': col.isForeignColumn && col.isForeignColumn() && getValue(col.field, foreignKeyData)\n        };\n        if (opt.isDataCell || opt.column.type === 'checkbox' || opt.commands) {\n            opt.index = oIndex;\n        }\n        return new Cell(opt);\n    };\n    VirtualTreeContentRenderer.prototype.beginEdit = function (e) {\n        var selector = '.e-row[aria-rowindex=\"' + e.index + '\"]';\n        var index = this.parent.getContent().querySelector(selector).rowIndex;\n        var rowData = this.parent.getCurrentViewRecords()[index];\n        e.data = rowData;\n    };\n    VirtualTreeContentRenderer.prototype.beginAdd = function (args) {\n        var addAction = 'addActionBegin';\n        var isAdd = 'isAdd';\n        var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, ariaRowIndex: this.ariaRowIndex };\n        this.parent.notify('get-row-position', addArgs);\n        this.rowPosition = addArgs.newRowPosition;\n        this.addRowIndex = addArgs.addRowIndex;\n        this.ariaRowIndex = addArgs.ariaRowIndex;\n        var rows = this.parent.getRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n        var withInRange = this.parent.selectedRowIndex >= firstAriaIndex && this.parent.selectedRowIndex <= lastAriaIndex;\n        if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n            this[isAdd] = true;\n        }\n        if (this.rowPosition === 'Top' || this.rowPosition === 'Bottom' ||\n            ((!this.addRowIndex || this.addRowIndex === -1) && (this.parent.selectedRowIndex === -1 || !withInRange))) {\n            _super.prototype[addAction].call(this, args);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.restoreEditState = function () {\n        var restoreEdit = 'restoreEdit';\n        _super.prototype[restoreEdit].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.resetIseditValue = function () {\n        var resetIsEdit = 'resetIsedit';\n        var isAdd = 'isAdd';\n        this.parent.notify('reset-edit-props', {});\n        if ((this.rowPosition === 'Top' || this.rowPosition === 'Bottom') && this[isAdd]) {\n            _super.prototype[resetIsEdit].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.virtualEditSuccess = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[isAdd] && content.querySelector('.e-addedrow')) {\n            this.recordAdded = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.cancelEdit = function (args) {\n        var editCancel = 'editCancel';\n        _super.prototype[editCancel].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.toSelectRowOnContextOpen = function (args) {\n        var selectRowOnContextOpen = 'selectRowOnContextOpen';\n        _super.prototype[selectRowOnContextOpen].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.restoreNewRow = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[isAdd] && !content.querySelector('.e-addedrow')) {\n            this.parent.isEdit = false;\n            this.parent.addRecord();\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getData = function (data) {\n        var getVirtualData = 'getVirtualData';\n        _super.prototype[getVirtualData].call(this, data);\n    };\n    VirtualTreeContentRenderer.prototype.onActionComplete = function (args) {\n        if (args.requestType === 'add') {\n            var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, ariaRowIndex: this.ariaRowIndex };\n            this.parent.notify('get-row-position', addArgs);\n            this.rowPosition = addArgs.newRowPosition;\n            this.addRowIndex = addArgs.addRowIndex;\n            this.ariaRowIndex = addArgs.ariaRowIndex;\n        }\n        var actionComplete = 'actionComplete';\n        _super.prototype[actionComplete].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.onEnteredAction = function () {\n        var _this = this;\n        return function (element, current, direction, e, isWheel, check) {\n            var directVirtualRender = 'directVirtualRender';\n            if (!_this.parent[directVirtualRender]) { // with this property, columns are rendered without debouncing on horizontal scroll.\n                var preventEvent = 'preventEvent';\n                if (Browser.isIE && !isWheel && check && !_this[preventEvent]) {\n                    _this.parent.showSpinner();\n                }\n                var xAxis = current.axis === 'X';\n                var x = _this.getColumnOffset(xAxis ? _this.vgenerator.getColumnIndexes()[0] - 1 : _this.prevInfo.columnIndexes[0]\n                    - 1);\n                if (xAxis) {\n                    var idx = Object.keys(_this.vgenerator.cOffsets).length - _this.prevInfo.columnIndexes.length;\n                    var maxLeft = _this.vgenerator.cOffsets[idx - 1];\n                    x = x > maxLeft ? maxLeft : x; //TODO: This fix horizontal scrollbar jumping issue in column virtualization.\n                }\n                _this.virtualEle.adjustTable(x, _this.translateY);\n                if (_this.parent.enableColumnVirtualization) {\n                    _this.header.virtualEle.adjustTable(x, 0);\n                }\n            }\n        };\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        var info = scrollArgs.sentinel;\n        var outBuffer = this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 2);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * this.parent.getRowHeight();\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = Math.ceil(scrollArgs.offset.top - this.translateY) >= scrollHeight;\n        var selectedRowIndex = 'selectedRowIndex';\n        if (upScroll && (scrollArgs.direction !== 'right' && scrollArgs.direction !== 'left')) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? this.parent.height :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / this.parent.getRowHeight())\n                + Math.ceil(vHeight / this.parent.getRowHeight()))\n                - this.parent.pageSettings.pageSize;\n            index = (index > 0) ? index : 0;\n            if (!isNullOrUndefined(this[selectedRowIndex]) && this[selectedRowIndex] !== -1 && index !== this[selectedRowIndex]) {\n                index = this[selectedRowIndex];\n            }\n            this.startIndex = index;\n            this.endIndex = index + this.parent.pageSettings.pageSize;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = (this.startIndex - remains) < 0 ? 0 : (this.startIndex - remains);\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / this.parent.getRowHeight());\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[rowPt]) &&\n                !isNullOrUndefined(this.parent.getContent().querySelectorAll('.e-content tr')[rowPt])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[rowPt]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('aria-rowindex');\n            }\n            if (firsttdinx === 0) {\n                this.translateY = scrollArgs.offset.top;\n            }\n            else {\n                var height = this.parent.getRowHeight();\n                this.translateY = (scrollArgs.offset.top - (outBuffer * height) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * height) + 10 : 0;\n            }\n        }\n        else if (downScroll && (scrollArgs.direction !== 'right' && scrollArgs.direction !== 'left')) {\n            var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n            var isLastBlock = (this[selectedRowIndex] + this.parent.pageSettings.pageSize) < this.totalRecords ? false : true;\n            if (!isNullOrUndefined(this[selectedRowIndex]) && this[selectedRowIndex] !== -1 &&\n                nextSetResIndex !== this[selectedRowIndex] && !isLastBlock) {\n                nextSetResIndex = this[selectedRowIndex];\n            }\n            var lastIndex = nextSetResIndex + this.parent.pageSettings.pageSize;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = !isLastBlock ? lastIndex - this.parent.pageSettings.pageSize : nextSetResIndex;\n            this.endIndex = lastIndex;\n            if (scrollArgs.offset.top > (this.parent.getRowHeight() * this.totalRecords)) {\n                this.translateY = this.getTranslateY(scrollArgs.offset.top, content.getBoundingClientRect().height);\n            }\n            else {\n                this.translateY = scrollArgs.offset.top;\n            }\n        }\n        if (((downScroll && (scrollArgs.offset.top < (this.parent.getRowHeight() * this.totalRecords)))\n            || (upScroll)) || (scrollArgs.direction === 'right' || scrollArgs.direction === 'left')) {\n            var viewInfo = this.currentInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.previousInfo = viewInfo;\n            this.parent.setColumnIndexesInView(this.parent.enableColumnVirtualization ? viewInfo.columnIndexes : []);\n            var page = viewInfo.loadNext && !viewInfo.loadSelf ? viewInfo.nextInfo.page : viewInfo.page;\n            this.parent.setProperties({ pageSettings: { currentPage: page } }, true);\n            if (scrollArgs.direction !== 'right' && scrollArgs.direction !== 'left') {\n                viewInfo.event = viewInfo.event === 'refresh-virtual-block' ? 'model-changed' : viewInfo.event;\n            }\n            this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', virtualInfo: viewInfo, focusElement: scrollArgs.focusElement });\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (getValue('isExpandCollapse', e)) {\n                this.isRemoteExpand = true;\n            }\n            _super.prototype.appendContent.call(this, target, newChild, e);\n        }\n        else {\n            var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' &&\n                getValue('currentInfo', this).page && getValue('currentInfo', this).page !== e.virtualInfo.page ?\n                getValue('currentInfo', this) : e.virtualInfo;\n            var cBlock = (info.columnIndexes[0]) - 1;\n            var cOffset = this.getColumnOffset(cBlock);\n            var width = void 0;\n            if (this.parent.enableColumnVirtualization) {\n                this.header.virtualEle.adjustTable(cOffset, 0);\n                var cIndex = info.columnIndexes;\n                width = this.getColumnOffset(cIndex[cIndex.length - 1]) - this.getColumnOffset(cIndex[0] - 1) + '';\n                this.header.virtualEle.setWrapperWidth(width);\n            }\n            this.virtualEle.setWrapperWidth(width, (Browser.isIE || Browser.info.name === 'edge'));\n            target = this.parent.createElement('tbody');\n            target.appendChild(newChild);\n            var replace = 'replaceWith';\n            this.getTable().querySelector('tbody')[replace](target);\n            if (!this.isExpandCollapse || this.translateY === 0) {\n                this.translateY = this.translateY < 0 ? 0 : this.translateY;\n                getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n            }\n            else {\n                this.isExpandCollapse = false;\n            }\n            setValue('prevInfo', this.previousInfo ? this.previousInfo : info, this);\n            if (e.requestType === 'virtualscroll' && e.virtualInfo.sentinelInfo.axis === 'X') {\n                this.parent.notify(events.autoCol, {});\n            }\n            var focusCell = 'focusCell';\n            var restoreAdd = 'restoreAdd';\n            var ensureSelectedRowPosition = 'ensureSelectedRowPosition';\n            _super.prototype[focusCell].call(this, e);\n            var isAdd = 'isAdd';\n            if (this[isAdd] && !this.parent.getContent().querySelector('.e-content').querySelector('.e-addedrow')) {\n                if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n                    if (this.ariaRowIndex >= this.startIndex) {\n                        this.restoreNewRow();\n                    }\n                    else if (this.addRowIndex && this.addRowIndex > -1) {\n                        this[isAdd] = false;\n                        this.parent.isEdit = false;\n                    }\n                }\n            }\n            this.restoreEditState();\n            _super.prototype[restoreAdd].call(this);\n            _super.prototype[ensureSelectedRowPosition].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('data-ready', this.onDataReady);\n        this.parent.off('content-ready', this.fn);\n        this.parent.off('select-virtual-Row', this.toSelectVirtualRow);\n        this.parent.off('dataBound', this.dataBoundEvent);\n        this.parent.off('rowSelected', this.rowSelectedEvent);\n        this.parent.off(events.virtualActionArgs, this.virtualOtherAction);\n        this.parent.off(events.indexModifier, this.indexModifier);\n        this.parent.off('virtual-scroll-edit-action-begin', this.beginEdit);\n        this.parent.off('virtual-scroll-add-action-begin', this.beginAdd);\n        this.parent.off('virtual-scroll-edit-success', this.virtualEditSuccess);\n        this.parent.off('edit-reset', this.resetIseditValue);\n        this.parent.off('get-virtual-data', this.getData);\n        this.parent.off('virtual-scroll-edit-cancel', this.cancelEdit);\n        this.parent.off('select-row-on-context-open', this.toSelectRowOnContextOpen);\n        this.parent.off('refresh-virtual-editform-cells', this.refreshCell);\n        this.parent.off('virtaul-cell-focus', this.cellFocus);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback, onEnterCallback) {\n        var containerRect = 'containerRect';\n        _super.prototype[containerRect] = getValue('options', this).container.getBoundingClientRect();\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback, onEnterCallback), this);\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback, onEnterCallback) {\n        var _this = this;\n        var delay = Browser.info.name === 'chrome' ? 200 : 100;\n        var options = 'options';\n        var movableEle = 'movableEle';\n        var element = 'element';\n        var fromWheel = 'fromWheel';\n        var debounced100 = debounce(callback, delay);\n        var debounced50 = debounce(callback, 50);\n        this[options].prevTop = this[options].prevLeft = 0;\n        return function (e) {\n            var top = _this[options].movableContainer ? _this[options].container.scrollTop : e.target.scrollTop;\n            var left = _this[options].movableContainer ? _this[options].scrollbar.scrollLeft : e.target.scrollLeft;\n            var direction = _this[options].prevTop < top ? 'down' : 'up';\n            direction = _this[options].prevLeft === left ? direction : _this[options].prevLeft < left ? 'right' : 'left';\n            _this[options].prevTop = top;\n            _this[options].prevLeft = left;\n            var current = _this.sentinelInfo[direction];\n            var delta = 0;\n            _this.newPos = top;\n            if (_this.lastPos != null) { // && newPos < maxScroll\n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            if (_this[options].axes.indexOf(current.axis) === -1) {\n                return;\n            }\n            var check = _this.check(direction);\n            if (current.entered && current.axis === 'X') {\n                if (_this[movableEle] && (direction === 'right' || direction === 'left')) {\n                    onEnterCallback(_this[movableEle], current, direction, { top: top, left: left }, _this[fromWheel], check);\n                }\n                else {\n                    onEnterCallback(_this[element], current, direction, { top: top, left: left }, _this[fromWheel], check);\n                }\n            }\n            if (check) {\n                var fn = debounced100;\n                if (current.axis === 'X') {\n                    fn = debounced50;\n                    fn({ direction: direction, sentinel: current, offset: { top: top, left: left },\n                        focusElement: document.activeElement });\n                }\n                else {\n                    callback({ direction: direction, sentinel: current, offset: { top: top, left: left },\n                        focusElement: document.activeElement });\n                }\n            }\n            _this[fromWheel] = false;\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\nimport { VirtualHeaderRenderer } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n *\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns VirtualScroll module name\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n        this.parent.on(events.destroy, this.destroy, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n        this.parent.off(events.destroy, this.destroy);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        if (this.parent.enableVirtualization && this.parent.selectionSettings.mode === 'Cell' ||\n            this.parent.selectionSettings.mode === 'Row' && !this.parent.selectionSettings.persistSelection) {\n            this.parent.grid.clearSelection();\n        }\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1, count: pageingDetails.count };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering' || requestType === 'collapseAll' ||\n                (requestType === 'refresh' && this.parent.enableCollapseAll && endIndex > visualData.length)) {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.getContent().firstElementChild.scrollTop = 0;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) &&\n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            if (!isNullOrUndefined(this.expandCollapseRec) && (pageingDetails.actionArgs.requestType === 'virtualscroll' ||\n                (pageingDetails.actionArgs.requestType === 'refresh' && startIndex !== this.prevstartIndex)) &&\n                (startIndex < this.parent.getRows().length && endIndex <= startIndex + this.parent.getRows().length)) {\n                startIndex = 0;\n            }\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length && sIndex >= 0 && startIndex !== 0) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                else if (getValue('isCollapseAll', this.parent)) {\n                    startIndex = 0;\n                    endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                    this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n                }\n            }\n            //}\n            if ((this.parent.enableCollapseAll || this.parent.expandStateMapping) && !isNullOrUndefined(this.expandCollapseRec)) {\n                if (pageingDetails.count < this.parent.getRows()[0].getBoundingClientRect().height) {\n                    startIndex = 0;\n                }\n                else {\n                    startIndex = this.prevstartIndex === -1 ? 0 : this.prevstartIndex;\n                }\n            }\n            this.expandCollapseRec = null;\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.getModuleName = function () {\n        return 'treeVirtualScroll';\n    };\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        var parentGrid = getValue('parent', this);\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        if (parentGrid.enableColumnVirtualization) {\n            getValue('addRenderer', renderer)\n                .apply(renderer, [RenderType.Header, new VirtualHeaderRenderer(getValue('parent', this), getValue('locator', this))]);\n        }\n        getValue('addRenderer', renderer)\n            .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        if (!isNullOrUndefined(parentGrid.height) && typeof (parentGrid.height) === 'string' && parentGrid.height.indexOf('%') !== -1) {\n            parentGrid.element.style.height = parentGrid.height;\n        }\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parentGrid.height :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        var height = blockSize * 2;\n        var size = parentGrid.pageSettings.pageSize;\n        parentGrid.setProperties({ pageSettings: { pageSize: size < height ? height : size } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n","import { parentsUntil } from '@syncfusion/ej2-grids';\nimport { Grid, Freeze as FreezeColumn } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Freeze module\n *\n * @hidden\n */\nvar Freeze = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Freeze(parent) {\n        Grid.Inject(FreezeColumn);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    Freeze.prototype.addEventListener = function () {\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.grid.on('dblclick', this.dblClickHandler, this);\n    };\n    Freeze.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.grid.off('dblclick', this.dblClickHandler);\n    };\n    Freeze.prototype.rowExpandCollapse = function (args) {\n        var movableRows = this.parent.getMovableDataRows();\n        var frozenrows = this.parent.getRows();\n        var rows;\n        var frozenRightRows;\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n            this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            frozenRightRows = this.parent.getFrozenRightRows().filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        if (!args.detailrows.length) {\n            rows = movableRows.filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        else {\n            rows = args.detailrows;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            var rData = this.parent.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            rows[i].style.display = args.action;\n            if (freeze) {\n                frozenRightRows[i].style.display = args.action;\n            }\n            var queryselector = args.action === 'none' ? '.e-treecolumn-container .e-treegridcollapse'\n                : '.e-treecolumn-container .e-treegridexpand';\n            if (frozenrows[rows[i].rowIndex].querySelector(queryselector)) {\n                var cRow = [];\n                for (var i_1 = 0; i_1 < movableRows.length; i_1++) {\n                    if (movableRows[i_1].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(movableRows[i_1]);\n                    }\n                }\n                if (cRow.length) {\n                    this.rowExpandCollapse({ detailrows: cRow, action: args.action });\n                }\n            }\n        }\n    };\n    Freeze.prototype.dblClickHandler = function (e) {\n        if (parentsUntil(e.target, 'e-rowcell') &&\n            this.parent.grid.editSettings.allowEditOnDblClick && this.parent.editSettings.mode !== 'Cell') {\n            this.parent.grid.editModule.startEdit(parentsUntil(e.target, 'e-row'));\n        }\n    };\n    Freeze.prototype.dataBoundArg = function () {\n        var checkboxColumn = this.parent.getColumns().filter(function (e) {\n            return e.showCheckbox;\n        });\n        if (checkboxColumn.length && this.parent.freezeModule && this.parent.initialRender) {\n            addClass([this.parent.element.getElementsByClassName('e-grid')[0]], 'e-checkselection');\n        }\n    };\n    Freeze.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Freeze module name\n     */\n    Freeze.prototype.getModuleName = function () {\n        return 'freeze';\n    };\n    return Freeze;\n}());\nexport { Freeze };\n","import { Grid, ColumnChooser as GridColumnChooser } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnChooser module\n *\n * @hidden\n */\nvar ColumnChooser = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance.\n     */\n    function ColumnChooser(parent) {\n        Grid.Inject(GridColumnChooser);\n        this.parent = parent;\n    }\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     *\n     * @param  {number} X - Defines the X axis.\n     * @param  {number} Y - Defines the Y axis.\n     * @returns {void}\n     */\n    ColumnChooser.prototype.openColumnChooser = function (X, Y) {\n        return this.parent.grid.columnChooserModule.openColumnChooser(X, Y);\n    };\n    /**\n     * Destroys the openColumnChooser.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    ColumnChooser.prototype.destroy = function () {\n        //this.parent.grid.ColumnChooserModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ColumnChooser module name\n     */\n    ColumnChooser.prototype.getModuleName = function () {\n        return 'ColumnChooser';\n    };\n    return ColumnChooser;\n}());\nexport { ColumnChooser };\n","import { Grid, InfiniteScroll as GridInfiniteScroll } from '@syncfusion/ej2-grids';\nimport { RowRenderer, resetRowIndex } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined, remove } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { findChildrenRecords } from '../utils';\n/**\n * TreeGrid Infinite Scroll module will handle Infinite Scrolling.\n *\n * @hidden\n */\nvar InfiniteScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function InfiniteScroll(parent) {\n        this.parent = parent;\n        Grid.Inject(GridInfiniteScroll);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Logger module name\n     */\n    InfiniteScroll.prototype.getModuleName = function () {\n        return 'infiniteScroll';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.addEventListener = function () {\n        this.parent.on(events.pagingActions, this.infinitePageAction, this);\n        this.parent.on('infinite-remote-expand', this.infiniteRemoteExpand, this);\n        this.parent.grid.on('delete-complete', this.infiniteDeleteHandler, this);\n        this.parent.grid.on('infinite-edit-handler', this.infiniteEditHandler, this);\n        this.parent.grid.on('infinite-crud-cancel', this.createRows, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('infinite-remote-expand', this.infiniteRemoteExpand);\n        this.parent.grid.off('delete-complete', this.infiniteDeleteHandler);\n        this.parent.grid.off('infinite-edit-handler', this.infiniteEditHandler);\n        this.parent.off(events.pagingActions, this.infinitePageAction);\n        this.parent.grid.off('infinite-crud-cancel', this.createRows);\n        this.parent.grid.off('content-ready', this.contentready);\n    };\n    /**\n     * Handles the Expand Collapse action for Remote data with infinite scrolling.\n     *\n     * @param {{ index: number, childData: ITreeData[] }} args - expanded row index and its child data\n     * @param { number } args.index - expanded row index\n     * @param { ITreeData[] } args.childData - child data of expanded row\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteRemoteExpand = function (args) {\n        var rowObjects = this.parent.grid.getRowsObject();\n        var locator = 'serviceLocator';\n        var generateRows = 'generateRows';\n        var serviceLocator = this.parent.grid.infiniteScrollModule[locator];\n        var rowRenderer = new RowRenderer(serviceLocator, null, this.parent.grid);\n        var rows = this.parent.getRows();\n        var position = args.index === rows.length - 1 ? 'after' : 'before';\n        var cols = this.parent.grid.getColumns();\n        var childRowObjects = this.parent.grid.infiniteScrollModule[generateRows](args.childData, args);\n        var childRowElements = [];\n        for (var i = 0; i < childRowObjects.length; i++) {\n            childRowElements.push(rowRenderer.render(childRowObjects[i], cols));\n        }\n        rowObjects.splice.apply(rowObjects, [args.index + 1, 0].concat(childRowObjects));\n        for (var i = 0; i < childRowElements.length; i++) {\n            if (position === 'after') {\n                rows[args.index + i][position](childRowElements[i]);\n            }\n            else {\n                rows[args.index + i + 1][position](childRowElements[i]);\n            }\n            rows.splice(args.index + 1 + i, 0, childRowElements[i]);\n        }\n        resetRowIndex(this.parent.grid, this.parent.grid.getRowsObject(), this.parent.grid.getRows(), 0);\n    };\n    /**\n     * Resetted the row index for expand collapse action for cache support.\n     *\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.contentready = function () {\n        if (this.parent.infiniteScrollSettings.enableCache && !isNullOrUndefined(this.parent.editModule)) {\n            var updateIndex = 'updateIndex';\n            this.parent.editModule[updateIndex](this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.getFrozenColumns()) {\n                this.parent.editModule[updateIndex](this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    /**\n     * Handles the page query for Data operations and CRUD actions.\n     *\n     * @param {{ result: ITreeData[], count: number, actionArgs: object }} pageingDetails - data, its count and action details\n     * @param {ITreeData[]} pageingDetails.result - data on scroll action\n     * @param {number} pageingDetails.count - data count on scroll action\n     * @param {Object} pageingDetails.actionArgs - scroll action details\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infinitePageAction = function (pageingDetails) {\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var visualData = dm.executeLocal(new Query().where(expanded));\n        var actionArgs = getValue('actionArgs', pageingDetails.actionArgs);\n        var actions = getValue('actions', this.parent.grid.infiniteScrollModule);\n        var initial = actions.some(function (value) { return value === actionArgs.requestType; });\n        var initialRender = initial ? true : this.parent.initialRender ? true : false;\n        this.visualData = visualData;\n        pageingDetails.count = visualData.length;\n        if (getValue('isPrinting', pageingDetails.actionArgs)) {\n            pageingDetails.result = visualData;\n        }\n        else {\n            var query = new Query();\n            var isCache = this.parent.infiniteScrollSettings.enableCache;\n            if (isCache && this.parent.infiniteScrollSettings.initialBlocks > this.parent.infiniteScrollSettings.maxBlocks) {\n                this.parent.infiniteScrollSettings.initialBlocks = this.parent.infiniteScrollSettings.maxBlocks;\n            }\n            var size = initialRender ?\n                this.parent.pageSettings.pageSize * this.parent.infiniteScrollSettings.initialBlocks :\n                this.parent.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (!isNullOrUndefined(actionArgs)) {\n                var lastIndex = getValue('lastIndex', this.parent.grid.infiniteScrollModule);\n                var firstIndex = getValue('firstIndex', this.parent.grid.infiniteScrollModule);\n                if (!isCache && actionArgs.requestType === 'delete') {\n                    var skip = lastIndex - actionArgs.data.length + 1;\n                    var take = actionArgs.data.length;\n                    query = query.skip(skip).take(take);\n                }\n                else if (isCache && actionArgs.requestType === 'delete' ||\n                    (actionArgs.requestType === 'save' && actionArgs.action === 'add')) {\n                    query = query.skip(firstIndex);\n                    query = query.take(this.parent.infiniteScrollSettings.initialBlocks * this.parent.pageSettings.pageSize);\n                }\n                else {\n                    query = query.page(current, size);\n                }\n            }\n            else {\n                query = query.page(current, size);\n            }\n            dm.dataSource.json = visualData;\n            if (!isCache && !isNullOrUndefined(actionArgs) && actionArgs.requestType === 'save' && actionArgs.action === 'add') {\n                pageingDetails.result = [actionArgs.data];\n            }\n            else {\n                pageingDetails.result = dm.executeLocal(query);\n            }\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * Handles the currentviewdata for delete operation.\n     *\n     * @param {{ e: InfiniteScrollArgs, result: Object[] }} args - Scroller and data details\n     * @param {InfiniteScrollArgs} args.e -  scroller details while CRUD\n     * @param {Object[]} args.result - data details while CRUD\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteEditHandler = function (args) {\n        var infiniteData = 'infiniteCurrentViewData';\n        var infiniteCurrentViewData = this.parent.grid.infiniteScrollModule[infiniteData];\n        var keys = Object.keys(infiniteCurrentViewData);\n        if (args.e.requestType === 'delete' && args.result.length > 1) {\n            for (var i = 1; i < args.result.length; i++) {\n                infiniteCurrentViewData[keys[keys.length - 1]].push(args.result[i]);\n            }\n        }\n    };\n    /**\n     * Handles the row objects for delete operation.\n     *\n     * @param {ActionEventArgs} args - crud action details\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteDeleteHandler = function (args) {\n        if (args.requestType === 'delete') {\n            var rows = this.parent.grid.getRowsObject();\n            var rowElms = this.parent.getRows();\n            var data = args.data instanceof Array ? args.data : [args.data];\n            var keyField = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            this.removeRows(rowElms, rows, data, keyField, true);\n            if (this.parent.getFrozenColumns() > 0) {\n                var mRows = this.parent.grid.getMovableRowsObject();\n                var mRowElms = this.parent.grid.getMovableRows();\n                this.removeRows(mRowElms, mRows, data, keyField);\n            }\n        }\n    };\n    /**\n     * Handles the row objects for delete operation.\n     *\n     * @param {Element[]} rowElms - row elements\n     * @param {Row<Column>[]} rows - Row object collection\n     * @param {Object[]} data - data collection\n     * @param {string} keyField - primary key name\n     * @param { boolean} isFrozen - Specifies whether frozen column enabled\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.removeRows = function (rowElms, rows, data, keyField, isFrozen) {\n        var _this = this;\n        var resetInfiniteCurrentViewData = 'resetInfiniteCurrentViewData';\n        var _loop_1 = function (i) {\n            rows.filter(function (e, index) {\n                if (e.data[keyField] === data[i][keyField]) {\n                    if (isFrozen) {\n                        var page = Math.ceil((index + 1) / _this.parent.grid.pageSettings.pageSize);\n                        _this.parent.grid.infiniteScrollModule[resetInfiniteCurrentViewData](page, index);\n                    }\n                    rows.splice(index, 1);\n                    remove(rowElms[index]);\n                    rowElms.splice(index, 1);\n                }\n            });\n        };\n        for (var i = 0; i < data.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * Handles the row objects for Add operation.\n     */\n    InfiniteScroll.prototype.createRows = function (eventArgs) {\n        var locator = 'serviceLocator';\n        var actionArgs = eventArgs.args.e;\n        var row = eventArgs.row;\n        var serviceLocator = this.parent.grid.infiniteScrollModule[locator];\n        var rowRenderer = new RowRenderer(serviceLocator, null, this.parent.grid);\n        var tbody;\n        var currentData = this.parent.getCurrentViewRecords();\n        var currentRows = eventArgs.isMovable ? this.parent.grid.getMovableRows()\n            : this.parent.grid.getDataRows();\n        if (eventArgs.isFrozenRight) {\n            tbody = this.parent.element.querySelector('.e-frozen-right-content').querySelector('tbody');\n        }\n        else {\n            tbody = !this.parent.grid.isFrozenGrid() ? this.parent.getContent().querySelector('tbody') : eventArgs.isMovable\n                ? this.parent.grid.getMovableVirtualContent().querySelector('tbody')\n                : this.parent.grid.getFrozenVirtualContent().querySelector('tbody');\n        }\n        if (this.parent.frozenRows) {\n            tbody = eventArgs.isFrozenRows && this.parent.grid.infiniteScrollModule.requestType !== 'add'\n                || !eventArgs.isFrozenRows && this.parent.grid.infiniteScrollModule.requestType === 'add'\n                ? !this.parent.grid.isFrozenGrid() ? this.parent.getHeaderContent().querySelector('tbody')\n                    : eventArgs.isMovable ? this.parent.grid.getMovableVirtualHeader().querySelector('tbody')\n                        : eventArgs.isFrozenRight ? this.parent.element.querySelector('.e-frozen-right-header').querySelector('tbody')\n                            : this.parent.grid.getFrozenVirtualHeader().querySelector('tbody') : tbody;\n        }\n        var position;\n        var addRowIndex = 'addRowIndex';\n        var newRowIndex = this.parent.editModule[addRowIndex];\n        for (var i = 0; i < row.length; i++) {\n            var newRow = rowRenderer.render(row[i], this.parent.grid.getColumns());\n            if (actionArgs.requestType === 'save' && actionArgs.action === 'add') {\n                if (getValue('selectedIndex', this.parent.editModule) !== -1 && this.parent.editSettings.newRowPosition !== 'Top') {\n                    if (this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                        position = 'after';\n                        newRowIndex += findChildrenRecords(currentData[newRowIndex + 1]).length;\n                        if (this.parent.editSettings.newRowPosition === 'Child') {\n                            newRowIndex -= 1; //// for child position already child record is added in childRecords so subtracting 1\n                        }\n                        currentRows[newRowIndex][position](newRow);\n                    }\n                    else if (this.parent.editSettings.newRowPosition === 'Above') {\n                        position = 'before';\n                        currentRows[this.parent.editModule[addRowIndex]][position](newRow);\n                    }\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    tbody.appendChild(newRow);\n                }\n                else {\n                    tbody.insertBefore(newRow, tbody.firstElementChild);\n                }\n            }\n            else if (actionArgs.requestType === 'delete') {\n                tbody.appendChild(newRow);\n            }\n        }\n        eventArgs.cancel = true;\n    };\n    /**\n     * To destroy the infiniteScroll module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    InfiniteScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return InfiniteScroll;\n}());\nexport { InfiniteScroll };\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","isCountRequired","isCheckboxcolumn","i","columns","length","showCheckbox","isFilterChildHierarchy","isNullOrUndefined","grid","searchSettings","key","hierarchyMode","allowFiltering","filterSettings","findParentRecords","records","datas","len","Object","keys","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","taskData","requireFilter","isHidden","el","style","window","getComputedStyle","display","visibility","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","batchChanges","action","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","editSettings","mode","editModule","getBatchChanges","addAct","currentViewRecords","getCurrentViewRecords","extend","newRowPosition","unshift","primaryKeys","currentdata","addAction","Array","k","_loop_1","prototype","hasOwnProperty","call","editedData","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","filter","e","p","removeChildRecords","isChildAll","editRowIndex","updateCurrentViewData","child","index_1","currentRecords","map","enableVirtualization","getValue","parentUniqueID","sortSettings","indexOf","data","setRowData","row","getRowByIndex","getRows","getRowIndexByPrimaryKey","movableRow","frozenRows","getFrozenColumns","getMovableRowByIndex","index_2","treeColumnIndex","allowRowDragAndDrop","enableImmutableMode","renderModule","cellRender","cell","cells","column","getColumns","requestType","Column","options","this","allowEditing","edit","disableHtmlEncode","allowReordering","showColumnMenu","allowSorting","allowResizing","merge","setProperties","clipboardModule","uid","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Predicate","_super","apply","Property","ChildProperty","FilterSettings","Collection","TextWrapSettings","DOC_URL","BASE_DOC_URL","IsRowDDEnabled","Logger","Grid","Inject","GridLogger","getModuleName","log","types","args","type","item","detailLists","cOp","check","success","message","generateMessage","replace","gridurl","substring","treeGridObj","dataStateChange","console","logType","treeLog","treeGrid","isPrimaryKey","treeGridDetails","mapping_fields_missing","opt","ERROR","rowDataBound","queryCellInfo","beforeDataBound","actionBegin","actionComplete","rowSelected","checkboxChange","rowDeselected","toolbarClick","beforeExcelExport","beforePdfExport","collapsed","remoteExpand","localPagedExpandCollapse","pagingActions","printGridInit","contextMenuOpen","contextMenuClick","crudAction","beginEdit","beginAdd","recordDoubleClick","cellSave","cellSaved","cellEdit","batchDelete","batchCancel","batchAdd","beforeBatchDelete","beforeBatchAdd","beforeBatchSave","batchSave","keyPressed","doubleTap","virtualActionArgs","dataListener","indexModifier","beforeStartEdit","beforeBatchCancel","detailDataBound","rowDragStartHelper","rowsAdd","rowsRemove","rowdraging","rowDropped","TreeClipboard","_this","treeCopyContent","copiedUniqueIdCollection","treeGridParent","setCopyData","withHeader","copyContent","getSelection","toString","clipBoardTextArea","rows","selectionSettings","selectedIndexes","getSelectedRowIndexes","sort","a","classList","contains","slice","querySelectorAll","uniqueid","getSelectedRecords","copyHierarchyMode","parentContentData","childContentData","headerTextArray","getVisibleColumns","headerText","cancel","trigger","Browser","userAgent","match","setSelectionRange","select","treeLevel","copy","paste","rowIndex","colIndex","destroy","childData","GridClipboard","Selection","selectedItems","filteredList","addEventListener","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","checkBox","checkWrap","parentsUntil","querySelector","closest","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","checked","rowData","getCheckedRecords","events.checkboxChange","getCheckboxcolumnIndex","mappingUid","columnIndex","col","headerCelllength","getHeaderContent","getAttribute","headerElement","rowChkBox","createElement","className","attrs","createCheckBox","label","add","insertBefore","cloneNode","firstChild","renderColumnCheckbox","setAttribute","checkboxState","allowTextWrap","width","checkbox","removeClass","container","containerELe","spanEle","innerHTML","divEle","appendChild","rowIndexes","flatRecord","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","isSummaryRow","indeter","checkChildRecords","checkBoxRecord","checkAll","filterResult","rec","currentRecord","checkedRecord","recordIndex","checkboxRecord","tr","movableTr","getMovableDataRows","checkedIndex","checkBoxclass","childLength","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","Print","GridPrint","events.printGridInit","printTreeGrid","printGrid","gridElement","events.queryCellInfo","events.rowDataBound","events.beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","reactTemplateRender","RowModifier","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","proxy_1","parentrec","cellElement","pad","filterLevel","totalIconsWidth","getColumnByUid","summaryRow","frozenColumns","enableColumnVirtualization","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","hasFilteredChildRecords","expandIcon","expand","updateTreeCell","getFrozenLeftColumnsCount","getFrozenRightColumnsCount","freezerightColumns","getFrozenRightColumns","freezeLeftColumns","getFrozenLeftColumns","movableColumns","getMovableColumns","field","notify","checkboxElement","parseInt","summaryData","rowTemplate","treeColumn","templateFn","colindex","template","templateCompiler","textContent","appendChildren","children","tempID","element","id","portals","isReact","result","DataManipulation","addedRecords","parentItems","taskIds","hierarchyData","storedIndex","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","events.remoteExpand","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","filterKey","params","param","where","addParams","hasChildMapping","qry","clone","queries","executeQuery","then","DataUtil","distinct","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","convertJSONData","tempData","selfData","mappingData","executeLocal","group","groupData","items","selfReferenceUpdate","createRecords","referenceData","shift","loadChildOnDemand","getUid","Math","ceil","random","rowDetails","isChild","gridRows","getContentTable","childRecord","targetEle","getElementsByClassName","getRowObjectFromUID","childRows","parentRow","expandingTd","detailRowModule","fetchRemoteChildData","getDataModule","generateQuery","clonequries","fn","showSpinner","currentViewData","inx","getRowsObject","haveChild","events.actionComplete","aggregates","gridQuery","aggregateQuery","summaryQuery","q","summaryModule","calculateSummaryValue","totalRecordsCount","virtualArgs","remoteVirtualAction","notifyArgs","enableInfiniteScrolling","events.expanded","contentModule","currentInfo","prevInfo","loadNext","currentPage","nextInfo","page","parentRecords","treeGridData","currentData","dataObj","isExport","expresults","exportType","isPrinting","actionArgs","actionData","actionAddArgs","primaryKeyColumnName","dataValue","isLocalData","updateAction","filterQuery","searchQuery","results","fltrQuery","srchQuery","filteredData","gridQuery_1","srtQry","srt","compFun","sortComparer","bind","direction","sortBy","sortArgs","temp","paging","printMode","actArgs","events.pagingActions","isCollapsedStatePersist","actualResults","dataResult","events.crudAction","events.batchSave","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","undefined","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","AggregateRow","EditSettings","SortDescriptor","SortSettings","InfiniteScrollSettings","TreeGrid","uniqueIDCollection","uniqueIDFilterCollection","changedRecords","deletedRecords","objectEqualityChecker","old","current","isEqual","excludeKeys","Date","getTime","TreeGrid_1","TreeGridSelection","mergePersistTreeGridData","injectedModules","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","Child","AddRow","ExpandAll","CollapseAll","RowIndent","RowOutdent","l10n","L10n","locale","sortByColumn","isMultiSort","sortModule","sortColumn","clearSorting","removeSortColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","parentTarget","summaryElement","expandAll","collapseAll","expandCollapseRequest","parentElement","findnextRowElement","selectRow","cellIndex","row_1","clearSelection","findPreviousRowElement","rIndex","cIndex","summaryRowElement","previousElementSibling","columnModel","isExpandAll","isCollapseAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","getGridColumns","member","toolbar","contextMenuItems","allowExcelExport","detailTemplate","allowPdfExport","showColumnChooser","extendRequiredModules","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","remove","loggerModule","render","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","rowDropSettings","targetID","addListener","gridContainer","height","gridRequiredModules","appendTo","renderComplete","destroyTemplateFn","clearTemplate","afterGridRender","griddata","bindGridProperties","bindedDataSource","enableRtl","columnQueryMode","getActualProperties","pagerTemplate","infiniteScrollSettings","enableAltRow","enableHover","enableAutoFill","enableAdaptiveUI","rowHeight","gridLines","getGridToolbar","toolbarTemplate","textWrapSettings","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","clipMode","templateInstance","triggerEvents","bindGridEvents","rowSelecting","isHeaderCheckboxClicked","selectionModule","selectedRowIndexes","events.rowSelected","events.rowDeselected","resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","rowDeselecting","cellDeselected","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","beforeCopy","beforePaste","TreeLogger","printComplete","actionFailure","extendedGridDataBoundEvent","extendedGridEvents","extendedGridActionEvents","extendedGridEditEvents","bindGridDragEvents","bindCallBackEvents","lastRowBorder","visiblerow","isAddBorder","isPixelHeight","dataBound","updateRowTemplate","updateAltRow","req","totalRows","persistSelection","callBackPromise_1","Deferred","beforeDataBoundArgs","resolve","callBackPromise","events.toolbarClick","toolbarargs","cellSelecting","cellselectingArgs","events.beginEdit","begineditArgs","isExpandRefresh","events.dataStateChange","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","events.cellSave","cellsaveArgs","events.cellSaved","promise","events.cellEdit","events.batchAdd","events.beforeBatchSave","events.beforeBatchAdd","events.batchDelete","events.beforeBatchDelete","events.batchCancel","treeColumnRowTemplate","datacount","defaultQuery","JsonAdaptor","dataManager","isQueryInvokedFromData","events.actionBegin","updateTreeGridModel","events.beginAdd","ag","showChildSummary","refresh","events.recordDoubleClick","events.detailDataBound","events.contextMenuClick","events.contextMenuOpen","events.rowDragStartHelper","rowDragStart","rowDrag","isEdit","events.rowdraging","rowDrop","events.rowDropped","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","allowNextRowEdit","dialog","text","getConstant","tooltipText","Search","prefixIcon","isEmptyColumnModel","treeGridColumn","gridColumn","gridColumnCollection","_i","_a","onPropertyChanged","newProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","isDataSourceChanged","eventListener","renderTable","closeEdit","treeGridElement","hasTreeGridChild","removeListener","dataBind","document","getElementById","getPersistData","keyEntity","ignoreOnPersist","currentObject","val","ignoreInArrays","addOnPersist","ignoreOnColumn","ignoreInColumn","touches","isEditCollapse","getPager","addRecord","position","saveCell","updateCell","updateRow","deleteRecord","fieldName","startEdit","editCell","enableToolbarItems","isEnable","toolbarModule","enableItems","endEdit","openColumnChooser","x","y","columnChooserModule","deleteRow","setCellValue","primaryKey","goToPage","pageNo","pagerModule","updateExternalMessage","getCellFromIndex","getColumnByField","iterateArrayOrObject","Columns","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","getVirtualColIndexByUid","isRefresh","gridColumns","stackedHeader","refreshReactColumnTemplateByUid","columnUid","rowsObj","indent","getIndentCount","getNormalizedColumnIndex","isDataRow","cellRenderer","CellRenderer","serviceLocator","td","refreshTD","getContent","mergeColumns","storedColumn","getDataRows","dRows","getHeaderTable","getRowInfo","getUidByColumnField","cols","visible","getVisibleRecords","visibleRecords","indexes","refreshUI","refreshHeader","dialogObj","targetElement","rowInfo","collapseRow","expandRow","getCollapseExpandRecords","expandingArgs","expandCollapse","expandCollapseAllChildren","collapseArgs","setHeightForFrozenContent","freeze","refreshScrollOffset","collapsingArgs","events.collapsed","firstElementChild","scrollHeight","scrollTop","getRowHeight","scrollBy","expandAtLevel","expandAction","getRecordDetails","expandByKey","expandCollapseActionByKey","isPaging","puniqueID_1","this_1","collapseAtLevel","collapseAction","collapseByKey","primaryKeyField","startIndex","expandCollapseAll","isExpandCollapseall","updateChildOnDemand","displayAction","detailrows","localExpand","sHeight","clientHeight","events.localPagedExpandCollapse","deff","data_1","length_1","rows_1","args_1","collapseRemoteChild","movableRows","freezeRightRows","rows_2","getMovableRows","getFrozenRightRows","visibleRowCount","gridRow","rcell","arg","movablerows","rightrows","collapsingTd","collapse","expandElement","cRow","eRows","i_1","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getMovableCellFromIndex","getFrozenRightRowByIndex","getFrozenRightDataRows","getFrozenRightCellFromIndex","getFrozenLeftColumnHeaderByIndex","getFrozenRightColumnHeaderByIndex","getMovableColumnHeaderByIndex","getMovableColumnsCount","getVisibleMovableCount","getVisibleFrozenRightCount","getVisibleFrozenLeftCount","getFrozenCount","cnt","isFrozen","getSelectedRowCellIndexes","baseModule","treeModule","reorderRows","fromIndexes","toIndex","rowDragAndDropModule","Complex","RowDropSettings","Event","NotifyPropertyChanges","Component","Reorder","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","RowDD","canDrop","isDraggedWithChild","isaddtoBottom","GridDragDrop","getChildrecordsByParentID","Rowdraging","events.rowsAdd","rowsAdded","events.rowsRemove","rowsRemoved","tObj","dropPosition","dropIndex","dropRows","orderToIndex","dropData","totalRecord","parentrow","updatedParent","draggedRecord","dragRecords","draggedRecord_1","dragRecords_1","deleteDragRow","refreshGridDataSource","tempDataSource","idx","droppedRecord","proxy","removeFirstrowBorder","canremove","removeLastrowBorder","isEmptyRow","islastRowIndex","updateIcon","rowEle","rowPositionHeight","addErrorElem","rowTop","toolHeight","offsetHeight","positionOffSet","getOffset","contentHeight","top","offsetTop","divide","topRowSegment","middleRowSegment","bottomRowSegment","mouseEvent","touchEvent","posy","pageY","changedTouches","isTopSegment","isMiddleRowSegment","isBottomRowSegment","removeChildBorder","removetopOrBottomBorder","addFirstrowBorder","removeErrorElem","topOrBottomBorder","addRemoveClasses","addLastRowborder","borderElem","targetRow","node","div","gridheaderEle","toolbarHeight","getToolbar","multiplegrid","offsetWidth","getScrollWidth","trElement","bottomborder","gridcontentEle","bottom","scrollElem","scrollWidth","Scroll","getScrollBarWidth","dragelem","ele","errorVal","content","parentNode","removeChild","spanContent","paddingLeft","errorelem","border","box","getBoundingClientRect","body","docElem","documentElement","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","left","round","cloneElement","cursor","rowIdx","ensuredropPosition","dropElement","ej2_instances","dragDropGrid","fromIndex","getTargetIdx","srcControl","targetIndex","isNaN","actualData","srcControlFlatData","actualIndex","selectedRecord","isByMethod","draggedRecord_2","isMultipleGrid","dragLength","reverse","_loop_2","correctIndex","offsetParent","newParentIndex","recordIndex1","dropAtTop","getChildCount","droppedRecordIndex","updateChildRecordLevel","updateChildRecord","dropMiddle","nonRepeat_1","childRecordsLength","recordLevel","childItem","deletedRow","removeRecords","flatParentData","childIndex","removeChildItem","idz","parentIndex","deletedRecordCount","i_2","i_3","draggedRecords","TreeVirtualRowModelGenerator","events.dataListener","getDatas","visualData","getDataInfo","getData","generateRows","virtualInfo","info","blockIndexes","getBlockIndexes","url","checkAndResetCache","clear","cache","groups","getBlockSize","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","ischild","checkChildExsist","parent_1","parRecord","updateParentFilteredRecord","updateFilterLevel","uniqueIDValue","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","GridExcel","updateExcelResultModel","exportRowDataBound","finalPageSetup","isCsv","Promise","isLocal","event.beforeExcelExport","customData","manipulateExportProperties","book","dtSrc","queryResult","flatsData","dataSrc","excelRow","excelrowobj","rowObj","filtercolumnlength","rowlength","excelRows","rowlevel","Boolean","expandedStatus","sublevelState","state","grouping","outlineLevel","isCollapsed","worksheets","pageSetup","isSummaryRowBelow","PdfExport","GridPdf","updatePdfResultModel","event.beforePdfExport","customsData","manipulatePdfProperties","flatDatas","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","primaryKeyField_1","ret","pageRoot","pagedResults","newResults","t","res","pageingDetails","propname","skip","size","pageSize","take","dm_1","or","parents_1","floor","Toolbar","tool","refreshToolbar","toolbarClickHandler","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","summaryLength","dataLength","getChildRecordsLength","summaryRowIndex","len_1","createSummaryItem","idx_1","currentIndex","summaryParent","length_2","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","tempObj","requiresCount","summaryKey","sumData","toLowerCase","calculateAggregate","disp","value_1","summaryformat","Sort","GridSort","flatSortedData","updateModel","createdSortedRecords","sortParams","iterateSort","childSort","ColumnMenu","GridColumnMenu","getColumnMenu","columnMenuModule","ContextMenu","cmenu","addRow","editRecord","BatchEdit","batchChildCount","batchAddedRecords","batchDeletedRecords","batchAddRowRecord","batchRecords","isAdd","batchPageAction","batchCancelAction","immutableBatchAction","nextCellIndex","getBatchRecords","getAddRowIndex","getSelectedIndex","getBatchChildCount","actualCellIndex","frozenCols","columnObject","getColumnByIndex","added","primaryKey_1","currentDataIndex","indexvalue","rowObjectIndex","getActualRowObjectIndex","newBatchRowAdded","changes","batchIndex","primaryParent","childRecordCount","updateChildCount","updateRowIndex","focusModule","table","matrix","childs","primarykey","parentRowIndex","getRowElementByUID","totalCount","selectedRecords","mRows","deleterecords","deleteUniqueID","positionIndex","updatedRecords","primarykey_1","addRecords","totalRecords","endIndex","indexValue","Edit","prevAriaRowIndex","isAddedRowByMethod","GridEdit","previousNewRowPosition","internalProperties","batchEditModule","events.keyPressed","lastCellTab","contentready","editActionEvents","events.doubleTap","gridDblClick","customCellSave","savePreviousRowPosition","events.beforeStartEdit","events.beforeBatchCancel","resetIsOnBatch","getRowPosition","doubleClickTarget","addArgs","ariaRowIndex","applyFormValidation","eventArgs","treeObj","keyData","paramsLength","infiniteAddAction","rowObjects","newRowObject","newRowObjectIndex","newRecord","updateInfiniteCurrentViewData","movableRowsObject","getMovableRowsObject","isCache","enableCache","resetRowIndex","updateIndex","newRowIndex","dataIndex","infiniteCurrentViewData","infiniteScrollModule","isOnBatch","updateGridEditMode","keyPress","prom","celleditArgs","request","toolbarID","cellDetails","treeCell","afterCellSave","form","rowIndex_1","primaryKeys_1","isTabLastRow","update","fromTable","previousValue","editArgs","filterChoiceCount","excelSearchOperator","mRow","aggregateModule","destroyWidgets","formObj","restoreFocus","saveArgs","previousData","data1","treeColIndex","l","data2","treecell","firstAriaIndex","lastAriaIndex","withinRange","isVirtualization","focussedElement","activeElement","newFreezeRowObject","rightFrozenRows","errors","focus","primaryKeys_2","selector","beginAddEdit","childRecordCount1","currentDataIndex1","deletedValues","previousEditMode","previousGridEditMode","editFormValidate","destroyForm","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","setIndentVisibility","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","detailElement","previousSibling","expandClass","classlist","gridClas","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","VirtualTreeContentRenderer","locator","isExpandCollapse","translateY","maxiPage","recordAdded","preTranslate","isRemoteExpand","getModelGenerator","events.virtualActionArgs","virtualOtherAction","events.indexModifier","setTop","nextSetResIndex","lastIndex","onDataReady","refreshContentRows","observers","observes","scrollArgs","scrollListeners","onEnteredAction","dataBoundEvent","rowSelectedEvent","toSelectVirtualRow","onActionComplete","virtualEditSuccess","resetIseditValue","cancelEdit","toSelectRowOnContextOpen","refreshCell","cellFocus","setVirtualHeight","contents","debounceEvent","TreeInterSectionObserver","getPanel","getTranslateY","sTop","cHeight","isOnenter","initialRowTop","gridTop","containerRect","observer","generateCells","generateCell","rowId","cellType","colSpan","oIndex","foreignKeyData","isDataCell","isTemplate","rowID","Data","isForeignKey","isForeignColumn","Cell","rowPosition","withInRange","restoreEditState","restoreNewRow","isWheel","isIE","xAxis","axis","getColumnOffset","vgenerator","getColumnIndexes","columnIndexes","cOffsets","maxLeft","virtualEle","adjustTable","header","sentinel","outBuffer","upScroll","offset","downScroll","vHeight","lastInx","remains","rowPt","firsttdinx","isLastBlock","viewInfo","previousInfo","setColumnIndexesInView","loadSelf","event","appendContent","newChild","sentinelInfo","cBlock","cOffset","setWrapperWidth","name","getTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","onEnterCallback","virtualScrollHandlers","delay","debounced50","debounce","prevTop","prevLeft","movableContainer","scrollbar","delta","clearTimeout","setTimeout","preventDefault","returnValue","axes","entered","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","resourceCount","sIndex","instantiateRenderers","parentGrid","renderer","getService","RenderType","Header","VirtualHeaderRenderer","Content","ensurePageSize","GridVirtualScroll","Freeze","FreezeColumn","dblClickHandler","frozenRightRows","frozenrows","rData","queryselector","freezeModule","ColumnChooser","GridColumnChooser","X","Y","InfiniteScroll","GridInfiniteScroll","infinitePageAction","infiniteRemoteExpand","infiniteDeleteHandler","infiniteEditHandler","createRows","rowRenderer","RowRenderer","childRowObjects","childRowElements","initialBlocks","maxBlocks","firstIndex","rowElms","keyField","removeRows","mRowElms","tbody","currentRows","isMovable","isFrozenRight","isFrozenGrid","getMovableVirtualContent","getFrozenVirtualContent","isFrozenRows","getMovableVirtualHeader","getFrozenVirtualHeader","newRow"],"mappings":"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47B,WACDre,EAAS/hB,UAAW,iBAAa,GACpCwE,IACI47B,WACDre,EAAS/hB,UAAW,gBAAY,GACnCwE,IACI47B,WACDre,EAAS/hB,UAAW,iBAAa,GACpCwE,IACI47B,WACDre,EAAS/hB,UAAW,mBAAe,GACtCwE,IACI47B,WACDre,EAAS/hB,UAAW,sBAAkB,GACzCwE,IACI47B,WACDre,EAAS/hB,UAAW,iBAAa,GACpCwE,IACI47B,WACDre,EAAS/hB,UAAW,gBAAY,GACnCwE,IACI47B,WACDre,EAAS/hB,UAAW,mBAAe,GACtCwE,IACI47B,WACDre,EAAS/hB,UAAW,mBAAe,GACtCwE,IACI47B,WACDre,EAAS/hB,UAAW,sBAAkB,GACzCwE,IACI47B,WACDre,EAAS/hB,UAAW,yBAAqB,GAC5CwE,IACI47B,WACDre,EAAS/hB,UAAW,uBAAmB,GAC1CwE,IACI47B,WACDre,EAAS/hB,UAAW,gBAAY,GACnCwE,IACI47B,WACDre,EAAS/hB,UAAW,qBAAiB,GACxCwE,IACI47B,WACDre,EAAS/hB,UAAW,iBAAa,GACpCwE,IACI47B,WACDre,EAAS/hB,UAAW,yBAAqB,GAC5CwE,IACI47B,WACDre,EAAS/hB,UAAW,uBAAmB,GAC1CwE,IACI47B,WACDre,EAAS/hB,UAAW,yBAAqB,GAC5CwE,IACI47B,WACDre,EAAS/hB,UAAW,oBAAgB,GACvCwE,IACI47B,WACDre,EAAS/hB,UAAW,uBAAmB,GAC1CwE,IACI47B,WACDre,EAAS/hB,UAAW,qBAAiB,GACxCwE,IACIc,YAAS,IACVyc,EAAS/hB,UAAW,sBAAkB,GACzCwE,IACI47B,WACDre,EAAS/hB,UAAW,oBAAgB,GACvCwE,IACI47B,WACDre,EAAS/hB,UAAW,mBAAe,GACtCwE,IACI47B,WACDre,EAAS/hB,UAAW,sBAAkB,GACzCwE,IACI47B,WACDre,EAAS/hB,UAAW,qBAAiB,GACxCwE,IACI47B,WACDre,EAAS/hB,UAAW,sBAAkB,GACzCwE,IACI47B,WACDre,EAAS/hB,UAAW,qBAAiB,GACxCwE,IACI47B,WACDre,EAAS/hB,UAAW,sBAAkB,GACzCwE,IACI47B,WACDre,EAAS/hB,UAAW,uBAAmB,GAC1CwE,IACI47B,WACDre,EAAS/hB,UAAW,oBAAgB,GACvCwE,IACI47B,WACDre,EAAS/hB,UAAW,uBAAmB,GAC1CwE,IACI47B,WACDre,EAAS/hB,UAAW,sBAAkB,GACzCwE,IACI47B,WACDre,EAAS/hB,UAAW,mBAAe,GACtCwE,IACI47B,WACDre,EAAS/hB,UAAW,gBAAY,GACnCwE,IACI47B,WACDre,EAAS/hB,UAAW,kBAAc,GACrCwE,IACI47B,WACDre,EAAS/hB,UAAW,uBAAmB,GAC1CwE,IACI47B,WACDre,EAAS/hB,UAAW,kBAAc,GACrCwE,IACI47B,WACDre,EAAS/hB,UAAW,kBAAc,GACrCwE,IACI47B,WACDre,EAAS/hB,UAAW,sBAAkB,GACzCwE,IACI47B,WACDre,EAAS/hB,UAAW,qBAAiB,GACxCwE,IACI47B,WACDre,EAAS/hB,UAAW,mBAAe,GACtCwE,IACI47B,WACDre,EAAS/hB,UAAW,oBAAgB,GACvCwE,IACI47B,WACDre,EAAS/hB,UAAW,uBAAmB,GAC1CwE,IACI47B,WACDre,EAAS/hB,UAAW,uBAAmB,GAC1CwE,IACI47B,WACDre,EAAS/hB,UAAW,wBAAoB,GAC3CwE,IACI47B,WACDre,EAAS/hB,UAAW,kBAAc,GACrCwE,IACI47B,WACDre,EAAS/hB,UAAW,mBAAe,GACtCwE,IACI47B,WACDre,EAAS/hB,UAAW,eAAW,GAClCwE,IACI47B,WACDre,EAAS/hB,UAAW,oBAAgB,GACvCwE,IACI47B,WACDre,EAAS/hB,UAAW,0BAAsB,GAC7CwE,IACI47B,WACDre,EAAS/hB,UAAW,eAAW,GAClCwE,IACIc,YAAU,IACXyc,EAAS/hB,UAAW,wBAAoB,GAC3CwE,IACI07B,aAAYtsB,KACbmO,EAAS/hB,UAAW,yBAAqB,GAC5CwE,IACIc,YAAS,IACVyc,EAAS/hB,UAAW,wBAAoB,GAC3CwE,IACIc,YAAS,IACVyc,EAAS/hB,UAAW,sBAAkB,GACzCwE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"}